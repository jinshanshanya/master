/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2018-2019 Erik Moqvist
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This file was generated by cantools version 32.21.0 Sat Jan 18 19:20:53 2020.
 */

#include <string.h>

#include "pved_cls.h"

static inline uint8_t pack_left_shift_u8(
    uint8_t value,
    uint8_t shift,
    uint8_t mask)
{
    return (uint8_t)((uint8_t)(value << shift) & mask);
}

static inline uint8_t pack_left_shift_u16(
    uint16_t value,
    uint8_t shift,
    uint8_t mask)
{
    return (uint8_t)((uint8_t)(value << shift) & mask);
}

static inline uint8_t pack_right_shift_u16(
    uint16_t value,
    uint8_t shift,
    uint8_t mask)
{
    return (uint8_t)((uint8_t)(value >> shift) & mask);
}

static inline uint16_t unpack_left_shift_u16(
    uint8_t value,
    uint8_t shift,
    uint8_t mask)
{
    return (uint16_t)((uint16_t)(value & mask) << shift);
}

static inline uint8_t unpack_right_shift_u8(
    uint8_t value,
    uint8_t shift,
    uint8_t mask)
{
    return (uint8_t)((uint8_t)(value & mask) >> shift);
}

static inline uint16_t unpack_right_shift_u16(
    uint8_t value,
    uint8_t shift,
    uint8_t mask)
{
    return (uint16_t)((uint16_t)(value & mask) >> shift);
}

int pved_cls_stat_msg_8_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_8_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->imd_status_s, 6u, 0xc0u);
    dst_p[1] |= pack_left_shift_u8(src_p->imd_confidence_counter_s, 0u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->svc_integral_part_s, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->svc_integral_part_s, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_8_s_unpack(
    struct pved_cls_stat_msg_8_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->imd_status_s |= unpack_right_shift_u8(src_p[0], 6u, 0xc0u);
    dst_p->imd_confidence_counter_s |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
    dst_p->svc_integral_part_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->svc_integral_part_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);

    return (0);
}

uint8_t pved_cls_stat_msg_8_s_imd_status_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_8_s_imd_status_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_8_s_imd_status_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_8_s_imd_confidence_counter_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_8_s_imd_confidence_counter_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_8_s_imd_confidence_counter_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_8_s_svc_integral_part_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_8_s_svc_integral_part_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_8_s_svc_integral_part_s_is_in_range(uint16_t value)
{
    return ((value >= 1000u) && (value <= 3000u));
}

int pved_cls_stat_msg_8_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_8_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->imd_status_m, 6u, 0xc0u);
    dst_p[1] |= pack_left_shift_u8(src_p->imd_confidence_counter_m, 0u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->svc_integral_part_m, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->svc_integral_part_m, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_8_m_unpack(
    struct pved_cls_stat_msg_8_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->imd_status_m |= unpack_right_shift_u8(src_p[0], 6u, 0xc0u);
    dst_p->imd_confidence_counter_m |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
    dst_p->svc_integral_part_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->svc_integral_part_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);

    return (0);
}

uint8_t pved_cls_stat_msg_8_m_imd_status_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_8_m_imd_status_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_8_m_imd_status_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_8_m_imd_confidence_counter_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_8_m_imd_confidence_counter_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_8_m_imd_confidence_counter_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_8_m_svc_integral_part_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_8_m_svc_integral_part_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_8_m_svc_integral_part_m_is_in_range(uint16_t value)
{
    return ((value >= 1000u) && (value <= 3000u));
}

int pved_cls_elobau_ejm2_r_pack(
    uint8_t *dst_p,
    const struct pved_cls_elobau_ejm2_r_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->elobau_neutral_r, 0u, 0x03u);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_left_r, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_right_r, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u16(src_p->elobau_pos_r, 6u, 0xc0u);
    dst_p[1] |= pack_right_shift_u16(src_p->elobau_pos_r, 2u, 0xffu);

    return (8);
}

int pved_cls_elobau_ejm2_r_unpack(
    struct pved_cls_elobau_ejm2_r_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->elobau_neutral_r |= unpack_right_shift_u8(src_p[0], 0u, 0x03u);
    dst_p->elobau_left_r |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->elobau_right_r |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->elobau_pos_r |= unpack_right_shift_u16(src_p[0], 6u, 0xc0u);
    dst_p->elobau_pos_r |= unpack_left_shift_u16(src_p[1], 2u, 0xffu);

    return (0);
}

uint8_t pved_cls_elobau_ejm2_r_elobau_neutral_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm2_r_elobau_neutral_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm2_r_elobau_neutral_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_ejm2_r_elobau_left_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm2_r_elobau_left_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm2_r_elobau_left_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_ejm2_r_elobau_right_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm2_r_elobau_right_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm2_r_elobau_right_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_elobau_ejm2_r_elobau_pos_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_elobau_ejm2_r_elobau_pos_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm2_r_elobau_pos_r_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

int pved_cls_elobau_ejm1_r_pack(
    uint8_t *dst_p,
    const struct pved_cls_elobau_ejm1_r_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->elobau_neutral_r, 0u, 0x03u);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_left_r, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_right_r, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u16(src_p->elobau_pos_r, 6u, 0xc0u);
    dst_p[1] |= pack_right_shift_u16(src_p->elobau_pos_r, 2u, 0xffu);

    return (8);
}

int pved_cls_elobau_ejm1_r_unpack(
    struct pved_cls_elobau_ejm1_r_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->elobau_neutral_r |= unpack_right_shift_u8(src_p[0], 0u, 0x03u);
    dst_p->elobau_left_r |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->elobau_right_r |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->elobau_pos_r |= unpack_right_shift_u16(src_p[0], 6u, 0xc0u);
    dst_p->elobau_pos_r |= unpack_left_shift_u16(src_p[1], 2u, 0xffu);

    return (0);
}

uint8_t pved_cls_elobau_ejm1_r_elobau_neutral_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm1_r_elobau_neutral_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm1_r_elobau_neutral_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_ejm1_r_elobau_left_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm1_r_elobau_left_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm1_r_elobau_left_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_ejm1_r_elobau_right_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm1_r_elobau_right_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm1_r_elobau_right_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_elobau_ejm1_r_elobau_pos_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_elobau_ejm1_r_elobau_pos_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm1_r_elobau_pos_r_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

int pved_cls_elobau_ejm2_p_pack(
    uint8_t *dst_p,
    const struct pved_cls_elobau_ejm2_p_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->elobau_neutral_p, 0u, 0x03u);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_left_p, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_right_p, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u16(src_p->elobau_pos_p, 6u, 0xc0u);
    dst_p[1] |= pack_right_shift_u16(src_p->elobau_pos_p, 2u, 0xffu);

    return (8);
}

int pved_cls_elobau_ejm2_p_unpack(
    struct pved_cls_elobau_ejm2_p_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->elobau_neutral_p |= unpack_right_shift_u8(src_p[0], 0u, 0x03u);
    dst_p->elobau_left_p |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->elobau_right_p |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->elobau_pos_p |= unpack_right_shift_u16(src_p[0], 6u, 0xc0u);
    dst_p->elobau_pos_p |= unpack_left_shift_u16(src_p[1], 2u, 0xffu);

    return (0);
}

uint8_t pved_cls_elobau_ejm2_p_elobau_neutral_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm2_p_elobau_neutral_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm2_p_elobau_neutral_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_ejm2_p_elobau_left_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm2_p_elobau_left_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm2_p_elobau_left_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_ejm2_p_elobau_right_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm2_p_elobau_right_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm2_p_elobau_right_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_elobau_ejm2_p_elobau_pos_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_elobau_ejm2_p_elobau_pos_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm2_p_elobau_pos_p_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

int pved_cls_elobau_ejm1_p_pack(
    uint8_t *dst_p,
    const struct pved_cls_elobau_ejm1_p_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->elobau_neutral_p, 0u, 0x03u);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_left_p, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_right_p, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u16(src_p->elobau_pos_p, 6u, 0xc0u);
    dst_p[1] |= pack_right_shift_u16(src_p->elobau_pos_p, 2u, 0xffu);

    return (8);
}

int pved_cls_elobau_ejm1_p_unpack(
    struct pved_cls_elobau_ejm1_p_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->elobau_neutral_p |= unpack_right_shift_u8(src_p[0], 0u, 0x03u);
    dst_p->elobau_left_p |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->elobau_right_p |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->elobau_pos_p |= unpack_right_shift_u16(src_p[0], 6u, 0xc0u);
    dst_p->elobau_pos_p |= unpack_left_shift_u16(src_p[1], 2u, 0xffu);

    return (0);
}

uint8_t pved_cls_elobau_ejm1_p_elobau_neutral_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm1_p_elobau_neutral_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm1_p_elobau_neutral_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_ejm1_p_elobau_left_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm1_p_elobau_left_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm1_p_elobau_left_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_ejm1_p_elobau_right_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_ejm1_p_elobau_right_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm1_p_elobau_right_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_elobau_ejm1_p_elobau_pos_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_elobau_ejm1_p_elobau_pos_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_ejm1_p_elobau_pos_p_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

int pved_cls_elobau_bjm2_r_pack(
    uint8_t *dst_p,
    const struct pved_cls_elobau_bjm2_r_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->elobau_neutral_r, 0u, 0x03u);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_left_r, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_right_r, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u16(src_p->elobau_pos_r, 6u, 0xc0u);
    dst_p[1] |= pack_right_shift_u16(src_p->elobau_pos_r, 2u, 0xffu);

    return (8);
}

int pved_cls_elobau_bjm2_r_unpack(
    struct pved_cls_elobau_bjm2_r_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->elobau_neutral_r |= unpack_right_shift_u8(src_p[0], 0u, 0x03u);
    dst_p->elobau_left_r |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->elobau_right_r |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->elobau_pos_r |= unpack_right_shift_u16(src_p[0], 6u, 0xc0u);
    dst_p->elobau_pos_r |= unpack_left_shift_u16(src_p[1], 2u, 0xffu);

    return (0);
}

uint8_t pved_cls_elobau_bjm2_r_elobau_neutral_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm2_r_elobau_neutral_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm2_r_elobau_neutral_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_bjm2_r_elobau_left_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm2_r_elobau_left_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm2_r_elobau_left_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_bjm2_r_elobau_right_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm2_r_elobau_right_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm2_r_elobau_right_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_elobau_bjm2_r_elobau_pos_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_elobau_bjm2_r_elobau_pos_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm2_r_elobau_pos_r_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

int pved_cls_elobau_bjm1_r_pack(
    uint8_t *dst_p,
    const struct pved_cls_elobau_bjm1_r_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->elobau_neutral_r, 0u, 0x03u);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_left_r, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_right_r, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u16(src_p->elobau_pos_r, 6u, 0xc0u);
    dst_p[1] |= pack_right_shift_u16(src_p->elobau_pos_r, 2u, 0xffu);

    return (8);
}

int pved_cls_elobau_bjm1_r_unpack(
    struct pved_cls_elobau_bjm1_r_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->elobau_neutral_r |= unpack_right_shift_u8(src_p[0], 0u, 0x03u);
    dst_p->elobau_left_r |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->elobau_right_r |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->elobau_pos_r |= unpack_right_shift_u16(src_p[0], 6u, 0xc0u);
    dst_p->elobau_pos_r |= unpack_left_shift_u16(src_p[1], 2u, 0xffu);

    return (0);
}

uint8_t pved_cls_elobau_bjm1_r_elobau_neutral_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm1_r_elobau_neutral_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm1_r_elobau_neutral_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_bjm1_r_elobau_left_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm1_r_elobau_left_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm1_r_elobau_left_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_bjm1_r_elobau_right_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm1_r_elobau_right_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm1_r_elobau_right_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_elobau_bjm1_r_elobau_pos_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_elobau_bjm1_r_elobau_pos_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm1_r_elobau_pos_r_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

int pved_cls_elobau_bjm2_p_pack(
    uint8_t *dst_p,
    const struct pved_cls_elobau_bjm2_p_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->elobau_neutral_p, 0u, 0x03u);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_left_p, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_right_p, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u16(src_p->elobau_pos_p, 6u, 0xc0u);
    dst_p[1] |= pack_right_shift_u16(src_p->elobau_pos_p, 2u, 0xffu);

    return (8);
}

int pved_cls_elobau_bjm2_p_unpack(
    struct pved_cls_elobau_bjm2_p_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->elobau_neutral_p |= unpack_right_shift_u8(src_p[0], 0u, 0x03u);
    dst_p->elobau_left_p |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->elobau_right_p |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->elobau_pos_p |= unpack_right_shift_u16(src_p[0], 6u, 0xc0u);
    dst_p->elobau_pos_p |= unpack_left_shift_u16(src_p[1], 2u, 0xffu);

    return (0);
}

uint8_t pved_cls_elobau_bjm2_p_elobau_neutral_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm2_p_elobau_neutral_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm2_p_elobau_neutral_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_bjm2_p_elobau_left_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm2_p_elobau_left_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm2_p_elobau_left_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_bjm2_p_elobau_right_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm2_p_elobau_right_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm2_p_elobau_right_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_elobau_bjm2_p_elobau_pos_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_elobau_bjm2_p_elobau_pos_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm2_p_elobau_pos_p_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

int pved_cls_elobau_bjm1_p_pack(
    uint8_t *dst_p,
    const struct pved_cls_elobau_bjm1_p_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->elobau_neutral_p, 0u, 0x03u);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_left_p, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->elobau_right_p, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u16(src_p->elobau_pos_p, 6u, 0xc0u);
    dst_p[1] |= pack_right_shift_u16(src_p->elobau_pos_p, 2u, 0xffu);

    return (8);
}

int pved_cls_elobau_bjm1_p_unpack(
    struct pved_cls_elobau_bjm1_p_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->elobau_neutral_p |= unpack_right_shift_u8(src_p[0], 0u, 0x03u);
    dst_p->elobau_left_p |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->elobau_right_p |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->elobau_pos_p |= unpack_right_shift_u16(src_p[0], 6u, 0xc0u);
    dst_p->elobau_pos_p |= unpack_left_shift_u16(src_p[1], 2u, 0xffu);

    return (0);
}

uint8_t pved_cls_elobau_bjm1_p_elobau_neutral_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm1_p_elobau_neutral_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm1_p_elobau_neutral_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_bjm1_p_elobau_left_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm1_p_elobau_left_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm1_p_elobau_left_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_elobau_bjm1_p_elobau_right_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_elobau_bjm1_p_elobau_right_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm1_p_elobau_right_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_elobau_bjm1_p_elobau_pos_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_elobau_bjm1_p_elobau_pos_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_elobau_bjm1_p_elobau_pos_p_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

int pved_cls_stat_msg_7_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_7_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->joy1_s, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->joy1_s, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->joy2_s, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->joy2_s, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->joy_flw_req_s, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->joy_flw_req_s, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_7_s_unpack(
    struct pved_cls_stat_msg_7_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->joy1_s |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->joy1_s |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->joy2_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->joy2_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->joy_flw_req_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->joy_flw_req_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_stat_msg_7_s_joy1_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_7_s_joy1_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_7_s_joy1_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_7_s_joy2_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_7_s_joy2_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_7_s_joy2_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_7_s_joy_flw_req_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_7_s_joy_flw_req_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_7_s_joy_flw_req_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

int pved_cls_stat_msg_7_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_7_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->joy1_m, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->joy1_m, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->joy2_m, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->joy2_m, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->joy_flw_req_m, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->joy_flw_req_m, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_7_m_unpack(
    struct pved_cls_stat_msg_7_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->joy1_m |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->joy1_m |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->joy2_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->joy2_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->joy_flw_req_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->joy_flw_req_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_stat_msg_7_m_joy1_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_7_m_joy1_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_7_m_joy1_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_7_m_joy2_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_7_m_joy2_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_7_m_joy2_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_7_m_joy_flw_req_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_7_m_joy_flw_req_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_7_m_joy_flw_req_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

int pved_cls_gps2_gms_pack(
    uint8_t *dst_p,
    const struct pved_cls_gps2_gms_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->gps2_estimated_curvature, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->gps2_estimated_curvature, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u8(src_p->gps2_system_lockout, 0u, 0x03u);
    dst_p[2] |= pack_left_shift_u8(src_p->gps2_system_ready, 2u, 0x0cu);
    dst_p[2] |= pack_left_shift_u8(src_p->gps2_str_input_pos_status, 4u, 0x30u);
    dst_p[2] |= pack_left_shift_u8(src_p->gps2_req_reset, 6u, 0xc0u);
    dst_p[3] |= pack_left_shift_u8(src_p->gps2_limit_status, 5u, 0xe0u);
    dst_p[4] |= pack_left_shift_u8(src_p->gps2_exit_reason, 0u, 0x3fu);

    return (8);
}

int pved_cls_gps2_gms_unpack(
    struct pved_cls_gps2_gms_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->gps2_estimated_curvature |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->gps2_estimated_curvature |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->gps2_system_lockout |= unpack_right_shift_u8(src_p[2], 0u, 0x03u);
    dst_p->gps2_system_ready |= unpack_right_shift_u8(src_p[2], 2u, 0x0cu);
    dst_p->gps2_str_input_pos_status |= unpack_right_shift_u8(src_p[2], 4u, 0x30u);
    dst_p->gps2_req_reset |= unpack_right_shift_u8(src_p[2], 6u, 0xc0u);
    dst_p->gps2_limit_status |= unpack_right_shift_u8(src_p[3], 5u, 0xe0u);
    dst_p->gps2_exit_reason |= unpack_right_shift_u8(src_p[4], 0u, 0x3fu);

    return (0);
}

uint16_t pved_cls_gps2_gms_gps2_estimated_curvature_encode(double value)
{
    return (uint16_t)((value - -8032.0) / 0.25);
}

double pved_cls_gps2_gms_gps2_estimated_curvature_decode(uint16_t value)
{
    return (((double)value * 0.25) + -8032.0);
}

bool pved_cls_gps2_gms_gps2_estimated_curvature_is_in_range(uint16_t value)
{
    return (value <= 64256u);
}

uint8_t pved_cls_gps2_gms_gps2_system_lockout_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps2_gms_gps2_system_lockout_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps2_gms_gps2_system_lockout_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_gps2_gms_gps2_system_ready_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps2_gms_gps2_system_ready_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps2_gms_gps2_system_ready_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_gps2_gms_gps2_str_input_pos_status_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps2_gms_gps2_str_input_pos_status_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps2_gms_gps2_str_input_pos_status_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_gps2_gms_gps2_req_reset_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps2_gms_gps2_req_reset_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps2_gms_gps2_req_reset_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_gps2_gms_gps2_limit_status_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps2_gms_gps2_limit_status_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps2_gms_gps2_limit_status_is_in_range(uint8_t value)
{
    return (value <= 7u);
}

uint8_t pved_cls_gps2_gms_gps2_exit_reason_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps2_gms_gps2_exit_reason_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps2_gms_gps2_exit_reason_is_in_range(uint8_t value)
{
    return (value <= 7u);
}

int pved_cls_gps2_gmc_pack(
    uint8_t *dst_p,
    const struct pved_cls_gps2_gmc_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->gps2_curvature_cmd, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->gps2_curvature_cmd, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u8(src_p->gps2_str_cmd_status, 0u, 0x03u);

    return (8);
}

int pved_cls_gps2_gmc_unpack(
    struct pved_cls_gps2_gmc_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->gps2_curvature_cmd |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->gps2_curvature_cmd |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->gps2_str_cmd_status |= unpack_right_shift_u8(src_p[2], 0u, 0x03u);

    return (0);
}

uint16_t pved_cls_gps2_gmc_gps2_curvature_cmd_encode(double value)
{
    return (uint16_t)((value - -8032.0) / 0.25);
}

double pved_cls_gps2_gmc_gps2_curvature_cmd_decode(uint16_t value)
{
    return (((double)value * 0.25) + -8032.0);
}

bool pved_cls_gps2_gmc_gps2_curvature_cmd_is_in_range(uint16_t value)
{
    return (value <= 64256u);
}

uint8_t pved_cls_gps2_gmc_gps2_str_cmd_status_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps2_gmc_gps2_str_cmd_status_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps2_gmc_gps2_str_cmd_status_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

int pved_cls_j1939_ack_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_j1939_ack_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->control_byte_s, 0u, 0xffu);

    return (8);
}

int pved_cls_j1939_ack_s_unpack(
    struct pved_cls_j1939_ack_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->control_byte_s |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);

    return (0);
}

uint8_t pved_cls_j1939_ack_s_control_byte_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_j1939_ack_s_control_byte_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_j1939_ack_s_control_byte_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

int pved_cls_j1939_ack_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_j1939_ack_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->control_byte_m, 0u, 0xffu);

    return (8);
}

int pved_cls_j1939_ack_m_unpack(
    struct pved_cls_j1939_ack_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->control_byte_m |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);

    return (0);
}

uint8_t pved_cls_j1939_ack_m_control_byte_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_j1939_ack_m_control_byte_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_j1939_ack_m_control_byte_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

int pved_cls_req_pgn_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_req_pgn_s_t *src_p,
    size_t size)
{
    if (size < 3u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 3);

    dst_p[0] |= pack_left_shift_u8(src_p->req_pgn_msb_s, 0u, 0xffu);
    dst_p[1] |= pack_left_shift_u8(src_p->req_pgn_lsb_s, 0u, 0xffu);

    return (3);
}

int pved_cls_req_pgn_s_unpack(
    struct pved_cls_req_pgn_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 3u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->req_pgn_msb_s |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);
    dst_p->req_pgn_lsb_s |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);

    return (0);
}

uint8_t pved_cls_req_pgn_s_req_pgn_msb_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_req_pgn_s_req_pgn_msb_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_req_pgn_s_req_pgn_msb_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_req_pgn_s_req_pgn_lsb_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_req_pgn_s_req_pgn_lsb_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_req_pgn_s_req_pgn_lsb_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

int pved_cls_req_pgn_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_req_pgn_m_t *src_p,
    size_t size)
{
    if (size < 3u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 3);

    dst_p[0] |= pack_left_shift_u8(src_p->req_pgn_msb_m, 0u, 0xffu);
    dst_p[1] |= pack_left_shift_u8(src_p->req_pgn_lsb_m, 0u, 0xffu);

    return (3);
}

int pved_cls_req_pgn_m_unpack(
    struct pved_cls_req_pgn_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 3u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->req_pgn_msb_m |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);
    dst_p->req_pgn_lsb_m |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);

    return (0);
}

uint8_t pved_cls_req_pgn_m_req_pgn_msb_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_req_pgn_m_req_pgn_msb_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_req_pgn_m_req_pgn_msb_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_req_pgn_m_req_pgn_lsb_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_req_pgn_m_req_pgn_lsb_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_req_pgn_m_req_pgn_lsb_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

int pved_cls_dm1_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_dm1_s_t *src_p,
    size_t size)
{
    (void)src_p;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    return (8);
}

int pved_cls_dm1_s_unpack(
    struct pved_cls_dm1_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    (void)src_p;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    return (0);
}

int pved_cls_dm1_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_dm1_m_t *src_p,
    size_t size)
{
    (void)src_p;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    return (8);
}

int pved_cls_dm1_m_unpack(
    struct pved_cls_dm1_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    (void)src_p;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    return (0);
}

int pved_cls_ser_tool_reply_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_ser_tool_reply_s_t *src_p,
    size_t size)
{
    uint16_t p3091_s;
    uint16_t p3093_s;
    uint16_t p3095_s;
    uint16_t p3128_s;
    uint16_t p3130_s;
    uint16_t p3162_s;
    uint16_t p3164_s;
    uint16_t p3166_s;
    uint16_t p3168_s;
    uint16_t p3170_s;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->ser_tool_reply_xid_s, 0u, 0xffu);

    switch (src_p->ser_tool_reply_xid_s) {

    case 131:
        dst_p[1] |= pack_left_shift_u8(src_p->reply_sensor5_v_state_s, 4u, 0x30u);
        dst_p[1] |= pack_left_shift_u8(src_p->reply_css_state_s, 6u, 0xc0u);
        dst_p[2] |= pack_left_shift_u16(src_p->reply_req_spool_pos_s, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->reply_req_spool_pos_s, 8u, 0xffu);
        dst_p[4] |= pack_left_shift_u8(src_p->reply_req_cov_pwm_s, 0u, 0xffu);
        break;

    case 135:
        dst_p[1] |= pack_left_shift_u8(src_p->reply_param_data_length_s, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u16(src_p->reply_param_address_s, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->reply_param_address_s, 8u, 0xffu);

        switch (src_p->reply_param_address_s) {

        case 3072:
            dst_p[4] |= pack_left_shift_u8(src_p->p3072_s, 0u, 0xffu);
            break;

        case 3073:
            dst_p[4] |= pack_left_shift_u8(src_p->p3073_s, 0u, 0xffu);
            break;

        case 3074:
            dst_p[4] |= pack_left_shift_u16(src_p->p3074_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3074_s, 8u, 0xffu);
            break;

        case 3076:
            dst_p[4] |= pack_left_shift_u16(src_p->p3076_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3076_s, 8u, 0xffu);
            break;

        case 3078:
            dst_p[4] |= pack_left_shift_u16(src_p->p3078_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3078_s, 8u, 0xffu);
            break;

        case 3080:
            dst_p[4] |= pack_left_shift_u8(src_p->p3080_s, 0u, 0xffu);
            break;

        case 3081:
            dst_p[4] |= pack_left_shift_u8(src_p->p3081_s, 0u, 0xffu);
            break;

        case 3082:
            dst_p[4] |= pack_left_shift_u16(src_p->p3082_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3082_s, 8u, 0xffu);
            break;

        case 3084:
            dst_p[4] |= pack_left_shift_u16(src_p->p3084_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3084_s, 8u, 0xffu);
            break;

        case 3086:
            dst_p[4] |= pack_left_shift_u16(src_p->p3086_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3086_s, 8u, 0xffu);
            break;

        case 3088:
            dst_p[4] |= pack_left_shift_u8(src_p->p3088_s, 0u, 0xffu);
            break;

        case 3089:
            dst_p[4] |= pack_left_shift_u8(src_p->p3089_s, 0u, 0xffu);
            break;

        case 3090:
            dst_p[4] |= pack_left_shift_u8(src_p->p3090_s, 0u, 0xffu);
            break;

        case 3091:
            p3091_s = (uint16_t)src_p->p3091_s;
            dst_p[4] |= pack_left_shift_u16(p3091_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3091_s, 8u, 0xffu);
            break;

        case 3093:
            p3093_s = (uint16_t)src_p->p3093_s;
            dst_p[4] |= pack_left_shift_u16(p3093_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3093_s, 8u, 0xffu);
            break;

        case 3095:
            p3095_s = (uint16_t)src_p->p3095_s;
            dst_p[4] |= pack_left_shift_u16(p3095_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3095_s, 8u, 0xffu);
            break;

        case 3097:
            dst_p[4] |= pack_left_shift_u8(src_p->p3097_s, 0u, 0xffu);
            break;

        case 3120:
            dst_p[4] |= pack_left_shift_u16(src_p->p3120_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3120_s, 8u, 0xffu);
            break;

        case 3122:
            dst_p[4] |= pack_left_shift_u8(src_p->p3122_s, 0u, 0xffu);
            break;

        case 3123:
            dst_p[4] |= pack_left_shift_u8(src_p->p3123_s, 0u, 0xffu);
            break;

        case 3124:
            dst_p[4] |= pack_left_shift_u8(src_p->p3124_s, 0u, 0xffu);
            break;

        case 3125:
            dst_p[4] |= pack_left_shift_u8(src_p->p3125_s, 0u, 0xffu);
            break;

        case 3126:
            dst_p[4] |= pack_left_shift_u16(src_p->p3126_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3126_s, 8u, 0xffu);
            break;

        case 3128:
            p3128_s = (uint16_t)src_p->p3128_s;
            dst_p[4] |= pack_left_shift_u16(p3128_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3128_s, 8u, 0xffu);
            break;

        case 3130:
            p3130_s = (uint16_t)src_p->p3130_s;
            dst_p[4] |= pack_left_shift_u16(p3130_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3130_s, 8u, 0xffu);
            break;

        case 3132:
            dst_p[4] |= pack_left_shift_u8(src_p->p3132_s, 0u, 0xffu);
            break;

        case 3133:
            dst_p[4] |= pack_left_shift_u8(src_p->p3133_s, 0u, 0xffu);
            break;

        case 3134:
            dst_p[4] |= pack_left_shift_u8(src_p->p3134_s, 0u, 0xffu);
            break;

        case 3160:
            dst_p[4] |= pack_left_shift_u16(src_p->p3160_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3160_s, 8u, 0xffu);
            break;

        case 3162:
            p3162_s = (uint16_t)src_p->p3162_s;
            dst_p[4] |= pack_left_shift_u16(p3162_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3162_s, 8u, 0xffu);
            break;

        case 3164:
            p3164_s = (uint16_t)src_p->p3164_s;
            dst_p[4] |= pack_left_shift_u16(p3164_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3164_s, 8u, 0xffu);
            break;

        case 3166:
            p3166_s = (uint16_t)src_p->p3166_s;
            dst_p[4] |= pack_left_shift_u16(p3166_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3166_s, 8u, 0xffu);
            break;

        case 3168:
            p3168_s = (uint16_t)src_p->p3168_s;
            dst_p[4] |= pack_left_shift_u16(p3168_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3168_s, 8u, 0xffu);
            break;

        case 3170:
            p3170_s = (uint16_t)src_p->p3170_s;
            dst_p[4] |= pack_left_shift_u16(p3170_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3170_s, 8u, 0xffu);
            break;

        case 3183:
            dst_p[4] |= pack_left_shift_u16(src_p->p3183_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3183_s, 8u, 0xffu);
            break;

        case 3185:
            dst_p[4] |= pack_left_shift_u16(src_p->p3185_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3185_s, 8u, 0xffu);
            break;

        case 3187:
            dst_p[4] |= pack_left_shift_u16(src_p->p3187_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3187_s, 8u, 0xffu);
            break;

        case 3189:
            dst_p[4] |= pack_left_shift_u16(src_p->p3189_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3189_s, 8u, 0xffu);
            break;

        case 3203:
            dst_p[4] |= pack_left_shift_u16(src_p->p3203_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3203_s, 8u, 0xffu);
            break;

        case 3205:
            dst_p[4] |= pack_left_shift_u16(src_p->p3205_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3205_s, 8u, 0xffu);
            break;

        case 3207:
            dst_p[4] |= pack_left_shift_u16(src_p->p3207_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3207_s, 8u, 0xffu);
            break;

        case 3209:
            dst_p[4] |= pack_left_shift_u16(src_p->p3209_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3209_s, 8u, 0xffu);
            break;

        case 3211:
            dst_p[4] |= pack_left_shift_u16(src_p->p3211_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3211_s, 8u, 0xffu);
            break;

        case 3213:
            dst_p[4] |= pack_left_shift_u16(src_p->p3213_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3213_s, 8u, 0xffu);
            break;

        case 3215:
            dst_p[4] |= pack_left_shift_u16(src_p->p3215_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3215_s, 8u, 0xffu);
            break;

        case 3217:
            dst_p[4] |= pack_left_shift_u16(src_p->p3217_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3217_s, 8u, 0xffu);
            break;

        case 3219:
            dst_p[4] |= pack_left_shift_u16(src_p->p3219_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3219_s, 8u, 0xffu);
            break;

        case 3235:
            dst_p[4] |= pack_left_shift_u16(src_p->p3235_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3235_s, 8u, 0xffu);
            break;

        case 3237:
            dst_p[4] |= pack_left_shift_u8(src_p->p3237_s, 0u, 0xffu);
            break;

        case 3238:
            dst_p[4] |= pack_left_shift_u8(src_p->p3238_s, 0u, 0xffu);
            break;

        case 3239:
            dst_p[4] |= pack_left_shift_u8(src_p->p3239_s, 0u, 0xffu);
            break;

        case 3240:
            dst_p[4] |= pack_left_shift_u8(src_p->p3240_s, 0u, 0xffu);
            break;

        case 3241:
            dst_p[4] |= pack_left_shift_u8(src_p->p3241_s, 0u, 0xffu);
            break;

        case 3242:
            dst_p[4] |= pack_left_shift_u8(src_p->p3242_s, 0u, 0xffu);
            break;

        case 3243:
            dst_p[4] |= pack_left_shift_u8(src_p->p3243_s, 0u, 0xffu);
            break;

        case 3244:
            dst_p[4] |= pack_left_shift_u8(src_p->p3244_s, 0u, 0xffu);
            break;

        case 3245:
            dst_p[4] |= pack_left_shift_u8(src_p->p3245_s, 0u, 0xffu);
            break;

        case 3246:
            dst_p[4] |= pack_left_shift_u8(src_p->p3246_s, 0u, 0xffu);
            break;

        case 3247:
            dst_p[4] |= pack_left_shift_u8(src_p->p3247_s, 0u, 0xffu);
            break;

        case 3248:
            dst_p[4] |= pack_left_shift_u8(src_p->p3248_s, 0u, 0xffu);
            break;

        case 3249:
            dst_p[4] |= pack_left_shift_u8(src_p->p3249_s, 0u, 0xffu);
            break;

        case 3250:
            dst_p[4] |= pack_left_shift_u8(src_p->p3250_s, 0u, 0xffu);
            break;

        case 3251:
            dst_p[4] |= pack_left_shift_u8(src_p->p3251_s, 0u, 0xffu);
            break;

        case 3252:
            dst_p[4] |= pack_left_shift_u8(src_p->p3252_s, 0u, 0xffu);
            break;

        case 3253:
            dst_p[4] |= pack_left_shift_u8(src_p->p3253_s, 0u, 0xffu);
            break;

        case 3285:
            dst_p[4] |= pack_left_shift_u16(src_p->p3285_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3285_s, 8u, 0xffu);
            break;

        case 3287:
            dst_p[4] |= pack_left_shift_u8(src_p->p3287_s, 0u, 0xffu);
            break;

        case 3288:
            dst_p[4] |= pack_left_shift_u8(src_p->p3288_s, 0u, 0xffu);
            break;

        case 3289:
            dst_p[4] |= pack_left_shift_u8(src_p->p3289_s, 0u, 0xffu);
            break;

        case 3290:
            dst_p[4] |= pack_left_shift_u8(src_p->p3290_s, 0u, 0xffu);
            break;

        case 3291:
            dst_p[4] |= pack_left_shift_u8(src_p->p3291_s, 0u, 0xffu);
            break;

        case 3292:
            dst_p[4] |= pack_left_shift_u8(src_p->p3292_s, 0u, 0xffu);
            break;

        case 3293:
            dst_p[4] |= pack_left_shift_u8(src_p->p3293_s, 0u, 0xffu);
            break;

        case 3294:
            dst_p[4] |= pack_left_shift_u8(src_p->p3294_s, 0u, 0xffu);
            break;

        case 3295:
            dst_p[4] |= pack_left_shift_u8(src_p->p3295_s, 0u, 0xffu);
            break;

        case 3296:
            dst_p[4] |= pack_left_shift_u8(src_p->p3296_s, 0u, 0xffu);
            break;

        case 3297:
            dst_p[4] |= pack_left_shift_u8(src_p->p3297_s, 0u, 0xffu);
            break;

        case 3298:
            dst_p[4] |= pack_left_shift_u8(src_p->p3298_s, 0u, 0xffu);
            break;

        case 3299:
            dst_p[4] |= pack_left_shift_u8(src_p->p3299_s, 0u, 0xffu);
            break;

        case 3300:
            dst_p[4] |= pack_left_shift_u8(src_p->p3300_s, 0u, 0xffu);
            break;

        case 3301:
            dst_p[4] |= pack_left_shift_u8(src_p->p3301_s, 0u, 0xffu);
            break;

        case 3302:
            dst_p[4] |= pack_left_shift_u8(src_p->p3302_s, 0u, 0xffu);
            break;

        case 3303:
            dst_p[4] |= pack_left_shift_u8(src_p->p3303_s, 0u, 0xffu);
            break;

        case 3304:
            dst_p[4] |= pack_left_shift_u8(src_p->p3304_s, 0u, 0xffu);
            break;

        case 3305:
            dst_p[4] |= pack_left_shift_u8(src_p->p3305_s, 0u, 0xffu);
            break;

        case 3306:
            dst_p[4] |= pack_left_shift_u8(src_p->p3306_s, 0u, 0xffu);
            break;

        case 3307:
            dst_p[4] |= pack_left_shift_u8(src_p->p3307_s, 0u, 0xffu);
            break;

        case 3308:
            dst_p[4] |= pack_left_shift_u8(src_p->p3308_s, 0u, 0xffu);
            break;

        case 3309:
            dst_p[4] |= pack_left_shift_u8(src_p->p3309_s, 0u, 0xffu);
            break;

        case 3310:
            dst_p[4] |= pack_left_shift_u8(src_p->p3310_s, 0u, 0xffu);
            break;

        case 3311:
            dst_p[4] |= pack_left_shift_u8(src_p->p3311_s, 0u, 0xffu);
            break;

        case 3312:
            dst_p[4] |= pack_left_shift_u8(src_p->p3312_s, 0u, 0xffu);
            break;

        case 3313:
            dst_p[4] |= pack_left_shift_u8(src_p->p3313_s, 0u, 0xffu);
            break;

        case 3314:
            dst_p[4] |= pack_left_shift_u8(src_p->p3314_s, 0u, 0xffu);
            break;

        case 3315:
            dst_p[4] |= pack_left_shift_u8(src_p->p3315_s, 0u, 0xffu);
            break;

        case 3316:
            dst_p[4] |= pack_left_shift_u8(src_p->p3316_s, 0u, 0xffu);
            break;

        case 3317:
            dst_p[4] |= pack_left_shift_u8(src_p->p3317_s, 0u, 0xffu);
            break;

        case 3318:
            dst_p[4] |= pack_left_shift_u8(src_p->p3318_s, 0u, 0xffu);
            break;

        case 3319:
            dst_p[4] |= pack_left_shift_u8(src_p->p3319_s, 0u, 0xffu);
            break;

        case 3320:
            dst_p[4] |= pack_left_shift_u8(src_p->p3320_s, 0u, 0xffu);
            break;

        case 3321:
            dst_p[4] |= pack_left_shift_u8(src_p->p3321_s, 0u, 0xffu);
            break;

        case 3322:
            dst_p[4] |= pack_left_shift_u8(src_p->p3322_s, 0u, 0xffu);
            break;

        case 3323:
            dst_p[4] |= pack_left_shift_u8(src_p->p3323_s, 0u, 0xffu);
            break;

        case 3349:
            dst_p[4] |= pack_left_shift_u16(src_p->p3349_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3349_s, 8u, 0xffu);
            break;

        case 3351:
            dst_p[4] |= pack_left_shift_u8(src_p->p3351_s, 0u, 0xffu);
            break;

        case 3352:
            dst_p[4] |= pack_left_shift_u16(src_p->p3352_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3352_s, 8u, 0xffu);
            break;

        case 3354:
            dst_p[4] |= pack_left_shift_u8(src_p->p3354_s, 0u, 0xffu);
            break;

        case 3355:
            dst_p[4] |= pack_left_shift_u16(src_p->p3355_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3355_s, 8u, 0xffu);
            break;

        case 3357:
            dst_p[4] |= pack_left_shift_u8(src_p->p3357_s, 0u, 0xffu);
            break;

        case 3358:
            dst_p[4] |= pack_left_shift_u16(src_p->p3358_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3358_s, 8u, 0xffu);
            break;

        case 3360:
            dst_p[4] |= pack_left_shift_u8(src_p->p3360_s, 0u, 0xffu);
            break;

        case 3361:
            dst_p[4] |= pack_left_shift_u16(src_p->p3361_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3361_s, 8u, 0xffu);
            break;

        case 3363:
            dst_p[4] |= pack_left_shift_u8(src_p->p3363_s, 0u, 0xffu);
            break;

        case 3364:
            dst_p[4] |= pack_left_shift_u8(src_p->p3364_s, 0u, 0xffu);
            break;

        case 3365:
            dst_p[4] |= pack_left_shift_u8(src_p->p3365_s, 0u, 0xffu);
            break;

        case 3366:
            dst_p[4] |= pack_left_shift_u16(src_p->p3366_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3366_s, 8u, 0xffu);
            break;

        case 3368:
            dst_p[4] |= pack_left_shift_u8(src_p->p3368_s, 0u, 0xffu);
            break;

        case 3369:
            dst_p[4] |= pack_left_shift_u16(src_p->p3369_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3369_s, 8u, 0xffu);
            break;

        case 3371:
            dst_p[4] |= pack_left_shift_u8(src_p->p3371_s, 0u, 0xffu);
            break;

        case 3372:
            dst_p[4] |= pack_left_shift_u16(src_p->p3372_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3372_s, 8u, 0xffu);
            break;

        case 3374:
            dst_p[4] |= pack_left_shift_u8(src_p->p3374_s, 0u, 0xffu);
            break;

        case 3375:
            dst_p[4] |= pack_left_shift_u16(src_p->p3375_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3375_s, 8u, 0xffu);
            break;

        case 3377:
            dst_p[4] |= pack_left_shift_u8(src_p->p3377_s, 0u, 0xffu);
            break;

        case 3378:
            dst_p[4] |= pack_left_shift_u8(src_p->p3378_s, 0u, 0xffu);
            break;

        case 3379:
            dst_p[4] |= pack_left_shift_u16(src_p->p3379_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3379_s, 8u, 0xffu);
            break;

        case 3381:
            dst_p[4] |= pack_left_shift_u16(src_p->p3381_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3381_s, 8u, 0xffu);
            break;

        case 3383:
            dst_p[4] |= pack_left_shift_u8(src_p->p3383_s, 0u, 0xffu);
            break;

        case 3419:
            dst_p[4] |= pack_left_shift_u16(src_p->p3419_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3419_s, 8u, 0xffu);
            break;

        case 3421:
            dst_p[4] |= pack_left_shift_u8(src_p->p3421_s, 0u, 0xffu);
            break;

        case 3422:
            dst_p[4] |= pack_left_shift_u16(src_p->p3422_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3422_s, 8u, 0xffu);
            break;

        case 3424:
            dst_p[4] |= pack_left_shift_u16(src_p->p3424_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3424_s, 8u, 0xffu);
            break;

        case 3426:
            dst_p[4] |= pack_left_shift_u16(src_p->p3426_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3426_s, 8u, 0xffu);
            break;

        case 3428:
            dst_p[4] |= pack_left_shift_u16(src_p->p3428_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3428_s, 8u, 0xffu);
            break;

        case 3449:
            dst_p[4] |= pack_left_shift_u16(src_p->p3449_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3449_s, 8u, 0xffu);
            break;

        case 3451:
            dst_p[4] |= pack_left_shift_u16(src_p->p3451_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3451_s, 8u, 0xffu);
            break;

        case 3453:
            dst_p[4] |= pack_left_shift_u16(src_p->p3453_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3453_s, 8u, 0xffu);
            break;

        case 3455:
            dst_p[4] |= pack_left_shift_u16(src_p->p3455_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3455_s, 8u, 0xffu);
            break;

        case 3457:
            dst_p[4] |= pack_left_shift_u16(src_p->p3457_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3457_s, 8u, 0xffu);
            break;

        case 3459:
            dst_p[4] |= pack_left_shift_u16(src_p->p3459_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3459_s, 8u, 0xffu);
            break;

        case 3461:
            dst_p[4] |= pack_left_shift_u16(src_p->p3461_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3461_s, 8u, 0xffu);
            break;

        case 3463:
            dst_p[4] |= pack_left_shift_u16(src_p->p3463_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3463_s, 8u, 0xffu);
            break;

        case 3465:
            dst_p[4] |= pack_left_shift_u16(src_p->p3465_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3465_s, 8u, 0xffu);
            break;

        case 3467:
            dst_p[4] |= pack_left_shift_u16(src_p->p3467_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3467_s, 8u, 0xffu);
            break;

        case 3469:
            dst_p[4] |= pack_left_shift_u16(src_p->p3469_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3469_s, 8u, 0xffu);
            break;

        case 3473:
            dst_p[4] |= pack_left_shift_u8(src_p->p3473_s, 0u, 0xffu);
            break;

        case 3474:
            dst_p[4] |= pack_left_shift_u8(src_p->p3474_s, 0u, 0xffu);
            break;

        case 3475:
            dst_p[4] |= pack_left_shift_u8(src_p->p3475_s, 0u, 0xffu);
            break;

        case 3476:
            dst_p[4] |= pack_left_shift_u8(src_p->p3476_s, 0u, 0xffu);
            break;

        case 3477:
            dst_p[4] |= pack_left_shift_u8(src_p->p3477_s, 0u, 0xffu);
            break;

        case 3478:
            dst_p[4] |= pack_left_shift_u8(src_p->p3478_s, 0u, 0xffu);
            break;

        case 3479:
            dst_p[4] |= pack_left_shift_u8(src_p->p3479_s, 0u, 0xffu);
            break;

        case 3480:
            dst_p[4] |= pack_left_shift_u8(src_p->p3480_s, 0u, 0xffu);
            break;

        case 3481:
            dst_p[4] |= pack_left_shift_u8(src_p->p3481_s, 0u, 0xffu);
            break;

        case 3482:
            dst_p[4] |= pack_left_shift_u8(src_p->p3482_s, 0u, 0xffu);
            break;

        case 3483:
            dst_p[4] |= pack_left_shift_u8(src_p->p3483_s, 0u, 0xffu);
            break;

        case 3484:
            dst_p[4] |= pack_left_shift_u8(src_p->p3484_s, 0u, 0xffu);
            break;

        case 3519:
            dst_p[4] |= pack_left_shift_u16(src_p->p3519_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3519_s, 8u, 0xffu);
            break;

        case 3521:
            dst_p[4] |= pack_left_shift_u8(src_p->p3521_s, 0u, 0xffu);
            break;

        case 3522:
            dst_p[4] |= pack_left_shift_u16(src_p->p3522_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3522_s, 8u, 0xffu);
            break;

        case 3524:
            dst_p[4] |= pack_left_shift_u16(src_p->p3524_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3524_s, 8u, 0xffu);
            break;

        case 3526:
            dst_p[4] |= pack_left_shift_u16(src_p->p3526_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3526_s, 8u, 0xffu);
            break;

        case 3528:
            dst_p[4] |= pack_left_shift_u8(src_p->p3528_s, 0u, 0xffu);
            break;

        case 3529:
            dst_p[4] |= pack_left_shift_u8(src_p->p3529_s, 0u, 0xffu);
            break;

        case 3530:
            dst_p[4] |= pack_left_shift_u16(src_p->p3530_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3530_s, 8u, 0xffu);
            break;

        case 3532:
            dst_p[4] |= pack_left_shift_u16(src_p->p3532_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3532_s, 8u, 0xffu);
            break;

        case 3534:
            dst_p[4] |= pack_left_shift_u16(src_p->p3534_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3534_s, 8u, 0xffu);
            break;

        case 3536:
            dst_p[4] |= pack_left_shift_u8(src_p->p3536_s, 0u, 0xffu);
            break;

        case 3537:
            dst_p[4] |= pack_left_shift_u8(src_p->p3537_s, 0u, 0xffu);
            break;

        case 3538:
            dst_p[4] |= pack_left_shift_u16(src_p->p3538_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3538_s, 8u, 0xffu);
            break;

        case 3540:
            dst_p[4] |= pack_left_shift_u16(src_p->p3540_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3540_s, 8u, 0xffu);
            break;

        case 3542:
            dst_p[4] |= pack_left_shift_u16(src_p->p3542_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3542_s, 8u, 0xffu);
            break;

        case 3544:
            dst_p[4] |= pack_left_shift_u8(src_p->p3544_s, 0u, 0xffu);
            break;

        case 3545:
            dst_p[4] |= pack_left_shift_u8(src_p->p3545_s, 0u, 0xffu);
            break;

        case 3546:
            dst_p[4] |= pack_left_shift_u16(src_p->p3546_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3546_s, 8u, 0xffu);
            break;

        case 3548:
            dst_p[4] |= pack_left_shift_u16(src_p->p3548_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3548_s, 8u, 0xffu);
            break;

        case 3550:
            dst_p[4] |= pack_left_shift_u16(src_p->p3550_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3550_s, 8u, 0xffu);
            break;

        case 3552:
            dst_p[4] |= pack_left_shift_u8(src_p->p3552_s, 0u, 0xffu);
            break;

        case 3553:
            dst_p[4] |= pack_left_shift_u8(src_p->p3553_s, 0u, 0xffu);
            break;

        case 3554:
            dst_p[4] |= pack_left_shift_u16(src_p->p3554_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3554_s, 8u, 0xffu);
            break;

        case 3556:
            dst_p[4] |= pack_left_shift_u16(src_p->p3556_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3556_s, 8u, 0xffu);
            break;

        case 3558:
            dst_p[4] |= pack_left_shift_u16(src_p->p3558_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3558_s, 8u, 0xffu);
            break;

        case 3560:
            dst_p[4] |= pack_left_shift_u8(src_p->p3560_s, 0u, 0xffu);
            break;

        case 3561:
            dst_p[4] |= pack_left_shift_u8(src_p->p3561_s, 0u, 0xffu);
            break;

        case 3562:
            dst_p[4] |= pack_left_shift_u16(src_p->p3562_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3562_s, 8u, 0xffu);
            break;

        case 3564:
            dst_p[4] |= pack_left_shift_u16(src_p->p3564_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3564_s, 8u, 0xffu);
            break;

        case 3566:
            dst_p[4] |= pack_left_shift_u16(src_p->p3566_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3566_s, 8u, 0xffu);
            break;

        case 3568:
            dst_p[4] |= pack_left_shift_u8(src_p->p3568_s, 0u, 0xffu);
            break;

        case 3569:
            dst_p[4] |= pack_left_shift_u8(src_p->p3569_s, 0u, 0xffu);
            break;

        case 3570:
            dst_p[4] |= pack_left_shift_u8(src_p->p3570_s, 0u, 0xffu);
            break;

        case 3571:
            dst_p[4] |= pack_left_shift_u8(src_p->p3571_s, 0u, 0xffu);
            break;

        case 3572:
            dst_p[4] |= pack_left_shift_u8(src_p->p3572_s, 0u, 0xffu);
            break;

        case 3573:
            dst_p[4] |= pack_left_shift_u8(src_p->p3573_s, 0u, 0xffu);
            break;

        case 3574:
            dst_p[4] |= pack_left_shift_u16(src_p->p3574_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3574_s, 8u, 0xffu);
            break;

        case 3576:
            dst_p[4] |= pack_left_shift_u16(src_p->p3576_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3576_s, 8u, 0xffu);
            break;

        case 3578:
            dst_p[4] |= pack_left_shift_u16(src_p->p3578_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3578_s, 8u, 0xffu);
            break;

        case 3580:
            dst_p[4] |= pack_left_shift_u16(src_p->p3580_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3580_s, 8u, 0xffu);
            break;

        case 3582:
            dst_p[4] |= pack_left_shift_u8(src_p->p3582_s, 0u, 0xffu);
            break;

        case 3583:
            dst_p[4] |= pack_left_shift_u8(src_p->p3583_s, 0u, 0xffu);
            break;

        case 3584:
            dst_p[4] |= pack_left_shift_u8(src_p->p3584_s, 0u, 0xffu);
            break;

        case 3644:
            dst_p[4] |= pack_left_shift_u16(src_p->p3644_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3644_s, 8u, 0xffu);
            break;

        case 3646:
            dst_p[4] |= pack_left_shift_u8(src_p->p3646_s, 0u, 0xffu);
            break;

        case 3647:
            dst_p[4] |= pack_left_shift_u8(src_p->p3647_s, 0u, 0xffu);
            break;

        case 3648:
            dst_p[4] |= pack_left_shift_u8(src_p->p3648_s, 0u, 0xffu);
            break;

        case 3649:
            dst_p[4] |= pack_left_shift_u8(src_p->p3649_s, 0u, 0xffu);
            break;

        case 3650:
            dst_p[4] |= pack_left_shift_u16(src_p->p3650_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3650_s, 8u, 0xffu);
            break;

        case 3652:
            dst_p[4] |= pack_left_shift_u16(src_p->p3652_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3652_s, 8u, 0xffu);
            break;

        case 3654:
            dst_p[4] |= pack_left_shift_u16(src_p->p3654_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3654_s, 8u, 0xffu);
            break;

        case 3656:
            dst_p[4] |= pack_left_shift_u8(src_p->p3656_s, 0u, 0xffu);
            break;

        case 3657:
            dst_p[4] |= pack_left_shift_u8(src_p->p3657_s, 0u, 0xffu);
            break;

        case 3658:
            dst_p[4] |= pack_left_shift_u16(src_p->p3658_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3658_s, 8u, 0xffu);
            break;

        case 3660:
            dst_p[4] |= pack_left_shift_u16(src_p->p3660_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3660_s, 8u, 0xffu);
            break;

        case 3662:
            dst_p[4] |= pack_left_shift_u16(src_p->p3662_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3662_s, 8u, 0xffu);
            break;

        case 3664:
            dst_p[4] |= pack_left_shift_u8(src_p->p3664_s, 0u, 0xffu);
            break;

        case 3665:
            dst_p[4] |= pack_left_shift_u8(src_p->p3665_s, 0u, 0xffu);
            break;

        case 3666:
            dst_p[4] |= pack_left_shift_u16(src_p->p3666_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3666_s, 8u, 0xffu);
            break;

        case 3668:
            dst_p[4] |= pack_left_shift_u16(src_p->p3668_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3668_s, 8u, 0xffu);
            break;

        case 3670:
            dst_p[4] |= pack_left_shift_u16(src_p->p3670_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3670_s, 8u, 0xffu);
            break;

        case 3672:
            dst_p[4] |= pack_left_shift_u8(src_p->p3672_s, 0u, 0xffu);
            break;

        case 3673:
            dst_p[4] |= pack_left_shift_u8(src_p->p3673_s, 0u, 0xffu);
            break;

        case 3674:
            dst_p[4] |= pack_left_shift_u16(src_p->p3674_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3674_s, 8u, 0xffu);
            break;

        case 3676:
            dst_p[4] |= pack_left_shift_u16(src_p->p3676_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3676_s, 8u, 0xffu);
            break;

        case 3678:
            dst_p[4] |= pack_left_shift_u16(src_p->p3678_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3678_s, 8u, 0xffu);
            break;

        case 3680:
            dst_p[4] |= pack_left_shift_u8(src_p->p3680_s, 0u, 0xffu);
            break;

        case 3681:
            dst_p[4] |= pack_left_shift_u8(src_p->p3681_s, 0u, 0xffu);
            break;

        case 3682:
            dst_p[4] |= pack_left_shift_u16(src_p->p3682_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3682_s, 8u, 0xffu);
            break;

        case 3684:
            dst_p[4] |= pack_left_shift_u16(src_p->p3684_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3684_s, 8u, 0xffu);
            break;

        case 3686:
            dst_p[4] |= pack_left_shift_u16(src_p->p3686_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3686_s, 8u, 0xffu);
            break;

        case 3688:
            dst_p[4] |= pack_left_shift_u8(src_p->p3688_s, 0u, 0xffu);
            break;

        case 3689:
            dst_p[4] |= pack_left_shift_u8(src_p->p3689_s, 0u, 0xffu);
            break;

        case 3690:
            dst_p[4] |= pack_left_shift_u16(src_p->p3690_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3690_s, 8u, 0xffu);
            break;

        case 3692:
            dst_p[4] |= pack_left_shift_u16(src_p->p3692_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3692_s, 8u, 0xffu);
            break;

        case 3694:
            dst_p[4] |= pack_left_shift_u16(src_p->p3694_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3694_s, 8u, 0xffu);
            break;

        case 3696:
            dst_p[4] |= pack_left_shift_u8(src_p->p3696_s, 0u, 0xffu);
            break;

        case 3697:
            dst_p[4] |= pack_left_shift_u8(src_p->p3697_s, 0u, 0xffu);
            break;

        case 3698:
            dst_p[4] |= pack_left_shift_u8(src_p->p3698_s, 0u, 0xffu);
            break;

        case 3699:
            dst_p[4] |= pack_left_shift_u8(src_p->p3699_s, 0u, 0xffu);
            break;

        case 3700:
            dst_p[4] |= pack_left_shift_u8(src_p->p3700_s, 0u, 0xffu);
            break;

        case 3701:
            dst_p[4] |= pack_left_shift_u16(src_p->p3701_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3701_s, 8u, 0xffu);
            break;

        case 3703:
            dst_p[4] |= pack_left_shift_u16(src_p->p3703_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3703_s, 8u, 0xffu);
            break;

        case 3705:
            dst_p[4] |= pack_left_shift_u8(src_p->p3705_s, 0u, 0xffu);
            break;

        case 3706:
            dst_p[4] |= pack_left_shift_u16(src_p->p3706_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3706_s, 8u, 0xffu);
            break;

        case 3708:
            dst_p[4] |= pack_left_shift_u16(src_p->p3708_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3708_s, 8u, 0xffu);
            break;

        case 3710:
            dst_p[4] |= pack_left_shift_u16(src_p->p3710_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3710_s, 8u, 0xffu);
            break;

        case 3712:
            dst_p[4] |= pack_left_shift_u16(src_p->p3712_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3712_s, 8u, 0xffu);
            break;

        case 3714:
            dst_p[4] |= pack_left_shift_u16(src_p->p3714_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3714_s, 8u, 0xffu);
            break;

        case 3716:
            dst_p[4] |= pack_left_shift_u16(src_p->p3716_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3716_s, 8u, 0xffu);
            break;

        case 3718:
            dst_p[4] |= pack_left_shift_u8(src_p->p3718_s, 0u, 0xffu);
            break;

        case 3719:
            dst_p[4] |= pack_left_shift_u8(src_p->p3719_s, 0u, 0xffu);
            break;

        case 3769:
            dst_p[4] |= pack_left_shift_u16(src_p->p3769_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3769_s, 8u, 0xffu);
            break;

        case 3771:
            dst_p[4] |= pack_left_shift_u8(src_p->p3771_s, 0u, 0xffu);
            break;

        case 3772:
            dst_p[4] |= pack_left_shift_u8(src_p->p3772_s, 0u, 0xffu);
            break;

        case 3773:
            dst_p[4] |= pack_left_shift_u8(src_p->p3773_s, 0u, 0xffu);
            break;

        case 3774:
            dst_p[4] |= pack_left_shift_u8(src_p->p3774_s, 0u, 0xffu);
            break;

        case 3775:
            dst_p[4] |= pack_left_shift_u8(src_p->p3775_s, 0u, 0xffu);
            break;

        case 3776:
            dst_p[4] |= pack_left_shift_u8(src_p->p3776_s, 0u, 0xffu);
            break;

        case 3789:
            dst_p[4] |= pack_left_shift_u16(src_p->p3789_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3789_s, 8u, 0xffu);
            break;

        case 3791:
            dst_p[4] |= pack_left_shift_u16(src_p->p3791_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3791_s, 8u, 0xffu);
            break;

        case 3793:
            dst_p[4] |= pack_left_shift_u16(src_p->p3793_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3793_s, 8u, 0xffu);
            break;

        case 3795:
            dst_p[4] |= pack_left_shift_u16(src_p->p3795_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3795_s, 8u, 0xffu);
            break;

        case 3797:
            dst_p[4] |= pack_left_shift_u16(src_p->p3797_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3797_s, 8u, 0xffu);
            break;

        case 3799:
            dst_p[4] |= pack_left_shift_u16(src_p->p3799_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3799_s, 8u, 0xffu);
            break;

        case 3801:
            dst_p[4] |= pack_left_shift_u8(src_p->p3801_s, 0u, 0xffu);
            break;

        case 3802:
            dst_p[4] |= pack_left_shift_u16(src_p->p3802_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3802_s, 8u, 0xffu);
            break;

        case 3804:
            dst_p[4] |= pack_left_shift_u16(src_p->p3804_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3804_s, 8u, 0xffu);
            break;

        case 3806:
            dst_p[4] |= pack_left_shift_u16(src_p->p3806_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3806_s, 8u, 0xffu);
            break;

        case 3808:
            dst_p[4] |= pack_left_shift_u16(src_p->p3808_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3808_s, 8u, 0xffu);
            break;

        case 3810:
            dst_p[4] |= pack_left_shift_u8(src_p->p3810_s, 0u, 0xffu);
            break;

        case 3811:
            dst_p[4] |= pack_left_shift_u8(src_p->p3811_s, 0u, 0xffu);
            break;

        case 3812:
            dst_p[4] |= pack_left_shift_u16(src_p->p3812_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3812_s, 8u, 0xffu);
            break;

        case 3814:
            dst_p[4] |= pack_left_shift_u8(src_p->p3814_s, 0u, 0xffu);
            break;

        case 3822:
            dst_p[4] |= pack_left_shift_u16(src_p->p3822_s, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3822_s, 8u, 0xffu);
            break;

        default:
            break;
        }
        break;

    case 143:
        dst_p[1] |= pack_left_shift_u8(src_p->reply_consistency_chk_s, 0u, 0x03u);
        dst_p[1] |= pack_left_shift_u8(src_p->reply_input_status_s, 2u, 0x0cu);
        dst_p[1] |= pack_left_shift_u8(src_p->reply_result_from_ecu_s, 4u, 0x10u);
        dst_p[1] |= pack_left_shift_u8(src_p->reply_pos_captured_s, 5u, 0x20u);
        dst_p[1] |= pack_left_shift_u8(src_p->reply_was_captured_s, 6u, 0xc0u);
        dst_p[2] |= pack_left_shift_u16(src_p->reply_ad1_s, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->reply_ad1_s, 8u, 0xffu);
        dst_p[4] |= pack_left_shift_u16(src_p->reply_ad2_s, 0u, 0xffu);
        dst_p[5] |= pack_right_shift_u16(src_p->reply_ad2_s, 8u, 0xffu);
        dst_p[6] |= pack_left_shift_u16(src_p->reply_sensor_voltage_s, 0u, 0xffu);
        dst_p[7] |= pack_right_shift_u16(src_p->reply_sensor_voltage_s, 8u, 0xffu);
        break;

    case 145:
        dst_p[1] |= pack_left_shift_u8(src_p->reply_calib_err_code_s, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u8(src_p->reply_wa_mov_status_r_s, 4u, 0x30u);
        dst_p[2] |= pack_left_shift_u8(src_p->reply_wa_mov_status_l_s, 6u, 0xc0u);
        dst_p[3] |= pack_left_shift_u8(src_p->reply_calibration_progress_s, 0u, 0xffu);
        dst_p[4] |= pack_left_shift_u16(src_p->reply_spl_set_last_s, 0u, 0xffu);
        dst_p[5] |= pack_right_shift_u16(src_p->reply_spl_set_last_s, 8u, 0xffu);
        dst_p[6] |= pack_left_shift_u16(src_p->reply_t_last_move_s, 0u, 0xffu);
        dst_p[7] |= pack_right_shift_u16(src_p->reply_t_last_move_s, 8u, 0xffu);
        break;

    case 151:
        break;

    default:
        break;
    }

    return (8);
}

int pved_cls_ser_tool_reply_s_unpack(
    struct pved_cls_ser_tool_reply_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    uint16_t p3091_s;
    uint16_t p3093_s;
    uint16_t p3095_s;
    uint16_t p3128_s;
    uint16_t p3130_s;
    uint16_t p3162_s;
    uint16_t p3164_s;
    uint16_t p3166_s;
    uint16_t p3168_s;
    uint16_t p3170_s;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->ser_tool_reply_xid_s |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);

    switch (dst_p->ser_tool_reply_xid_s) {

    case 131:
        dst_p->reply_sensor5_v_state_s |= unpack_right_shift_u8(src_p[1], 4u, 0x30u);
        dst_p->reply_css_state_s |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
        dst_p->reply_req_spool_pos_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->reply_req_spool_pos_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        dst_p->reply_req_cov_pwm_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
        break;

    case 135:
        dst_p->reply_param_data_length_s |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->reply_param_address_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->reply_param_address_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);

        switch (dst_p->reply_param_address_s) {

        case 3072:
            dst_p->p3072_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3073:
            dst_p->p3073_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3074:
            dst_p->p3074_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3074_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3076:
            dst_p->p3076_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3076_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3078:
            dst_p->p3078_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3078_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3080:
            dst_p->p3080_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3081:
            dst_p->p3081_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3082:
            dst_p->p3082_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3082_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3084:
            dst_p->p3084_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3084_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3086:
            dst_p->p3086_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3086_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3088:
            dst_p->p3088_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3089:
            dst_p->p3089_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3090:
            dst_p->p3090_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3091:
            p3091_s = 0u;
            p3091_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3091_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3091_s = (int16_t)p3091_s;
            break;

        case 3093:
            p3093_s = 0u;
            p3093_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3093_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3093_s = (int16_t)p3093_s;
            break;

        case 3095:
            p3095_s = 0u;
            p3095_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3095_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3095_s = (int16_t)p3095_s;
            break;

        case 3097:
            dst_p->p3097_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3120:
            dst_p->p3120_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3120_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3122:
            dst_p->p3122_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3123:
            dst_p->p3123_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3124:
            dst_p->p3124_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3125:
            dst_p->p3125_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3126:
            dst_p->p3126_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3126_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3128:
            p3128_s = 0u;
            p3128_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3128_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3128_s = (int16_t)p3128_s;
            break;

        case 3130:
            p3130_s = 0u;
            p3130_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3130_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3130_s = (int16_t)p3130_s;
            break;

        case 3132:
            dst_p->p3132_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3133:
            dst_p->p3133_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3134:
            dst_p->p3134_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3160:
            dst_p->p3160_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3160_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3162:
            p3162_s = 0u;
            p3162_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3162_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3162_s = (int16_t)p3162_s;
            break;

        case 3164:
            p3164_s = 0u;
            p3164_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3164_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3164_s = (int16_t)p3164_s;
            break;

        case 3166:
            p3166_s = 0u;
            p3166_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3166_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3166_s = (int16_t)p3166_s;
            break;

        case 3168:
            p3168_s = 0u;
            p3168_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3168_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3168_s = (int16_t)p3168_s;
            break;

        case 3170:
            p3170_s = 0u;
            p3170_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3170_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3170_s = (int16_t)p3170_s;
            break;

        case 3183:
            dst_p->p3183_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3183_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3185:
            dst_p->p3185_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3185_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3187:
            dst_p->p3187_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3187_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3189:
            dst_p->p3189_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3189_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3203:
            dst_p->p3203_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3203_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3205:
            dst_p->p3205_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3205_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3207:
            dst_p->p3207_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3207_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3209:
            dst_p->p3209_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3209_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3211:
            dst_p->p3211_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3211_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3213:
            dst_p->p3213_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3213_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3215:
            dst_p->p3215_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3215_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3217:
            dst_p->p3217_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3217_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3219:
            dst_p->p3219_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3219_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3235:
            dst_p->p3235_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3235_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3237:
            dst_p->p3237_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3238:
            dst_p->p3238_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3239:
            dst_p->p3239_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3240:
            dst_p->p3240_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3241:
            dst_p->p3241_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3242:
            dst_p->p3242_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3243:
            dst_p->p3243_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3244:
            dst_p->p3244_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3245:
            dst_p->p3245_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3246:
            dst_p->p3246_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3247:
            dst_p->p3247_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3248:
            dst_p->p3248_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3249:
            dst_p->p3249_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3250:
            dst_p->p3250_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3251:
            dst_p->p3251_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3252:
            dst_p->p3252_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3253:
            dst_p->p3253_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3285:
            dst_p->p3285_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3285_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3287:
            dst_p->p3287_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3288:
            dst_p->p3288_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3289:
            dst_p->p3289_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3290:
            dst_p->p3290_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3291:
            dst_p->p3291_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3292:
            dst_p->p3292_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3293:
            dst_p->p3293_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3294:
            dst_p->p3294_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3295:
            dst_p->p3295_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3296:
            dst_p->p3296_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3297:
            dst_p->p3297_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3298:
            dst_p->p3298_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3299:
            dst_p->p3299_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3300:
            dst_p->p3300_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3301:
            dst_p->p3301_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3302:
            dst_p->p3302_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3303:
            dst_p->p3303_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3304:
            dst_p->p3304_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3305:
            dst_p->p3305_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3306:
            dst_p->p3306_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3307:
            dst_p->p3307_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3308:
            dst_p->p3308_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3309:
            dst_p->p3309_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3310:
            dst_p->p3310_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3311:
            dst_p->p3311_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3312:
            dst_p->p3312_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3313:
            dst_p->p3313_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3314:
            dst_p->p3314_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3315:
            dst_p->p3315_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3316:
            dst_p->p3316_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3317:
            dst_p->p3317_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3318:
            dst_p->p3318_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3319:
            dst_p->p3319_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3320:
            dst_p->p3320_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3321:
            dst_p->p3321_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3322:
            dst_p->p3322_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3323:
            dst_p->p3323_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3349:
            dst_p->p3349_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3349_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3351:
            dst_p->p3351_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3352:
            dst_p->p3352_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3352_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3354:
            dst_p->p3354_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3355:
            dst_p->p3355_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3355_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3357:
            dst_p->p3357_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3358:
            dst_p->p3358_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3358_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3360:
            dst_p->p3360_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3361:
            dst_p->p3361_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3361_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3363:
            dst_p->p3363_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3364:
            dst_p->p3364_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3365:
            dst_p->p3365_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3366:
            dst_p->p3366_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3366_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3368:
            dst_p->p3368_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3369:
            dst_p->p3369_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3369_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3371:
            dst_p->p3371_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3372:
            dst_p->p3372_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3372_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3374:
            dst_p->p3374_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3375:
            dst_p->p3375_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3375_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3377:
            dst_p->p3377_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3378:
            dst_p->p3378_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3379:
            dst_p->p3379_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3379_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3381:
            dst_p->p3381_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3381_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3383:
            dst_p->p3383_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3419:
            dst_p->p3419_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3419_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3421:
            dst_p->p3421_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3422:
            dst_p->p3422_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3422_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3424:
            dst_p->p3424_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3424_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3426:
            dst_p->p3426_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3426_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3428:
            dst_p->p3428_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3428_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3449:
            dst_p->p3449_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3449_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3451:
            dst_p->p3451_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3451_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3453:
            dst_p->p3453_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3453_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3455:
            dst_p->p3455_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3455_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3457:
            dst_p->p3457_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3457_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3459:
            dst_p->p3459_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3459_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3461:
            dst_p->p3461_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3461_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3463:
            dst_p->p3463_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3463_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3465:
            dst_p->p3465_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3465_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3467:
            dst_p->p3467_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3467_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3469:
            dst_p->p3469_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3469_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3473:
            dst_p->p3473_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3474:
            dst_p->p3474_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3475:
            dst_p->p3475_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3476:
            dst_p->p3476_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3477:
            dst_p->p3477_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3478:
            dst_p->p3478_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3479:
            dst_p->p3479_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3480:
            dst_p->p3480_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3481:
            dst_p->p3481_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3482:
            dst_p->p3482_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3483:
            dst_p->p3483_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3484:
            dst_p->p3484_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3519:
            dst_p->p3519_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3519_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3521:
            dst_p->p3521_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3522:
            dst_p->p3522_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3522_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3524:
            dst_p->p3524_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3524_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3526:
            dst_p->p3526_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3526_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3528:
            dst_p->p3528_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3529:
            dst_p->p3529_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3530:
            dst_p->p3530_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3530_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3532:
            dst_p->p3532_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3532_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3534:
            dst_p->p3534_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3534_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3536:
            dst_p->p3536_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3537:
            dst_p->p3537_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3538:
            dst_p->p3538_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3538_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3540:
            dst_p->p3540_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3540_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3542:
            dst_p->p3542_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3542_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3544:
            dst_p->p3544_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3545:
            dst_p->p3545_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3546:
            dst_p->p3546_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3546_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3548:
            dst_p->p3548_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3548_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3550:
            dst_p->p3550_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3550_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3552:
            dst_p->p3552_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3553:
            dst_p->p3553_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3554:
            dst_p->p3554_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3554_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3556:
            dst_p->p3556_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3556_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3558:
            dst_p->p3558_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3558_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3560:
            dst_p->p3560_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3561:
            dst_p->p3561_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3562:
            dst_p->p3562_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3562_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3564:
            dst_p->p3564_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3564_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3566:
            dst_p->p3566_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3566_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3568:
            dst_p->p3568_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3569:
            dst_p->p3569_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3570:
            dst_p->p3570_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3571:
            dst_p->p3571_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3572:
            dst_p->p3572_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3573:
            dst_p->p3573_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3574:
            dst_p->p3574_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3574_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3576:
            dst_p->p3576_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3576_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3578:
            dst_p->p3578_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3578_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3580:
            dst_p->p3580_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3580_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3582:
            dst_p->p3582_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3583:
            dst_p->p3583_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3584:
            dst_p->p3584_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3644:
            dst_p->p3644_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3644_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3646:
            dst_p->p3646_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3647:
            dst_p->p3647_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3648:
            dst_p->p3648_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3649:
            dst_p->p3649_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3650:
            dst_p->p3650_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3650_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3652:
            dst_p->p3652_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3652_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3654:
            dst_p->p3654_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3654_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3656:
            dst_p->p3656_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3657:
            dst_p->p3657_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3658:
            dst_p->p3658_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3658_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3660:
            dst_p->p3660_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3660_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3662:
            dst_p->p3662_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3662_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3664:
            dst_p->p3664_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3665:
            dst_p->p3665_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3666:
            dst_p->p3666_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3666_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3668:
            dst_p->p3668_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3668_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3670:
            dst_p->p3670_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3670_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3672:
            dst_p->p3672_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3673:
            dst_p->p3673_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3674:
            dst_p->p3674_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3674_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3676:
            dst_p->p3676_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3676_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3678:
            dst_p->p3678_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3678_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3680:
            dst_p->p3680_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3681:
            dst_p->p3681_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3682:
            dst_p->p3682_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3682_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3684:
            dst_p->p3684_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3684_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3686:
            dst_p->p3686_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3686_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3688:
            dst_p->p3688_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3689:
            dst_p->p3689_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3690:
            dst_p->p3690_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3690_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3692:
            dst_p->p3692_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3692_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3694:
            dst_p->p3694_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3694_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3696:
            dst_p->p3696_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3697:
            dst_p->p3697_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3698:
            dst_p->p3698_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3699:
            dst_p->p3699_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3700:
            dst_p->p3700_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3701:
            dst_p->p3701_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3701_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3703:
            dst_p->p3703_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3703_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3705:
            dst_p->p3705_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3706:
            dst_p->p3706_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3706_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3708:
            dst_p->p3708_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3708_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3710:
            dst_p->p3710_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3710_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3712:
            dst_p->p3712_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3712_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3714:
            dst_p->p3714_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3714_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3716:
            dst_p->p3716_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3716_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3718:
            dst_p->p3718_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3719:
            dst_p->p3719_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3769:
            dst_p->p3769_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3769_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3771:
            dst_p->p3771_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3772:
            dst_p->p3772_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3773:
            dst_p->p3773_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3774:
            dst_p->p3774_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3775:
            dst_p->p3775_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3776:
            dst_p->p3776_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3789:
            dst_p->p3789_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3789_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3791:
            dst_p->p3791_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3791_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3793:
            dst_p->p3793_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3793_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3795:
            dst_p->p3795_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3795_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3797:
            dst_p->p3797_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3797_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3799:
            dst_p->p3799_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3799_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3801:
            dst_p->p3801_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3802:
            dst_p->p3802_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3802_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3804:
            dst_p->p3804_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3804_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3806:
            dst_p->p3806_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3806_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3808:
            dst_p->p3808_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3808_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3810:
            dst_p->p3810_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3811:
            dst_p->p3811_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3812:
            dst_p->p3812_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3812_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3814:
            dst_p->p3814_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3822:
            dst_p->p3822_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3822_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        default:
            break;
        }
        break;

    case 143:
        dst_p->reply_consistency_chk_s |= unpack_right_shift_u8(src_p[1], 0u, 0x03u);
        dst_p->reply_input_status_s |= unpack_right_shift_u8(src_p[1], 2u, 0x0cu);
        dst_p->reply_result_from_ecu_s |= unpack_right_shift_u8(src_p[1], 4u, 0x10u);
        dst_p->reply_pos_captured_s |= unpack_right_shift_u8(src_p[1], 5u, 0x20u);
        dst_p->reply_was_captured_s |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
        dst_p->reply_ad1_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->reply_ad1_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        dst_p->reply_ad2_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
        dst_p->reply_ad2_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
        dst_p->reply_sensor_voltage_s |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
        dst_p->reply_sensor_voltage_s |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);
        break;

    case 145:
        dst_p->reply_calib_err_code_s |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->reply_wa_mov_status_r_s |= unpack_right_shift_u8(src_p[2], 4u, 0x30u);
        dst_p->reply_wa_mov_status_l_s |= unpack_right_shift_u8(src_p[2], 6u, 0xc0u);
        dst_p->reply_calibration_progress_s |= unpack_right_shift_u8(src_p[3], 0u, 0xffu);
        dst_p->reply_spl_set_last_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
        dst_p->reply_spl_set_last_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
        dst_p->reply_t_last_move_s |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
        dst_p->reply_t_last_move_s |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);
        break;

    case 151:
        break;

    default:
        break;
    }

    return (0);
}

uint8_t pved_cls_ser_tool_reply_s_ser_tool_reply_xid_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_ser_tool_reply_xid_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_ser_tool_reply_xid_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_reply_param_data_length_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_param_data_length_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_param_data_length_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_reply_calib_err_code_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_calib_err_code_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_calib_err_code_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_reply_consistency_chk_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_consistency_chk_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_consistency_chk_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_s_reply_input_status_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_input_status_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_input_status_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_s_reply_result_from_ecu_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_result_from_ecu_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_result_from_ecu_s_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_s_reply_sensor5_v_state_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_sensor5_v_state_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_sensor5_v_state_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_s_reply_pos_captured_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_pos_captured_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_pos_captured_s_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_s_reply_was_captured_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_was_captured_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_was_captured_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_s_reply_css_state_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_css_state_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_css_state_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_ser_tool_reply_s_reply_param_address_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_param_address_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_param_address_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_reply_ad1_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_ad1_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_ad1_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_reply_req_spool_pos_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_ser_tool_reply_s_reply_req_spool_pos_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_ser_tool_reply_s_reply_req_spool_pos_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_s_reply_wa_mov_status_r_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_wa_mov_status_r_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_wa_mov_status_r_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_s_reply_wa_mov_status_l_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_wa_mov_status_l_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_wa_mov_status_l_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_s_reply_calibration_progress_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_calibration_progress_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_calibration_progress_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3822_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3822_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3822_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3814_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3814_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3814_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 25u));
}

uint16_t pved_cls_ser_tool_reply_s_p3812_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3812_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3812_s_is_in_range(uint16_t value)
{
    return ((value >= 5u) && (value <= 400u));
}

uint8_t pved_cls_ser_tool_reply_s_p3811_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3811_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3811_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 10u));
}

uint8_t pved_cls_ser_tool_reply_s_p3810_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3810_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3810_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 10u));
}

uint16_t pved_cls_ser_tool_reply_s_p3808_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3808_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3808_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 600u));
}

uint16_t pved_cls_ser_tool_reply_s_p3806_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3806_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3806_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 600u));
}

uint16_t pved_cls_ser_tool_reply_s_p3804_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3804_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3804_s_is_in_range(uint16_t value)
{
    return ((value >= 5u) && (value <= 400u));
}

uint16_t pved_cls_ser_tool_reply_s_p3802_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3802_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3802_s_is_in_range(uint16_t value)
{
    return ((value >= 50u) && (value <= 300u));
}

uint8_t pved_cls_ser_tool_reply_s_p3801_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3801_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3801_s_is_in_range(uint8_t value)
{
    return (value <= 60u);
}

uint16_t pved_cls_ser_tool_reply_s_p3799_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3799_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3799_s_is_in_range(uint16_t value)
{
    return (value <= 300u);
}

uint16_t pved_cls_ser_tool_reply_s_p3797_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3797_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3797_s_is_in_range(uint16_t value)
{
    return (value <= 300u);
}

uint16_t pved_cls_ser_tool_reply_s_p3795_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3795_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3795_s_is_in_range(uint16_t value)
{
    return (value <= 5000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3793_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3793_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3793_s_is_in_range(uint16_t value)
{
    return (value <= 2500u);
}

uint16_t pved_cls_ser_tool_reply_s_p3791_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3791_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3791_s_is_in_range(uint16_t value)
{
    return (value <= 5000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3789_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3789_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3789_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3776_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3776_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3776_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3775_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3775_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3775_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3774_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3774_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3774_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3773_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3773_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3773_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3772_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3772_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3772_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3771_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3771_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3771_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3769_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3769_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3769_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3719_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3719_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3719_s_is_in_range(uint8_t value)
{
    return (value <= 45u);
}

uint8_t pved_cls_ser_tool_reply_s_p3718_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3718_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3718_s_is_in_range(uint8_t value)
{
    return ((value >= 5u) && (value <= 200u));
}

uint16_t pved_cls_ser_tool_reply_s_p3716_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3716_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3716_s_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_s_p3714_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3714_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3714_s_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_s_p3712_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3712_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3712_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3710_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3710_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3710_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3708_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3708_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3708_s_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_s_p3706_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3706_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3706_s_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 180u));
}

uint8_t pved_cls_ser_tool_reply_s_p3705_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3705_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3705_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_s_p3703_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3703_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3703_s_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_s_p3701_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3701_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3701_s_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint8_t pved_cls_ser_tool_reply_s_p3700_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3700_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3700_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3699_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3699_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3699_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3698_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3698_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3698_s_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_s_p3697_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3697_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3697_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3696_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3696_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3696_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_s_p3694_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3694_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3694_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3692_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3692_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3692_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3690_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3690_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3690_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint8_t pved_cls_ser_tool_reply_s_p3689_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3689_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3689_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3688_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3688_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3688_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_s_p3686_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3686_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3686_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3684_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3684_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3684_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3682_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3682_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3682_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_s_p3681_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3681_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3681_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3680_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3680_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3680_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_s_p3678_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3678_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3678_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3676_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3676_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3676_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3674_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3674_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3674_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_s_p3673_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3673_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3673_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3672_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3672_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3672_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_s_p3670_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3670_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3670_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3668_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3668_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3668_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3666_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3666_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3666_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_s_p3665_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3665_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3665_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3664_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3664_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3664_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_s_p3662_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3662_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3662_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3660_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3660_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3660_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3658_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3658_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3658_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_s_p3657_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3657_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3657_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3656_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3656_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3656_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_s_p3654_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3654_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3654_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3652_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3652_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3652_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3650_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3650_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3650_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_s_p3649_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3649_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3649_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3648_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3648_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3648_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3647_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3647_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3647_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3646_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3646_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3646_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_s_p3644_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3644_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3644_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3584_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3584_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3584_s_is_in_range(uint8_t value)
{
    return (value <= 45u);
}

uint8_t pved_cls_ser_tool_reply_s_p3583_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3583_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3583_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3582_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3582_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3582_s_is_in_range(uint8_t value)
{
    return ((value >= 5u) && (value <= 200u));
}

uint16_t pved_cls_ser_tool_reply_s_p3580_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3580_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3580_s_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_s_p3578_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3578_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3578_s_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_s_p3576_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3576_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3576_s_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_s_p3574_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3574_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3574_s_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint8_t pved_cls_ser_tool_reply_s_p3573_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3573_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3573_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3572_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3572_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3572_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3571_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3571_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3571_s_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_s_p3570_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3570_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3570_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3569_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3569_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3569_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3568_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3568_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3568_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 180u));
}

uint16_t pved_cls_ser_tool_reply_s_p3566_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3566_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3566_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3564_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3564_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3564_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3562_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3562_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3562_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint8_t pved_cls_ser_tool_reply_s_p3561_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3561_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3561_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3560_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3560_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3560_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_s_p3558_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3558_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3558_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3556_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3556_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3556_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3554_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3554_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3554_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_s_p3553_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3553_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3553_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3552_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3552_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3552_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_s_p3550_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3550_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3550_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3548_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3548_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3548_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3546_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3546_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3546_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_s_p3545_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3545_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3545_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3544_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3544_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3544_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_s_p3542_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3542_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3542_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3540_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3540_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3540_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3538_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3538_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3538_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_s_p3537_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3537_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3537_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3536_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3536_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3536_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_s_p3534_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3534_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3534_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3532_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3532_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3532_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3530_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3530_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3530_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_s_p3529_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3529_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3529_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3528_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3528_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3528_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_s_p3526_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3526_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3526_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3524_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3524_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3524_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_s_p3522_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3522_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3522_s_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_s_p3521_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3521_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3521_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_s_p3519_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3519_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3519_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3484_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3484_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3484_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3483_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3483_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3483_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3482_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3482_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3482_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3481_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3481_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3481_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3480_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3480_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3480_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3479_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3479_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3479_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3478_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3478_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3478_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3477_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3477_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3477_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3476_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3476_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3476_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3475_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3475_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3475_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3474_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3474_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3474_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3473_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3473_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3473_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint16_t pved_cls_ser_tool_reply_s_p3469_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3469_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3469_s_is_in_range(uint16_t value)
{
    return (value <= 89u);
}

uint16_t pved_cls_ser_tool_reply_s_p3467_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3467_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3467_s_is_in_range(uint16_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_s_p3465_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3465_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3465_s_is_in_range(uint16_t value)
{
    return (value <= 89u);
}

uint16_t pved_cls_ser_tool_reply_s_p3463_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3463_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3463_s_is_in_range(uint16_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_s_p3461_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3461_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3461_s_is_in_range(uint16_t value)
{
    return (value <= 89u);
}

uint16_t pved_cls_ser_tool_reply_s_p3459_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3459_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3459_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3457_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3457_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3457_s_is_in_range(uint16_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_s_p3455_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3455_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3455_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3453_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3453_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3453_s_is_in_range(uint16_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_s_p3451_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3451_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3451_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3449_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3449_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3449_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3428_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3428_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3428_s_is_in_range(uint16_t value)
{
    return (value <= 89u);
}

uint16_t pved_cls_ser_tool_reply_s_p3426_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3426_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3426_s_is_in_range(uint16_t value)
{
    return (value <= 89u);
}

uint16_t pved_cls_ser_tool_reply_s_p3424_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3424_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3424_s_is_in_range(uint16_t value)
{
    return ((value >= 1000u) && (value <= 10000u));
}

uint16_t pved_cls_ser_tool_reply_s_p3422_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3422_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3422_s_is_in_range(uint16_t value)
{
    return ((value >= 1000u) && (value <= 10000u));
}

uint8_t pved_cls_ser_tool_reply_s_p3421_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3421_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3421_s_is_in_range(uint8_t value)
{
    return (value <= 10u);
}

uint16_t pved_cls_ser_tool_reply_s_p3419_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3419_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3419_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3383_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3383_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3383_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3381_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3381_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3381_s_is_in_range(uint16_t value)
{
    return (value <= 60000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3379_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3379_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3379_s_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 400u));
}

uint8_t pved_cls_ser_tool_reply_s_p3378_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3378_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3378_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 75u));
}

uint8_t pved_cls_ser_tool_reply_s_p3377_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3377_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3377_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint16_t pved_cls_ser_tool_reply_s_p3375_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3375_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3375_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_s_p3374_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3374_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3374_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3372_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3372_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3372_s_is_in_range(uint16_t value)
{
    return (value <= 360u);
}

uint8_t pved_cls_ser_tool_reply_s_p3371_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3371_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3371_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3369_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3369_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3369_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_s_p3368_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3368_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3368_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3366_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3366_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3366_s_is_in_range(uint16_t value)
{
    return (value <= 4800u);
}

uint8_t pved_cls_ser_tool_reply_s_p3365_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3365_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3365_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3364_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3364_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3364_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3363_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3363_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3363_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3361_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3361_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3361_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_s_p3360_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3360_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3360_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3358_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3358_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3358_s_is_in_range(uint16_t value)
{
    return (value <= 4800u);
}

uint8_t pved_cls_ser_tool_reply_s_p3357_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3357_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3357_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3355_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3355_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3355_s_is_in_range(uint16_t value)
{
    return (value <= 360u);
}

uint8_t pved_cls_ser_tool_reply_s_p3354_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3354_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3354_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3352_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3352_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3352_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_s_p3351_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3351_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3351_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3349_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3349_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3349_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3323_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3323_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3323_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3322_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3322_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3322_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3321_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3321_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3321_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3320_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3320_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3320_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3319_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3319_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3319_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3318_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3318_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3318_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3317_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3317_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3317_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3316_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3316_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3316_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3315_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3315_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3315_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3314_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3314_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3314_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3313_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3313_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3313_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3312_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3312_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3312_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3311_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3311_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3311_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3310_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3310_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3310_s_is_in_range(uint8_t value)
{
    return (value <= 32u);
}

uint8_t pved_cls_ser_tool_reply_s_p3309_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3309_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3309_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 10u));
}

uint8_t pved_cls_ser_tool_reply_s_p3308_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3308_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3308_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3307_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3307_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3307_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3306_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3306_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3306_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3305_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3305_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3305_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3304_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3304_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3304_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3303_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3303_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3303_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3302_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3302_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3302_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3301_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3301_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3301_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 254u));
}

uint8_t pved_cls_ser_tool_reply_s_p3300_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3300_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3300_s_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_s_p3299_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3299_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3299_s_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_s_p3298_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3298_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3298_s_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_s_p3297_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3297_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3297_s_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_s_p3296_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3296_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3296_s_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_s_p3295_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3295_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3295_s_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_s_p3294_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3294_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3294_s_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_s_p3293_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3293_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3293_s_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_s_p3292_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3292_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3292_s_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_s_p3291_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3291_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3291_s_is_in_range(uint8_t value)
{
    return (value >= 5u);
}

uint8_t pved_cls_ser_tool_reply_s_p3290_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3290_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3290_s_is_in_range(uint8_t value)
{
    return (value >= 2u);
}

uint8_t pved_cls_ser_tool_reply_s_p3289_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3289_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3289_s_is_in_range(uint8_t value)
{
    return (value >= 10u);
}

uint8_t pved_cls_ser_tool_reply_s_p3288_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3288_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3288_s_is_in_range(uint8_t value)
{
    return (value >= 10u);
}

uint8_t pved_cls_ser_tool_reply_s_p3287_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3287_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3287_s_is_in_range(uint8_t value)
{
    return (value >= 5u);
}

uint16_t pved_cls_ser_tool_reply_s_p3285_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3285_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3285_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3253_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3253_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3253_s_is_in_range(uint8_t value)
{
    return ((value >= 5u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_s_p3252_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3252_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3252_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3251_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3251_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3251_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3250_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3250_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3250_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_s_p3249_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3249_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3249_s_is_in_range(uint8_t value)
{
    return ((value >= 5u) && (value <= 200u));
}

uint8_t pved_cls_ser_tool_reply_s_p3248_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3248_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3248_s_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_s_p3247_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3247_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3247_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3246_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3246_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3246_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3245_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3245_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3245_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3244_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3244_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3244_s_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_s_p3243_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3243_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3243_s_is_in_range(uint8_t value)
{
    return (value >= 10u);
}

uint8_t pved_cls_ser_tool_reply_s_p3242_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3242_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3242_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3241_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3241_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3241_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3240_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3240_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3240_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3239_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3239_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3239_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3238_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3238_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3238_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3237_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3237_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3237_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3235_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3235_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3235_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3219_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3219_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3219_s_is_in_range(uint16_t value)
{
    return ((value >= 4650u) && (value <= 5350u));
}

uint16_t pved_cls_ser_tool_reply_s_p3217_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3217_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3217_s_is_in_range(uint16_t value)
{
    return ((value >= 4650u) && (value <= 5350u));
}

uint16_t pved_cls_ser_tool_reply_s_p3215_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3215_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3215_s_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3213_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3213_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3213_s_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3211_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3211_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3211_s_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3209_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3209_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3209_s_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3207_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3207_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3207_s_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3205_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3205_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3205_s_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3203_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3203_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3203_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3189_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3189_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3189_s_is_in_range(uint16_t value)
{
    return (value <= 5000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3187_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3187_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3187_s_is_in_range(uint16_t value)
{
    return (value <= 5000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3185_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3185_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3185_s_is_in_range(uint16_t value)
{
    return (value <= 5000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3183_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3183_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3183_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int16_t pved_cls_ser_tool_reply_s_p3170_s_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3170_s_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3170_s_is_in_range(int16_t value)
{
    return ((value >= 0) && (value <= 150));
}

int16_t pved_cls_ser_tool_reply_s_p3168_s_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3168_s_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3168_s_is_in_range(int16_t value)
{
    return ((value >= 0) && (value <= 300));
}

int16_t pved_cls_ser_tool_reply_s_p3166_s_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3166_s_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3166_s_is_in_range(int16_t value)
{
    return ((value >= -300) && (value <= 0));
}

int16_t pved_cls_ser_tool_reply_s_p3164_s_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3164_s_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3164_s_is_in_range(int16_t value)
{
    return ((value >= 300) && (value <= 1000));
}

int16_t pved_cls_ser_tool_reply_s_p3162_s_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3162_s_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3162_s_is_in_range(int16_t value)
{
    return ((value >= -1000) && (value <= 300));
}

uint16_t pved_cls_ser_tool_reply_s_p3160_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3160_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3160_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3134_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3134_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3134_s_is_in_range(uint8_t value)
{
    return (value <= 10u);
}

uint8_t pved_cls_ser_tool_reply_s_p3133_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3133_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3133_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3132_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3132_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3132_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

int16_t pved_cls_ser_tool_reply_s_p3130_s_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3130_s_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3130_s_is_in_range(int16_t value)
{
    return ((value >= -200) && (value <= 200));
}

int16_t pved_cls_ser_tool_reply_s_p3128_s_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3128_s_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3128_s_is_in_range(int16_t value)
{
    return ((value >= -200) && (value <= 200));
}

uint16_t pved_cls_ser_tool_reply_s_p3126_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3126_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3126_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_s_p3125_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3125_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3125_s_is_in_range(uint8_t value)
{
    return (value <= 10u);
}

uint8_t pved_cls_ser_tool_reply_s_p3124_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3124_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3124_s_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 20u));
}

uint8_t pved_cls_ser_tool_reply_s_p3123_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3123_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3123_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3122_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3122_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3122_s_is_in_range(uint8_t value)
{
    return (value <= 150u);
}

uint16_t pved_cls_ser_tool_reply_s_p3120_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3120_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3120_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3097_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3097_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3097_s_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

int16_t pved_cls_ser_tool_reply_s_p3095_s_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3095_s_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3095_s_is_in_range(int16_t value)
{
    return ((value >= 0) && (value <= 150));
}

int16_t pved_cls_ser_tool_reply_s_p3093_s_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3093_s_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3093_s_is_in_range(int16_t value)
{
    return ((value >= 0) && (value <= 1000));
}

int16_t pved_cls_ser_tool_reply_s_p3091_s_encode(double value)
{
    return (int16_t)(value - 1000.0);
}

double pved_cls_ser_tool_reply_s_p3091_s_decode(int16_t value)
{
    return ((double)value + 1000.0);
}

bool pved_cls_ser_tool_reply_s_p3091_s_is_in_range(int16_t value)
{
    return ((value >= -1000) && (value <= 0));
}

uint8_t pved_cls_ser_tool_reply_s_p3090_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3090_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3090_s_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_s_p3089_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3089_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3089_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3088_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3088_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3088_s_is_in_range(uint8_t value)
{
    return ((value >= 5u) && (value <= 120u));
}

uint16_t pved_cls_ser_tool_reply_s_p3086_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3086_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3086_s_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 10000u));
}

uint16_t pved_cls_ser_tool_reply_s_p3084_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3084_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3084_s_is_in_range(uint16_t value)
{
    return (value <= 1200u);
}

uint16_t pved_cls_ser_tool_reply_s_p3082_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3082_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3082_s_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 1000u));
}

uint8_t pved_cls_ser_tool_reply_s_p3081_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3081_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3081_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3080_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3080_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3080_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_p3078_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3078_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3078_s_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_s_p3076_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3076_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3076_s_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 2000u));
}

uint16_t pved_cls_ser_tool_reply_s_p3074_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_p3074_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3074_s_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 2000u));
}

uint8_t pved_cls_ser_tool_reply_s_p3073_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3073_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3073_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_p3072_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_p3072_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_p3072_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_reply_spl_set_last_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_ser_tool_reply_s_reply_spl_set_last_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_ser_tool_reply_s_reply_spl_set_last_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_ser_tool_reply_s_reply_ad2_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_ad2_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_ad2_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_s_reply_req_cov_pwm_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_req_cov_pwm_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_req_cov_pwm_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_reply_sensor_voltage_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_s_reply_sensor_voltage_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_s_reply_sensor_voltage_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_s_reply_t_last_move_s_encode(double value)
{
    return (uint16_t)(value - -20.0);
}

double pved_cls_ser_tool_reply_s_reply_t_last_move_s_decode(uint16_t value)
{
    return ((double)value + -20.0);
}

bool pved_cls_ser_tool_reply_s_reply_t_last_move_s_is_in_range(uint16_t value)
{
    return ((value >= 20u) && (value <= 65534u));
}

int pved_cls_ser_tool_reply_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_ser_tool_reply_m_t *src_p,
    size_t size)
{
    uint16_t p3091_m;
    uint16_t p3093_m;
    uint16_t p3095_m;
    uint16_t p3128_m;
    uint16_t p3130_m;
    uint16_t p3162_m;
    uint16_t p3164_m;
    uint16_t p3166_m;
    uint16_t p3168_m;
    uint16_t p3170_m;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->ser_tool_reply_xid_m, 0u, 0xffu);

    switch (src_p->ser_tool_reply_xid_m) {

    case 131:
        dst_p[1] |= pack_left_shift_u8(src_p->reply_sensor5_v_state_m, 4u, 0x30u);
        dst_p[1] |= pack_left_shift_u8(src_p->reply_css_state_m, 6u, 0xc0u);
        dst_p[2] |= pack_left_shift_u16(src_p->reply_req_spool_pos_m, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->reply_req_spool_pos_m, 8u, 0xffu);
        dst_p[4] |= pack_left_shift_u8(src_p->reply_req_cov_pwm_m, 0u, 0xffu);
        break;

    case 135:
        dst_p[1] |= pack_left_shift_u8(src_p->reply_param_data_length_m, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u16(src_p->reply_param_address_m, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->reply_param_address_m, 8u, 0xffu);

        switch (src_p->reply_param_address_m) {

        case 3072:
            dst_p[4] |= pack_left_shift_u8(src_p->p3072_m, 0u, 0xffu);
            break;

        case 3073:
            dst_p[4] |= pack_left_shift_u8(src_p->p3073_m, 0u, 0xffu);
            break;

        case 3074:
            dst_p[4] |= pack_left_shift_u16(src_p->p3074_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3074_m, 8u, 0xffu);
            break;

        case 3076:
            dst_p[4] |= pack_left_shift_u16(src_p->p3076_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3076_m, 8u, 0xffu);
            break;

        case 3078:
            dst_p[4] |= pack_left_shift_u16(src_p->p3078_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3078_m, 8u, 0xffu);
            break;

        case 3080:
            dst_p[4] |= pack_left_shift_u8(src_p->p3080_m, 0u, 0xffu);
            break;

        case 3081:
            dst_p[4] |= pack_left_shift_u8(src_p->p3081_m, 0u, 0xffu);
            break;

        case 3082:
            dst_p[4] |= pack_left_shift_u16(src_p->p3082_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3082_m, 8u, 0xffu);
            break;

        case 3084:
            dst_p[4] |= pack_left_shift_u16(src_p->p3084_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3084_m, 8u, 0xffu);
            break;

        case 3086:
            dst_p[4] |= pack_left_shift_u16(src_p->p3086_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3086_m, 8u, 0xffu);
            break;

        case 3088:
            dst_p[4] |= pack_left_shift_u8(src_p->p3088_m, 0u, 0xffu);
            break;

        case 3089:
            dst_p[4] |= pack_left_shift_u8(src_p->p3089_m, 0u, 0xffu);
            break;

        case 3090:
            dst_p[4] |= pack_left_shift_u8(src_p->p3090_m, 0u, 0xffu);
            break;

        case 3091:
            p3091_m = (uint16_t)src_p->p3091_m;
            dst_p[4] |= pack_left_shift_u16(p3091_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3091_m, 8u, 0xffu);
            break;

        case 3093:
            p3093_m = (uint16_t)src_p->p3093_m;
            dst_p[4] |= pack_left_shift_u16(p3093_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3093_m, 8u, 0xffu);
            break;

        case 3095:
            p3095_m = (uint16_t)src_p->p3095_m;
            dst_p[4] |= pack_left_shift_u16(p3095_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3095_m, 8u, 0xffu);
            break;

        case 3097:
            dst_p[4] |= pack_left_shift_u8(src_p->p3097_m, 0u, 0xffu);
            break;

        case 3120:
            dst_p[4] |= pack_left_shift_u16(src_p->p3120_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3120_m, 8u, 0xffu);
            break;

        case 3122:
            dst_p[4] |= pack_left_shift_u8(src_p->p3122_m, 0u, 0xffu);
            break;

        case 3123:
            dst_p[4] |= pack_left_shift_u8(src_p->p3123_m, 0u, 0xffu);
            break;

        case 3124:
            dst_p[4] |= pack_left_shift_u8(src_p->p3124_m, 0u, 0xffu);
            break;

        case 3125:
            dst_p[4] |= pack_left_shift_u8(src_p->p3125_m, 0u, 0xffu);
            break;

        case 3126:
            dst_p[4] |= pack_left_shift_u16(src_p->p3126_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3126_m, 8u, 0xffu);
            break;

        case 3128:
            p3128_m = (uint16_t)src_p->p3128_m;
            dst_p[4] |= pack_left_shift_u16(p3128_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3128_m, 8u, 0xffu);
            break;

        case 3130:
            p3130_m = (uint16_t)src_p->p3130_m;
            dst_p[4] |= pack_left_shift_u16(p3130_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3130_m, 8u, 0xffu);
            break;

        case 3132:
            dst_p[4] |= pack_left_shift_u8(src_p->p3132_m, 0u, 0xffu);
            break;

        case 3133:
            dst_p[4] |= pack_left_shift_u8(src_p->p3133_m, 0u, 0xffu);
            break;

        case 3134:
            dst_p[4] |= pack_left_shift_u8(src_p->p3134_m, 0u, 0xffu);
            break;

        case 3160:
            dst_p[4] |= pack_left_shift_u16(src_p->p3160_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3160_m, 8u, 0xffu);
            break;

        case 3162:
            p3162_m = (uint16_t)src_p->p3162_m;
            dst_p[4] |= pack_left_shift_u16(p3162_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3162_m, 8u, 0xffu);
            break;

        case 3164:
            p3164_m = (uint16_t)src_p->p3164_m;
            dst_p[4] |= pack_left_shift_u16(p3164_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3164_m, 8u, 0xffu);
            break;

        case 3166:
            p3166_m = (uint16_t)src_p->p3166_m;
            dst_p[4] |= pack_left_shift_u16(p3166_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3166_m, 8u, 0xffu);
            break;

        case 3168:
            p3168_m = (uint16_t)src_p->p3168_m;
            dst_p[4] |= pack_left_shift_u16(p3168_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3168_m, 8u, 0xffu);
            break;

        case 3170:
            p3170_m = (uint16_t)src_p->p3170_m;
            dst_p[4] |= pack_left_shift_u16(p3170_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(p3170_m, 8u, 0xffu);
            break;

        case 3183:
            dst_p[4] |= pack_left_shift_u16(src_p->p3183_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3183_m, 8u, 0xffu);
            break;

        case 3185:
            dst_p[4] |= pack_left_shift_u16(src_p->p3185_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3185_m, 8u, 0xffu);
            break;

        case 3187:
            dst_p[4] |= pack_left_shift_u16(src_p->p3187_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3187_m, 8u, 0xffu);
            break;

        case 3189:
            dst_p[4] |= pack_left_shift_u16(src_p->p3189_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3189_m, 8u, 0xffu);
            break;

        case 3203:
            dst_p[4] |= pack_left_shift_u16(src_p->p3203_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3203_m, 8u, 0xffu);
            break;

        case 3205:
            dst_p[4] |= pack_left_shift_u16(src_p->p3205_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3205_m, 8u, 0xffu);
            break;

        case 3207:
            dst_p[4] |= pack_left_shift_u16(src_p->p3207_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3207_m, 8u, 0xffu);
            break;

        case 3209:
            dst_p[4] |= pack_left_shift_u16(src_p->p3209_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3209_m, 8u, 0xffu);
            break;

        case 3211:
            dst_p[4] |= pack_left_shift_u16(src_p->p3211_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3211_m, 8u, 0xffu);
            break;

        case 3213:
            dst_p[4] |= pack_left_shift_u16(src_p->p3213_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3213_m, 8u, 0xffu);
            break;

        case 3215:
            dst_p[4] |= pack_left_shift_u16(src_p->p3215_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3215_m, 8u, 0xffu);
            break;

        case 3217:
            dst_p[4] |= pack_left_shift_u16(src_p->p3217_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3217_m, 8u, 0xffu);
            break;

        case 3219:
            dst_p[4] |= pack_left_shift_u16(src_p->p3219_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3219_m, 8u, 0xffu);
            break;

        case 3235:
            dst_p[4] |= pack_left_shift_u16(src_p->p3235_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3235_m, 8u, 0xffu);
            break;

        case 3237:
            dst_p[4] |= pack_left_shift_u8(src_p->p3237_m, 0u, 0xffu);
            break;

        case 3238:
            dst_p[4] |= pack_left_shift_u8(src_p->p3238_m, 0u, 0xffu);
            break;

        case 3239:
            dst_p[4] |= pack_left_shift_u8(src_p->p3239_m, 0u, 0xffu);
            break;

        case 3240:
            dst_p[4] |= pack_left_shift_u8(src_p->p3240_m, 0u, 0xffu);
            break;

        case 3241:
            dst_p[4] |= pack_left_shift_u8(src_p->p3241_m, 0u, 0xffu);
            break;

        case 3242:
            dst_p[4] |= pack_left_shift_u8(src_p->p3242_m, 0u, 0xffu);
            break;

        case 3243:
            dst_p[4] |= pack_left_shift_u8(src_p->p3243_m, 0u, 0xffu);
            break;

        case 3244:
            dst_p[4] |= pack_left_shift_u8(src_p->p3244_m, 0u, 0xffu);
            break;

        case 3245:
            dst_p[4] |= pack_left_shift_u8(src_p->p3245_m, 0u, 0xffu);
            break;

        case 3246:
            dst_p[4] |= pack_left_shift_u8(src_p->p3246_m, 0u, 0xffu);
            break;

        case 3247:
            dst_p[4] |= pack_left_shift_u8(src_p->p3247_m, 0u, 0xffu);
            break;

        case 3248:
            dst_p[4] |= pack_left_shift_u8(src_p->p3248_m, 0u, 0xffu);
            break;

        case 3249:
            dst_p[4] |= pack_left_shift_u8(src_p->p3249_m, 0u, 0xffu);
            break;

        case 3250:
            dst_p[4] |= pack_left_shift_u8(src_p->p3250_m, 0u, 0xffu);
            break;

        case 3251:
            dst_p[4] |= pack_left_shift_u8(src_p->p3251_m, 0u, 0xffu);
            break;

        case 3252:
            dst_p[4] |= pack_left_shift_u8(src_p->p3252_m, 0u, 0xffu);
            break;

        case 3253:
            dst_p[4] |= pack_left_shift_u8(src_p->p3253_m, 0u, 0xffu);
            break;

        case 3285:
            dst_p[4] |= pack_left_shift_u16(src_p->p3285_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3285_m, 8u, 0xffu);
            break;

        case 3287:
            dst_p[4] |= pack_left_shift_u8(src_p->p3287_m, 0u, 0xffu);
            break;

        case 3288:
            dst_p[4] |= pack_left_shift_u8(src_p->p3288_m, 0u, 0xffu);
            break;

        case 3289:
            dst_p[4] |= pack_left_shift_u8(src_p->p3289_m, 0u, 0xffu);
            break;

        case 3290:
            dst_p[4] |= pack_left_shift_u8(src_p->p3290_m, 0u, 0xffu);
            break;

        case 3291:
            dst_p[4] |= pack_left_shift_u8(src_p->p3291_m, 0u, 0xffu);
            break;

        case 3292:
            dst_p[4] |= pack_left_shift_u8(src_p->p3292_m, 0u, 0xffu);
            break;

        case 3293:
            dst_p[4] |= pack_left_shift_u8(src_p->p3293_m, 0u, 0xffu);
            break;

        case 3294:
            dst_p[4] |= pack_left_shift_u8(src_p->p3294_m, 0u, 0xffu);
            break;

        case 3295:
            dst_p[4] |= pack_left_shift_u8(src_p->p3295_m, 0u, 0xffu);
            break;

        case 3296:
            dst_p[4] |= pack_left_shift_u8(src_p->p3296_m, 0u, 0xffu);
            break;

        case 3297:
            dst_p[4] |= pack_left_shift_u8(src_p->p3297_m, 0u, 0xffu);
            break;

        case 3298:
            dst_p[4] |= pack_left_shift_u8(src_p->p3298_m, 0u, 0xffu);
            break;

        case 3299:
            dst_p[4] |= pack_left_shift_u8(src_p->p3299_m, 0u, 0xffu);
            break;

        case 3300:
            dst_p[4] |= pack_left_shift_u8(src_p->p3300_m, 0u, 0xffu);
            break;

        case 3301:
            dst_p[4] |= pack_left_shift_u8(src_p->p3301_m, 0u, 0xffu);
            break;

        case 3302:
            dst_p[4] |= pack_left_shift_u8(src_p->p3302_m, 0u, 0xffu);
            break;

        case 3303:
            dst_p[4] |= pack_left_shift_u8(src_p->p3303_m, 0u, 0xffu);
            break;

        case 3304:
            dst_p[4] |= pack_left_shift_u8(src_p->p3304_m, 0u, 0xffu);
            break;

        case 3305:
            dst_p[4] |= pack_left_shift_u8(src_p->p3305_m, 0u, 0xffu);
            break;

        case 3306:
            dst_p[4] |= pack_left_shift_u8(src_p->p3306_m, 0u, 0xffu);
            break;

        case 3307:
            dst_p[4] |= pack_left_shift_u8(src_p->p3307_m, 0u, 0xffu);
            break;

        case 3308:
            dst_p[4] |= pack_left_shift_u8(src_p->p3308_m, 0u, 0xffu);
            break;

        case 3309:
            dst_p[4] |= pack_left_shift_u8(src_p->p3309_m, 0u, 0xffu);
            break;

        case 3310:
            dst_p[4] |= pack_left_shift_u8(src_p->p3310_m, 0u, 0xffu);
            break;

        case 3311:
            dst_p[4] |= pack_left_shift_u8(src_p->p3311_m, 0u, 0xffu);
            break;

        case 3312:
            dst_p[4] |= pack_left_shift_u8(src_p->p3312_m, 0u, 0xffu);
            break;

        case 3313:
            dst_p[4] |= pack_left_shift_u8(src_p->p3313_m, 0u, 0xffu);
            break;

        case 3314:
            dst_p[4] |= pack_left_shift_u8(src_p->p3314_m, 0u, 0xffu);
            break;

        case 3315:
            dst_p[4] |= pack_left_shift_u8(src_p->p3315_m, 0u, 0xffu);
            break;

        case 3316:
            dst_p[4] |= pack_left_shift_u8(src_p->p3316_m, 0u, 0xffu);
            break;

        case 3317:
            dst_p[4] |= pack_left_shift_u8(src_p->p3317_m, 0u, 0xffu);
            break;

        case 3318:
            dst_p[4] |= pack_left_shift_u8(src_p->p3318_m, 0u, 0xffu);
            break;

        case 3319:
            dst_p[4] |= pack_left_shift_u8(src_p->p3319_m, 0u, 0xffu);
            break;

        case 3320:
            dst_p[4] |= pack_left_shift_u8(src_p->p3320_m, 0u, 0xffu);
            break;

        case 3321:
            dst_p[4] |= pack_left_shift_u8(src_p->p3321_m, 0u, 0xffu);
            break;

        case 3322:
            dst_p[4] |= pack_left_shift_u8(src_p->p3322_m, 0u, 0xffu);
            break;

        case 3323:
            dst_p[4] |= pack_left_shift_u8(src_p->p3323_m, 0u, 0xffu);
            break;

        case 3349:
            dst_p[4] |= pack_left_shift_u16(src_p->p3349_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3349_m, 8u, 0xffu);
            break;

        case 3351:
            dst_p[4] |= pack_left_shift_u8(src_p->p3351_m, 0u, 0xffu);
            break;

        case 3352:
            dst_p[4] |= pack_left_shift_u16(src_p->p3352_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3352_m, 8u, 0xffu);
            break;

        case 3354:
            dst_p[4] |= pack_left_shift_u8(src_p->p3354_m, 0u, 0xffu);
            break;

        case 3355:
            dst_p[4] |= pack_left_shift_u16(src_p->p3355_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3355_m, 8u, 0xffu);
            break;

        case 3357:
            dst_p[4] |= pack_left_shift_u8(src_p->p3357_m, 0u, 0xffu);
            break;

        case 3358:
            dst_p[4] |= pack_left_shift_u16(src_p->p3358_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3358_m, 8u, 0xffu);
            break;

        case 3360:
            dst_p[4] |= pack_left_shift_u8(src_p->p3360_m, 0u, 0xffu);
            break;

        case 3361:
            dst_p[4] |= pack_left_shift_u16(src_p->p3361_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3361_m, 8u, 0xffu);
            break;

        case 3363:
            dst_p[4] |= pack_left_shift_u8(src_p->p3363_m, 0u, 0xffu);
            break;

        case 3364:
            dst_p[4] |= pack_left_shift_u8(src_p->p3364_m, 0u, 0xffu);
            break;

        case 3365:
            dst_p[4] |= pack_left_shift_u8(src_p->p3365_m, 0u, 0xffu);
            break;

        case 3366:
            dst_p[4] |= pack_left_shift_u16(src_p->p3366_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3366_m, 8u, 0xffu);
            break;

        case 3368:
            dst_p[4] |= pack_left_shift_u8(src_p->p3368_m, 0u, 0xffu);
            break;

        case 3369:
            dst_p[4] |= pack_left_shift_u16(src_p->p3369_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3369_m, 8u, 0xffu);
            break;

        case 3371:
            dst_p[4] |= pack_left_shift_u8(src_p->p3371_m, 0u, 0xffu);
            break;

        case 3372:
            dst_p[4] |= pack_left_shift_u16(src_p->p3372_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3372_m, 8u, 0xffu);
            break;

        case 3374:
            dst_p[4] |= pack_left_shift_u8(src_p->p3374_m, 0u, 0xffu);
            break;

        case 3375:
            dst_p[4] |= pack_left_shift_u16(src_p->p3375_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3375_m, 8u, 0xffu);
            break;

        case 3377:
            dst_p[4] |= pack_left_shift_u8(src_p->p3377_m, 0u, 0xffu);
            break;

        case 3378:
            dst_p[4] |= pack_left_shift_u8(src_p->p3378_m, 0u, 0xffu);
            break;

        case 3379:
            dst_p[4] |= pack_left_shift_u16(src_p->p3379_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3379_m, 8u, 0xffu);
            break;

        case 3381:
            dst_p[4] |= pack_left_shift_u16(src_p->p3381_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3381_m, 8u, 0xffu);
            break;

        case 3383:
            dst_p[4] |= pack_left_shift_u8(src_p->p3383_m, 0u, 0xffu);
            break;

        case 3419:
            dst_p[4] |= pack_left_shift_u16(src_p->p3419_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3419_m, 8u, 0xffu);
            break;

        case 3421:
            dst_p[4] |= pack_left_shift_u8(src_p->p3421_m, 0u, 0xffu);
            break;

        case 3422:
            dst_p[4] |= pack_left_shift_u16(src_p->p3422_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3422_m, 8u, 0xffu);
            break;

        case 3424:
            dst_p[4] |= pack_left_shift_u16(src_p->p3424_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3424_m, 8u, 0xffu);
            break;

        case 3426:
            dst_p[4] |= pack_left_shift_u16(src_p->p3426_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3426_m, 8u, 0xffu);
            break;

        case 3428:
            dst_p[4] |= pack_left_shift_u16(src_p->p3428_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3428_m, 8u, 0xffu);
            break;

        case 3449:
            dst_p[4] |= pack_left_shift_u16(src_p->p3449_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3449_m, 8u, 0xffu);
            break;

        case 3451:
            dst_p[4] |= pack_left_shift_u16(src_p->p3451_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3451_m, 8u, 0xffu);
            break;

        case 3453:
            dst_p[4] |= pack_left_shift_u16(src_p->p3453_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3453_m, 8u, 0xffu);
            break;

        case 3455:
            dst_p[4] |= pack_left_shift_u16(src_p->p3455_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3455_m, 8u, 0xffu);
            break;

        case 3457:
            dst_p[4] |= pack_left_shift_u16(src_p->p3457_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3457_m, 8u, 0xffu);
            break;

        case 3459:
            dst_p[4] |= pack_left_shift_u16(src_p->p3459_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3459_m, 8u, 0xffu);
            break;

        case 3461:
            dst_p[4] |= pack_left_shift_u16(src_p->p3461_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3461_m, 8u, 0xffu);
            break;

        case 3463:
            dst_p[4] |= pack_left_shift_u16(src_p->p3463_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3463_m, 8u, 0xffu);
            break;

        case 3465:
            dst_p[4] |= pack_left_shift_u16(src_p->p3465_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3465_m, 8u, 0xffu);
            break;

        case 3467:
            dst_p[4] |= pack_left_shift_u16(src_p->p3467_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3467_m, 8u, 0xffu);
            break;

        case 3469:
            dst_p[4] |= pack_left_shift_u16(src_p->p3469_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3469_m, 8u, 0xffu);
            break;

        case 3473:
            dst_p[4] |= pack_left_shift_u8(src_p->p3473_m, 0u, 0xffu);
            break;

        case 3474:
            dst_p[4] |= pack_left_shift_u8(src_p->p3474_m, 0u, 0xffu);
            break;

        case 3475:
            dst_p[4] |= pack_left_shift_u8(src_p->p3475_m, 0u, 0xffu);
            break;

        case 3476:
            dst_p[4] |= pack_left_shift_u8(src_p->p3476_m, 0u, 0xffu);
            break;

        case 3477:
            dst_p[4] |= pack_left_shift_u8(src_p->p3477_m, 0u, 0xffu);
            break;

        case 3478:
            dst_p[4] |= pack_left_shift_u8(src_p->p3478_m, 0u, 0xffu);
            break;

        case 3479:
            dst_p[4] |= pack_left_shift_u8(src_p->p3479_m, 0u, 0xffu);
            break;

        case 3480:
            dst_p[4] |= pack_left_shift_u8(src_p->p3480_m, 0u, 0xffu);
            break;

        case 3481:
            dst_p[4] |= pack_left_shift_u8(src_p->p3481_m, 0u, 0xffu);
            break;

        case 3482:
            dst_p[4] |= pack_left_shift_u8(src_p->p3482_m, 0u, 0xffu);
            break;

        case 3483:
            dst_p[4] |= pack_left_shift_u8(src_p->p3483_m, 0u, 0xffu);
            break;

        case 3484:
            dst_p[4] |= pack_left_shift_u8(src_p->p3484_m, 0u, 0xffu);
            break;

        case 3519:
            dst_p[4] |= pack_left_shift_u16(src_p->p3519_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3519_m, 8u, 0xffu);
            break;

        case 3521:
            dst_p[4] |= pack_left_shift_u8(src_p->p3521_m, 0u, 0xffu);
            break;

        case 3522:
            dst_p[4] |= pack_left_shift_u16(src_p->p3522_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3522_m, 8u, 0xffu);
            break;

        case 3524:
            dst_p[4] |= pack_left_shift_u16(src_p->p3524_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3524_m, 8u, 0xffu);
            break;

        case 3526:
            dst_p[4] |= pack_left_shift_u16(src_p->p3526_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3526_m, 8u, 0xffu);
            break;

        case 3528:
            dst_p[4] |= pack_left_shift_u8(src_p->p3528_m, 0u, 0xffu);
            break;

        case 3529:
            dst_p[4] |= pack_left_shift_u8(src_p->p3529_m, 0u, 0xffu);
            break;

        case 3530:
            dst_p[4] |= pack_left_shift_u16(src_p->p3530_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3530_m, 8u, 0xffu);
            break;

        case 3532:
            dst_p[4] |= pack_left_shift_u16(src_p->p3532_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3532_m, 8u, 0xffu);
            break;

        case 3534:
            dst_p[4] |= pack_left_shift_u16(src_p->p3534_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3534_m, 8u, 0xffu);
            break;

        case 3536:
            dst_p[4] |= pack_left_shift_u8(src_p->p3536_m, 0u, 0xffu);
            break;

        case 3537:
            dst_p[4] |= pack_left_shift_u8(src_p->p3537_m, 0u, 0xffu);
            break;

        case 3538:
            dst_p[4] |= pack_left_shift_u16(src_p->p3538_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3538_m, 8u, 0xffu);
            break;

        case 3540:
            dst_p[4] |= pack_left_shift_u16(src_p->p3540_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3540_m, 8u, 0xffu);
            break;

        case 3542:
            dst_p[4] |= pack_left_shift_u16(src_p->p3542_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3542_m, 8u, 0xffu);
            break;

        case 3544:
            dst_p[4] |= pack_left_shift_u8(src_p->p3544_m, 0u, 0xffu);
            break;

        case 3545:
            dst_p[4] |= pack_left_shift_u8(src_p->p3545_m, 0u, 0xffu);
            break;

        case 3546:
            dst_p[4] |= pack_left_shift_u16(src_p->p3546_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3546_m, 8u, 0xffu);
            break;

        case 3548:
            dst_p[4] |= pack_left_shift_u16(src_p->p3548_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3548_m, 8u, 0xffu);
            break;

        case 3550:
            dst_p[4] |= pack_left_shift_u16(src_p->p3550_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3550_m, 8u, 0xffu);
            break;

        case 3552:
            dst_p[4] |= pack_left_shift_u8(src_p->p3552_m, 0u, 0xffu);
            break;

        case 3553:
            dst_p[4] |= pack_left_shift_u8(src_p->p3553_m, 0u, 0xffu);
            break;

        case 3554:
            dst_p[4] |= pack_left_shift_u16(src_p->p3554_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3554_m, 8u, 0xffu);
            break;

        case 3556:
            dst_p[4] |= pack_left_shift_u16(src_p->p3556_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3556_m, 8u, 0xffu);
            break;

        case 3558:
            dst_p[4] |= pack_left_shift_u16(src_p->p3558_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3558_m, 8u, 0xffu);
            break;

        case 3560:
            dst_p[4] |= pack_left_shift_u8(src_p->p3560_m, 0u, 0xffu);
            break;

        case 3561:
            dst_p[4] |= pack_left_shift_u8(src_p->p3561_m, 0u, 0xffu);
            break;

        case 3562:
            dst_p[4] |= pack_left_shift_u16(src_p->p3562_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3562_m, 8u, 0xffu);
            break;

        case 3564:
            dst_p[4] |= pack_left_shift_u16(src_p->p3564_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3564_m, 8u, 0xffu);
            break;

        case 3566:
            dst_p[4] |= pack_left_shift_u16(src_p->p3566_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3566_m, 8u, 0xffu);
            break;

        case 3568:
            dst_p[4] |= pack_left_shift_u8(src_p->p3568_m, 0u, 0xffu);
            break;

        case 3569:
            dst_p[4] |= pack_left_shift_u8(src_p->p3569_m, 0u, 0xffu);
            break;

        case 3570:
            dst_p[4] |= pack_left_shift_u8(src_p->p3570_m, 0u, 0xffu);
            break;

        case 3571:
            dst_p[4] |= pack_left_shift_u8(src_p->p3571_m, 0u, 0xffu);
            break;

        case 3572:
            dst_p[4] |= pack_left_shift_u8(src_p->p3572_m, 0u, 0xffu);
            break;

        case 3573:
            dst_p[4] |= pack_left_shift_u8(src_p->p3573_m, 0u, 0xffu);
            break;

        case 3574:
            dst_p[4] |= pack_left_shift_u16(src_p->p3574_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3574_m, 8u, 0xffu);
            break;

        case 3576:
            dst_p[4] |= pack_left_shift_u16(src_p->p3576_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3576_m, 8u, 0xffu);
            break;

        case 3578:
            dst_p[4] |= pack_left_shift_u16(src_p->p3578_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3578_m, 8u, 0xffu);
            break;

        case 3580:
            dst_p[4] |= pack_left_shift_u16(src_p->p3580_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3580_m, 8u, 0xffu);
            break;

        case 3582:
            dst_p[4] |= pack_left_shift_u8(src_p->p3582_m, 0u, 0xffu);
            break;

        case 3583:
            dst_p[4] |= pack_left_shift_u8(src_p->p3583_m, 0u, 0xffu);
            break;

        case 3584:
            dst_p[4] |= pack_left_shift_u8(src_p->p3584_m, 0u, 0xffu);
            break;

        case 3644:
            dst_p[4] |= pack_left_shift_u16(src_p->p3644_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3644_m, 8u, 0xffu);
            break;

        case 3646:
            dst_p[4] |= pack_left_shift_u8(src_p->p3646_m, 0u, 0xffu);
            break;

        case 3647:
            dst_p[4] |= pack_left_shift_u8(src_p->p3647_m, 0u, 0xffu);
            break;

        case 3648:
            dst_p[4] |= pack_left_shift_u8(src_p->p3648_m, 0u, 0xffu);
            break;

        case 3649:
            dst_p[4] |= pack_left_shift_u8(src_p->p3649_m, 0u, 0xffu);
            break;

        case 3650:
            dst_p[4] |= pack_left_shift_u16(src_p->p3650_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3650_m, 8u, 0xffu);
            break;

        case 3652:
            dst_p[4] |= pack_left_shift_u16(src_p->p3652_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3652_m, 8u, 0xffu);
            break;

        case 3654:
            dst_p[4] |= pack_left_shift_u16(src_p->p3654_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3654_m, 8u, 0xffu);
            break;

        case 3656:
            dst_p[4] |= pack_left_shift_u8(src_p->p3656_m, 0u, 0xffu);
            break;

        case 3657:
            dst_p[4] |= pack_left_shift_u8(src_p->p3657_m, 0u, 0xffu);
            break;

        case 3658:
            dst_p[4] |= pack_left_shift_u16(src_p->p3658_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3658_m, 8u, 0xffu);
            break;

        case 3660:
            dst_p[4] |= pack_left_shift_u16(src_p->p3660_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3660_m, 8u, 0xffu);
            break;

        case 3662:
            dst_p[4] |= pack_left_shift_u16(src_p->p3662_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3662_m, 8u, 0xffu);
            break;

        case 3664:
            dst_p[4] |= pack_left_shift_u8(src_p->p3664_m, 0u, 0xffu);
            break;

        case 3665:
            dst_p[4] |= pack_left_shift_u8(src_p->p3665_m, 0u, 0xffu);
            break;

        case 3666:
            dst_p[4] |= pack_left_shift_u16(src_p->p3666_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3666_m, 8u, 0xffu);
            break;

        case 3668:
            dst_p[4] |= pack_left_shift_u16(src_p->p3668_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3668_m, 8u, 0xffu);
            break;

        case 3670:
            dst_p[4] |= pack_left_shift_u16(src_p->p3670_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3670_m, 8u, 0xffu);
            break;

        case 3672:
            dst_p[4] |= pack_left_shift_u8(src_p->p3672_m, 0u, 0xffu);
            break;

        case 3673:
            dst_p[4] |= pack_left_shift_u8(src_p->p3673_m, 0u, 0xffu);
            break;

        case 3674:
            dst_p[4] |= pack_left_shift_u16(src_p->p3674_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3674_m, 8u, 0xffu);
            break;

        case 3676:
            dst_p[4] |= pack_left_shift_u16(src_p->p3676_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3676_m, 8u, 0xffu);
            break;

        case 3678:
            dst_p[4] |= pack_left_shift_u16(src_p->p3678_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3678_m, 8u, 0xffu);
            break;

        case 3680:
            dst_p[4] |= pack_left_shift_u8(src_p->p3680_m, 0u, 0xffu);
            break;

        case 3681:
            dst_p[4] |= pack_left_shift_u8(src_p->p3681_m, 0u, 0xffu);
            break;

        case 3682:
            dst_p[4] |= pack_left_shift_u16(src_p->p3682_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3682_m, 8u, 0xffu);
            break;

        case 3684:
            dst_p[4] |= pack_left_shift_u16(src_p->p3684_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3684_m, 8u, 0xffu);
            break;

        case 3686:
            dst_p[4] |= pack_left_shift_u16(src_p->p3686_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3686_m, 8u, 0xffu);
            break;

        case 3688:
            dst_p[4] |= pack_left_shift_u8(src_p->p3688_m, 0u, 0xffu);
            break;

        case 3689:
            dst_p[4] |= pack_left_shift_u8(src_p->p3689_m, 0u, 0xffu);
            break;

        case 3690:
            dst_p[4] |= pack_left_shift_u16(src_p->p3690_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3690_m, 8u, 0xffu);
            break;

        case 3692:
            dst_p[4] |= pack_left_shift_u16(src_p->p3692_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3692_m, 8u, 0xffu);
            break;

        case 3694:
            dst_p[4] |= pack_left_shift_u16(src_p->p3694_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3694_m, 8u, 0xffu);
            break;

        case 3696:
            dst_p[4] |= pack_left_shift_u8(src_p->p3696_m, 0u, 0xffu);
            break;

        case 3697:
            dst_p[4] |= pack_left_shift_u8(src_p->p3697_m, 0u, 0xffu);
            break;

        case 3698:
            dst_p[4] |= pack_left_shift_u8(src_p->p3698_m, 0u, 0xffu);
            break;

        case 3699:
            dst_p[4] |= pack_left_shift_u8(src_p->p3699_m, 0u, 0xffu);
            break;

        case 3700:
            dst_p[4] |= pack_left_shift_u8(src_p->p3700_m, 0u, 0xffu);
            break;

        case 3701:
            dst_p[4] |= pack_left_shift_u16(src_p->p3701_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3701_m, 8u, 0xffu);
            break;

        case 3703:
            dst_p[4] |= pack_left_shift_u16(src_p->p3703_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3703_m, 8u, 0xffu);
            break;

        case 3705:
            dst_p[4] |= pack_left_shift_u8(src_p->p3705_m, 0u, 0xffu);
            break;

        case 3706:
            dst_p[4] |= pack_left_shift_u16(src_p->p3706_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3706_m, 8u, 0xffu);
            break;

        case 3708:
            dst_p[4] |= pack_left_shift_u16(src_p->p3708_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3708_m, 8u, 0xffu);
            break;

        case 3710:
            dst_p[4] |= pack_left_shift_u16(src_p->p3710_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3710_m, 8u, 0xffu);
            break;

        case 3712:
            dst_p[4] |= pack_left_shift_u16(src_p->p3712_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3712_m, 8u, 0xffu);
            break;

        case 3714:
            dst_p[4] |= pack_left_shift_u16(src_p->p3714_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3714_m, 8u, 0xffu);
            break;

        case 3716:
            dst_p[4] |= pack_left_shift_u16(src_p->p3716_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3716_m, 8u, 0xffu);
            break;

        case 3718:
            dst_p[4] |= pack_left_shift_u8(src_p->p3718_m, 0u, 0xffu);
            break;

        case 3719:
            dst_p[4] |= pack_left_shift_u8(src_p->p3719_m, 0u, 0xffu);
            break;

        case 3769:
            dst_p[4] |= pack_left_shift_u16(src_p->p3769_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3769_m, 8u, 0xffu);
            break;

        case 3771:
            dst_p[4] |= pack_left_shift_u8(src_p->p3771_m, 0u, 0xffu);
            break;

        case 3772:
            dst_p[4] |= pack_left_shift_u8(src_p->p3772_m, 0u, 0xffu);
            break;

        case 3773:
            dst_p[4] |= pack_left_shift_u8(src_p->p3773_m, 0u, 0xffu);
            break;

        case 3774:
            dst_p[4] |= pack_left_shift_u8(src_p->p3774_m, 0u, 0xffu);
            break;

        case 3775:
            dst_p[4] |= pack_left_shift_u8(src_p->p3775_m, 0u, 0xffu);
            break;

        case 3776:
            dst_p[4] |= pack_left_shift_u8(src_p->p3776_m, 0u, 0xffu);
            break;

        case 3789:
            dst_p[4] |= pack_left_shift_u16(src_p->p3789_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3789_m, 8u, 0xffu);
            break;

        case 3791:
            dst_p[4] |= pack_left_shift_u16(src_p->p3791_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3791_m, 8u, 0xffu);
            break;

        case 3793:
            dst_p[4] |= pack_left_shift_u16(src_p->p3793_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3793_m, 8u, 0xffu);
            break;

        case 3795:
            dst_p[4] |= pack_left_shift_u16(src_p->p3795_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3795_m, 8u, 0xffu);
            break;

        case 3797:
            dst_p[4] |= pack_left_shift_u16(src_p->p3797_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3797_m, 8u, 0xffu);
            break;

        case 3799:
            dst_p[4] |= pack_left_shift_u16(src_p->p3799_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3799_m, 8u, 0xffu);
            break;

        case 3801:
            dst_p[4] |= pack_left_shift_u8(src_p->p3801_m, 0u, 0xffu);
            break;

        case 3802:
            dst_p[4] |= pack_left_shift_u16(src_p->p3802_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3802_m, 8u, 0xffu);
            break;

        case 3804:
            dst_p[4] |= pack_left_shift_u16(src_p->p3804_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3804_m, 8u, 0xffu);
            break;

        case 3806:
            dst_p[4] |= pack_left_shift_u16(src_p->p3806_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3806_m, 8u, 0xffu);
            break;

        case 3808:
            dst_p[4] |= pack_left_shift_u16(src_p->p3808_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3808_m, 8u, 0xffu);
            break;

        case 3810:
            dst_p[4] |= pack_left_shift_u8(src_p->p3810_m, 0u, 0xffu);
            break;

        case 3811:
            dst_p[4] |= pack_left_shift_u8(src_p->p3811_m, 0u, 0xffu);
            break;

        case 3812:
            dst_p[4] |= pack_left_shift_u16(src_p->p3812_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3812_m, 8u, 0xffu);
            break;

        case 3814:
            dst_p[4] |= pack_left_shift_u8(src_p->p3814_m, 0u, 0xffu);
            break;

        case 3822:
            dst_p[4] |= pack_left_shift_u16(src_p->p3822_m, 0u, 0xffu);
            dst_p[5] |= pack_right_shift_u16(src_p->p3822_m, 8u, 0xffu);
            break;

        default:
            break;
        }
        break;

    case 143:
        dst_p[1] |= pack_left_shift_u8(src_p->reply_consistency_chk_m, 0u, 0x03u);
        dst_p[1] |= pack_left_shift_u8(src_p->reply_input_status_m, 2u, 0x0cu);
        dst_p[1] |= pack_left_shift_u8(src_p->reply_result_from_ecu_m, 4u, 0x10u);
        dst_p[1] |= pack_left_shift_u8(src_p->reply_pos_captured_m, 5u, 0x20u);
        dst_p[1] |= pack_left_shift_u8(src_p->reply_was_captured_m, 6u, 0xc0u);
        dst_p[2] |= pack_left_shift_u16(src_p->reply_ad1_m, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->reply_ad1_m, 8u, 0xffu);
        dst_p[4] |= pack_left_shift_u16(src_p->reply_ad2_m, 0u, 0xffu);
        dst_p[5] |= pack_right_shift_u16(src_p->reply_ad2_m, 8u, 0xffu);
        dst_p[6] |= pack_left_shift_u16(src_p->reply_sensor_voltage_m, 0u, 0xffu);
        dst_p[7] |= pack_right_shift_u16(src_p->reply_sensor_voltage_m, 8u, 0xffu);
        break;

    case 145:
        dst_p[1] |= pack_left_shift_u8(src_p->reply_calib_err_code_m, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u8(src_p->reply_wa_mov_status_r_m, 4u, 0x30u);
        dst_p[2] |= pack_left_shift_u8(src_p->reply_wa_mov_status_l_m, 6u, 0xc0u);
        dst_p[3] |= pack_left_shift_u8(src_p->reply_calibration_progress_m, 0u, 0xffu);
        dst_p[4] |= pack_left_shift_u16(src_p->reply_spl_set_last_m, 0u, 0xffu);
        dst_p[5] |= pack_right_shift_u16(src_p->reply_spl_set_last_m, 8u, 0xffu);
        dst_p[6] |= pack_left_shift_u16(src_p->reply_t_last_move_m, 0u, 0xffu);
        dst_p[7] |= pack_right_shift_u16(src_p->reply_t_last_move_m, 8u, 0xffu);
        break;

    case 151:
        break;

    default:
        break;
    }

    return (8);
}

int pved_cls_ser_tool_reply_m_unpack(
    struct pved_cls_ser_tool_reply_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    uint16_t p3091_m;
    uint16_t p3093_m;
    uint16_t p3095_m;
    uint16_t p3128_m;
    uint16_t p3130_m;
    uint16_t p3162_m;
    uint16_t p3164_m;
    uint16_t p3166_m;
    uint16_t p3168_m;
    uint16_t p3170_m;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->ser_tool_reply_xid_m |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);

    switch (dst_p->ser_tool_reply_xid_m) {

    case 131:
        dst_p->reply_sensor5_v_state_m |= unpack_right_shift_u8(src_p[1], 4u, 0x30u);
        dst_p->reply_css_state_m |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
        dst_p->reply_req_spool_pos_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->reply_req_spool_pos_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        dst_p->reply_req_cov_pwm_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
        break;

    case 135:
        dst_p->reply_param_data_length_m |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->reply_param_address_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->reply_param_address_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);

        switch (dst_p->reply_param_address_m) {

        case 3072:
            dst_p->p3072_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3073:
            dst_p->p3073_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3074:
            dst_p->p3074_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3074_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3076:
            dst_p->p3076_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3076_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3078:
            dst_p->p3078_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3078_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3080:
            dst_p->p3080_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3081:
            dst_p->p3081_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3082:
            dst_p->p3082_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3082_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3084:
            dst_p->p3084_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3084_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3086:
            dst_p->p3086_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3086_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3088:
            dst_p->p3088_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3089:
            dst_p->p3089_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3090:
            dst_p->p3090_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3091:
            p3091_m = 0u;
            p3091_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3091_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3091_m = (int16_t)p3091_m;
            break;

        case 3093:
            p3093_m = 0u;
            p3093_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3093_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3093_m = (int16_t)p3093_m;
            break;

        case 3095:
            p3095_m = 0u;
            p3095_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3095_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3095_m = (int16_t)p3095_m;
            break;

        case 3097:
            dst_p->p3097_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3120:
            dst_p->p3120_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3120_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3122:
            dst_p->p3122_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3123:
            dst_p->p3123_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3124:
            dst_p->p3124_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3125:
            dst_p->p3125_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3126:
            dst_p->p3126_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3126_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3128:
            p3128_m = 0u;
            p3128_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3128_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3128_m = (int16_t)p3128_m;
            break;

        case 3130:
            p3130_m = 0u;
            p3130_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3130_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3130_m = (int16_t)p3130_m;
            break;

        case 3132:
            dst_p->p3132_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3133:
            dst_p->p3133_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3134:
            dst_p->p3134_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3160:
            dst_p->p3160_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3160_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3162:
            p3162_m = 0u;
            p3162_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3162_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3162_m = (int16_t)p3162_m;
            break;

        case 3164:
            p3164_m = 0u;
            p3164_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3164_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3164_m = (int16_t)p3164_m;
            break;

        case 3166:
            p3166_m = 0u;
            p3166_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3166_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3166_m = (int16_t)p3166_m;
            break;

        case 3168:
            p3168_m = 0u;
            p3168_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3168_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3168_m = (int16_t)p3168_m;
            break;

        case 3170:
            p3170_m = 0u;
            p3170_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            p3170_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            dst_p->p3170_m = (int16_t)p3170_m;
            break;

        case 3183:
            dst_p->p3183_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3183_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3185:
            dst_p->p3185_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3185_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3187:
            dst_p->p3187_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3187_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3189:
            dst_p->p3189_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3189_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3203:
            dst_p->p3203_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3203_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3205:
            dst_p->p3205_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3205_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3207:
            dst_p->p3207_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3207_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3209:
            dst_p->p3209_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3209_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3211:
            dst_p->p3211_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3211_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3213:
            dst_p->p3213_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3213_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3215:
            dst_p->p3215_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3215_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3217:
            dst_p->p3217_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3217_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3219:
            dst_p->p3219_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3219_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3235:
            dst_p->p3235_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3235_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3237:
            dst_p->p3237_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3238:
            dst_p->p3238_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3239:
            dst_p->p3239_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3240:
            dst_p->p3240_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3241:
            dst_p->p3241_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3242:
            dst_p->p3242_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3243:
            dst_p->p3243_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3244:
            dst_p->p3244_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3245:
            dst_p->p3245_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3246:
            dst_p->p3246_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3247:
            dst_p->p3247_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3248:
            dst_p->p3248_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3249:
            dst_p->p3249_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3250:
            dst_p->p3250_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3251:
            dst_p->p3251_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3252:
            dst_p->p3252_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3253:
            dst_p->p3253_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3285:
            dst_p->p3285_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3285_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3287:
            dst_p->p3287_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3288:
            dst_p->p3288_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3289:
            dst_p->p3289_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3290:
            dst_p->p3290_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3291:
            dst_p->p3291_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3292:
            dst_p->p3292_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3293:
            dst_p->p3293_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3294:
            dst_p->p3294_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3295:
            dst_p->p3295_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3296:
            dst_p->p3296_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3297:
            dst_p->p3297_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3298:
            dst_p->p3298_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3299:
            dst_p->p3299_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3300:
            dst_p->p3300_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3301:
            dst_p->p3301_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3302:
            dst_p->p3302_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3303:
            dst_p->p3303_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3304:
            dst_p->p3304_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3305:
            dst_p->p3305_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3306:
            dst_p->p3306_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3307:
            dst_p->p3307_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3308:
            dst_p->p3308_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3309:
            dst_p->p3309_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3310:
            dst_p->p3310_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3311:
            dst_p->p3311_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3312:
            dst_p->p3312_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3313:
            dst_p->p3313_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3314:
            dst_p->p3314_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3315:
            dst_p->p3315_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3316:
            dst_p->p3316_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3317:
            dst_p->p3317_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3318:
            dst_p->p3318_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3319:
            dst_p->p3319_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3320:
            dst_p->p3320_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3321:
            dst_p->p3321_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3322:
            dst_p->p3322_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3323:
            dst_p->p3323_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3349:
            dst_p->p3349_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3349_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3351:
            dst_p->p3351_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3352:
            dst_p->p3352_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3352_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3354:
            dst_p->p3354_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3355:
            dst_p->p3355_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3355_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3357:
            dst_p->p3357_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3358:
            dst_p->p3358_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3358_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3360:
            dst_p->p3360_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3361:
            dst_p->p3361_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3361_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3363:
            dst_p->p3363_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3364:
            dst_p->p3364_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3365:
            dst_p->p3365_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3366:
            dst_p->p3366_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3366_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3368:
            dst_p->p3368_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3369:
            dst_p->p3369_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3369_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3371:
            dst_p->p3371_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3372:
            dst_p->p3372_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3372_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3374:
            dst_p->p3374_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3375:
            dst_p->p3375_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3375_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3377:
            dst_p->p3377_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3378:
            dst_p->p3378_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3379:
            dst_p->p3379_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3379_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3381:
            dst_p->p3381_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3381_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3383:
            dst_p->p3383_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3419:
            dst_p->p3419_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3419_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3421:
            dst_p->p3421_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3422:
            dst_p->p3422_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3422_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3424:
            dst_p->p3424_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3424_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3426:
            dst_p->p3426_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3426_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3428:
            dst_p->p3428_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3428_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3449:
            dst_p->p3449_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3449_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3451:
            dst_p->p3451_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3451_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3453:
            dst_p->p3453_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3453_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3455:
            dst_p->p3455_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3455_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3457:
            dst_p->p3457_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3457_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3459:
            dst_p->p3459_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3459_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3461:
            dst_p->p3461_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3461_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3463:
            dst_p->p3463_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3463_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3465:
            dst_p->p3465_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3465_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3467:
            dst_p->p3467_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3467_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3469:
            dst_p->p3469_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3469_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3473:
            dst_p->p3473_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3474:
            dst_p->p3474_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3475:
            dst_p->p3475_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3476:
            dst_p->p3476_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3477:
            dst_p->p3477_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3478:
            dst_p->p3478_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3479:
            dst_p->p3479_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3480:
            dst_p->p3480_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3481:
            dst_p->p3481_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3482:
            dst_p->p3482_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3483:
            dst_p->p3483_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3484:
            dst_p->p3484_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3519:
            dst_p->p3519_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3519_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3521:
            dst_p->p3521_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3522:
            dst_p->p3522_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3522_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3524:
            dst_p->p3524_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3524_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3526:
            dst_p->p3526_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3526_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3528:
            dst_p->p3528_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3529:
            dst_p->p3529_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3530:
            dst_p->p3530_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3530_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3532:
            dst_p->p3532_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3532_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3534:
            dst_p->p3534_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3534_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3536:
            dst_p->p3536_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3537:
            dst_p->p3537_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3538:
            dst_p->p3538_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3538_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3540:
            dst_p->p3540_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3540_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3542:
            dst_p->p3542_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3542_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3544:
            dst_p->p3544_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3545:
            dst_p->p3545_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3546:
            dst_p->p3546_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3546_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3548:
            dst_p->p3548_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3548_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3550:
            dst_p->p3550_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3550_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3552:
            dst_p->p3552_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3553:
            dst_p->p3553_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3554:
            dst_p->p3554_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3554_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3556:
            dst_p->p3556_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3556_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3558:
            dst_p->p3558_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3558_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3560:
            dst_p->p3560_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3561:
            dst_p->p3561_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3562:
            dst_p->p3562_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3562_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3564:
            dst_p->p3564_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3564_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3566:
            dst_p->p3566_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3566_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3568:
            dst_p->p3568_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3569:
            dst_p->p3569_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3570:
            dst_p->p3570_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3571:
            dst_p->p3571_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3572:
            dst_p->p3572_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3573:
            dst_p->p3573_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3574:
            dst_p->p3574_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3574_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3576:
            dst_p->p3576_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3576_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3578:
            dst_p->p3578_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3578_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3580:
            dst_p->p3580_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3580_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3582:
            dst_p->p3582_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3583:
            dst_p->p3583_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3584:
            dst_p->p3584_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3644:
            dst_p->p3644_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3644_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3646:
            dst_p->p3646_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3647:
            dst_p->p3647_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3648:
            dst_p->p3648_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3649:
            dst_p->p3649_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3650:
            dst_p->p3650_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3650_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3652:
            dst_p->p3652_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3652_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3654:
            dst_p->p3654_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3654_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3656:
            dst_p->p3656_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3657:
            dst_p->p3657_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3658:
            dst_p->p3658_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3658_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3660:
            dst_p->p3660_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3660_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3662:
            dst_p->p3662_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3662_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3664:
            dst_p->p3664_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3665:
            dst_p->p3665_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3666:
            dst_p->p3666_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3666_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3668:
            dst_p->p3668_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3668_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3670:
            dst_p->p3670_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3670_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3672:
            dst_p->p3672_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3673:
            dst_p->p3673_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3674:
            dst_p->p3674_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3674_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3676:
            dst_p->p3676_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3676_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3678:
            dst_p->p3678_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3678_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3680:
            dst_p->p3680_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3681:
            dst_p->p3681_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3682:
            dst_p->p3682_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3682_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3684:
            dst_p->p3684_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3684_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3686:
            dst_p->p3686_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3686_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3688:
            dst_p->p3688_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3689:
            dst_p->p3689_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3690:
            dst_p->p3690_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3690_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3692:
            dst_p->p3692_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3692_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3694:
            dst_p->p3694_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3694_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3696:
            dst_p->p3696_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3697:
            dst_p->p3697_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3698:
            dst_p->p3698_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3699:
            dst_p->p3699_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3700:
            dst_p->p3700_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3701:
            dst_p->p3701_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3701_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3703:
            dst_p->p3703_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3703_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3705:
            dst_p->p3705_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3706:
            dst_p->p3706_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3706_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3708:
            dst_p->p3708_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3708_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3710:
            dst_p->p3710_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3710_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3712:
            dst_p->p3712_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3712_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3714:
            dst_p->p3714_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3714_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3716:
            dst_p->p3716_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3716_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3718:
            dst_p->p3718_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3719:
            dst_p->p3719_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3769:
            dst_p->p3769_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3769_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3771:
            dst_p->p3771_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3772:
            dst_p->p3772_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3773:
            dst_p->p3773_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3774:
            dst_p->p3774_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3775:
            dst_p->p3775_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3776:
            dst_p->p3776_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3789:
            dst_p->p3789_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3789_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3791:
            dst_p->p3791_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3791_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3793:
            dst_p->p3793_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3793_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3795:
            dst_p->p3795_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3795_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3797:
            dst_p->p3797_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3797_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3799:
            dst_p->p3799_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3799_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3801:
            dst_p->p3801_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3802:
            dst_p->p3802_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3802_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3804:
            dst_p->p3804_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3804_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3806:
            dst_p->p3806_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3806_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3808:
            dst_p->p3808_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3808_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3810:
            dst_p->p3810_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3811:
            dst_p->p3811_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3812:
            dst_p->p3812_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3812_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        case 3814:
            dst_p->p3814_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
            break;

        case 3822:
            dst_p->p3822_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
            dst_p->p3822_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
            break;

        default:
            break;
        }
        break;

    case 143:
        dst_p->reply_consistency_chk_m |= unpack_right_shift_u8(src_p[1], 0u, 0x03u);
        dst_p->reply_input_status_m |= unpack_right_shift_u8(src_p[1], 2u, 0x0cu);
        dst_p->reply_result_from_ecu_m |= unpack_right_shift_u8(src_p[1], 4u, 0x10u);
        dst_p->reply_pos_captured_m |= unpack_right_shift_u8(src_p[1], 5u, 0x20u);
        dst_p->reply_was_captured_m |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
        dst_p->reply_ad1_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->reply_ad1_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        dst_p->reply_ad2_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
        dst_p->reply_ad2_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
        dst_p->reply_sensor_voltage_m |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
        dst_p->reply_sensor_voltage_m |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);
        break;

    case 145:
        dst_p->reply_calib_err_code_m |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->reply_wa_mov_status_r_m |= unpack_right_shift_u8(src_p[2], 4u, 0x30u);
        dst_p->reply_wa_mov_status_l_m |= unpack_right_shift_u8(src_p[2], 6u, 0xc0u);
        dst_p->reply_calibration_progress_m |= unpack_right_shift_u8(src_p[3], 0u, 0xffu);
        dst_p->reply_spl_set_last_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
        dst_p->reply_spl_set_last_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
        dst_p->reply_t_last_move_m |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
        dst_p->reply_t_last_move_m |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);
        break;

    case 151:
        break;

    default:
        break;
    }

    return (0);
}

uint8_t pved_cls_ser_tool_reply_m_ser_tool_reply_xid_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_ser_tool_reply_xid_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_ser_tool_reply_xid_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_reply_param_data_length_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_param_data_length_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_param_data_length_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_reply_calib_err_code_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_calib_err_code_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_calib_err_code_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_reply_consistency_chk_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_consistency_chk_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_consistency_chk_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_m_reply_input_status_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_input_status_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_input_status_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_m_reply_result_from_ecu_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_result_from_ecu_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_result_from_ecu_m_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_m_reply_sensor5_v_state_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_sensor5_v_state_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_sensor5_v_state_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_m_reply_pos_captured_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_pos_captured_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_pos_captured_m_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_m_reply_was_captured_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_was_captured_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_was_captured_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_m_reply_css_state_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_css_state_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_css_state_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_ser_tool_reply_m_reply_param_address_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_param_address_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_param_address_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_reply_ad1_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_ad1_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_ad1_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_reply_req_spool_pos_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_ser_tool_reply_m_reply_req_spool_pos_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_ser_tool_reply_m_reply_req_spool_pos_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_m_reply_wa_mov_status_r_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_wa_mov_status_r_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_wa_mov_status_r_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_m_reply_wa_mov_status_l_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_wa_mov_status_l_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_wa_mov_status_l_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_reply_m_reply_calibration_progress_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_calibration_progress_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_calibration_progress_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3822_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3822_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3822_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3814_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3814_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3814_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 25u));
}

uint16_t pved_cls_ser_tool_reply_m_p3812_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3812_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3812_m_is_in_range(uint16_t value)
{
    return ((value >= 5u) && (value <= 400u));
}

uint8_t pved_cls_ser_tool_reply_m_p3811_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3811_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3811_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 10u));
}

uint8_t pved_cls_ser_tool_reply_m_p3810_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3810_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3810_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 10u));
}

uint16_t pved_cls_ser_tool_reply_m_p3808_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3808_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3808_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 600u));
}

uint16_t pved_cls_ser_tool_reply_m_p3806_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3806_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3806_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 600u));
}

uint16_t pved_cls_ser_tool_reply_m_p3804_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3804_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3804_m_is_in_range(uint16_t value)
{
    return ((value >= 5u) && (value <= 400u));
}

uint16_t pved_cls_ser_tool_reply_m_p3802_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3802_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3802_m_is_in_range(uint16_t value)
{
    return ((value >= 50u) && (value <= 300u));
}

uint8_t pved_cls_ser_tool_reply_m_p3801_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3801_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3801_m_is_in_range(uint8_t value)
{
    return (value <= 60u);
}

uint16_t pved_cls_ser_tool_reply_m_p3799_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3799_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3799_m_is_in_range(uint16_t value)
{
    return (value <= 300u);
}

uint16_t pved_cls_ser_tool_reply_m_p3797_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3797_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3797_m_is_in_range(uint16_t value)
{
    return (value <= 300u);
}

uint16_t pved_cls_ser_tool_reply_m_p3795_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3795_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3795_m_is_in_range(uint16_t value)
{
    return (value <= 5000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3793_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3793_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3793_m_is_in_range(uint16_t value)
{
    return (value <= 2500u);
}

uint16_t pved_cls_ser_tool_reply_m_p3791_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3791_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3791_m_is_in_range(uint16_t value)
{
    return (value <= 5000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3789_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3789_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3789_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3776_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3776_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3776_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3775_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3775_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3775_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3774_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3774_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3774_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3773_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3773_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3773_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3772_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3772_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3772_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3771_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3771_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3771_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3769_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3769_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3769_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3719_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3719_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3719_m_is_in_range(uint8_t value)
{
    return (value <= 45u);
}

uint8_t pved_cls_ser_tool_reply_m_p3718_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3718_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3718_m_is_in_range(uint8_t value)
{
    return ((value >= 5u) && (value <= 200u));
}

uint16_t pved_cls_ser_tool_reply_m_p3716_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3716_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3716_m_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_m_p3714_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3714_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3714_m_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_m_p3712_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3712_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3712_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3710_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3710_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3710_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3708_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3708_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3708_m_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_m_p3706_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3706_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3706_m_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 180u));
}

uint8_t pved_cls_ser_tool_reply_m_p3705_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3705_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3705_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_m_p3703_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3703_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3703_m_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_m_p3701_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3701_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3701_m_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint8_t pved_cls_ser_tool_reply_m_p3700_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3700_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3700_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3699_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3699_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3699_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3698_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3698_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3698_m_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_m_p3697_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3697_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3697_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3696_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3696_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3696_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_m_p3694_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3694_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3694_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3692_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3692_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3692_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3690_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3690_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3690_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint8_t pved_cls_ser_tool_reply_m_p3689_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3689_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3689_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3688_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3688_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3688_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_m_p3686_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3686_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3686_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3684_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3684_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3684_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3682_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3682_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3682_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_m_p3681_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3681_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3681_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3680_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3680_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3680_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_m_p3678_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3678_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3678_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3676_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3676_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3676_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3674_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3674_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3674_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_m_p3673_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3673_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3673_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3672_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3672_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3672_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_m_p3670_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3670_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3670_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3668_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3668_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3668_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3666_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3666_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3666_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_m_p3665_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3665_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3665_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3664_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3664_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3664_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_m_p3662_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3662_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3662_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3660_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3660_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3660_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3658_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3658_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3658_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_m_p3657_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3657_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3657_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3656_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3656_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3656_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_m_p3654_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3654_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3654_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3652_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3652_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3652_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3650_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3650_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3650_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_m_p3649_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3649_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3649_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3648_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3648_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3648_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3647_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3647_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3647_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3646_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3646_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3646_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_m_p3644_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3644_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3644_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3584_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3584_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3584_m_is_in_range(uint8_t value)
{
    return (value <= 45u);
}

uint8_t pved_cls_ser_tool_reply_m_p3583_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3583_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3583_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3582_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3582_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3582_m_is_in_range(uint8_t value)
{
    return ((value >= 5u) && (value <= 200u));
}

uint16_t pved_cls_ser_tool_reply_m_p3580_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3580_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3580_m_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_m_p3578_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3578_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3578_m_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_m_p3576_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3576_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3576_m_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint16_t pved_cls_ser_tool_reply_m_p3574_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3574_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3574_m_is_in_range(uint16_t value)
{
    return ((value >= 1u) && (value <= 1000u));
}

uint8_t pved_cls_ser_tool_reply_m_p3573_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3573_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3573_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3572_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3572_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3572_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3571_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3571_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3571_m_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_m_p3570_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3570_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3570_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3569_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3569_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3569_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3568_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3568_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3568_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 180u));
}

uint16_t pved_cls_ser_tool_reply_m_p3566_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3566_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3566_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3564_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3564_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3564_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3562_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3562_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3562_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint8_t pved_cls_ser_tool_reply_m_p3561_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3561_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3561_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3560_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3560_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3560_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_m_p3558_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3558_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3558_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3556_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3556_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3556_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3554_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3554_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3554_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_m_p3553_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3553_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3553_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3552_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3552_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3552_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_m_p3550_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3550_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3550_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3548_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3548_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3548_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3546_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3546_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3546_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_m_p3545_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3545_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3545_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3544_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3544_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3544_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_m_p3542_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3542_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3542_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3540_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3540_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3540_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3538_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3538_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3538_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_m_p3537_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3537_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3537_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3536_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3536_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3536_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_m_p3534_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3534_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3534_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3532_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3532_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3532_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3530_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3530_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3530_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_m_p3529_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3529_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3529_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3528_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3528_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3528_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 100u));
}

uint16_t pved_cls_ser_tool_reply_m_p3526_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3526_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3526_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3524_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3524_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3524_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint16_t pved_cls_ser_tool_reply_m_p3522_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3522_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3522_m_is_in_range(uint16_t value)
{
    return ((value >= 10u) && (value <= 800u));
}

uint8_t pved_cls_ser_tool_reply_m_p3521_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3521_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3521_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_m_p3519_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3519_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3519_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3484_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3484_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3484_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3483_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3483_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3483_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3482_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3482_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3482_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3481_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3481_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3481_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3480_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3480_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3480_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3479_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3479_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3479_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3478_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3478_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3478_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3477_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3477_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3477_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3476_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3476_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3476_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3475_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3475_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3475_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3474_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3474_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3474_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3473_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3473_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3473_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint16_t pved_cls_ser_tool_reply_m_p3469_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3469_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3469_m_is_in_range(uint16_t value)
{
    return (value <= 89u);
}

uint16_t pved_cls_ser_tool_reply_m_p3467_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3467_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3467_m_is_in_range(uint16_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_m_p3465_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3465_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3465_m_is_in_range(uint16_t value)
{
    return (value <= 89u);
}

uint16_t pved_cls_ser_tool_reply_m_p3463_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3463_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3463_m_is_in_range(uint16_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_m_p3461_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3461_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3461_m_is_in_range(uint16_t value)
{
    return (value <= 89u);
}

uint16_t pved_cls_ser_tool_reply_m_p3459_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3459_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3459_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3457_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3457_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3457_m_is_in_range(uint16_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_m_p3455_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3455_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3455_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3453_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3453_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3453_m_is_in_range(uint16_t value)
{
    return (value <= 100u);
}

uint16_t pved_cls_ser_tool_reply_m_p3451_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3451_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3451_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3449_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3449_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3449_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3428_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3428_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3428_m_is_in_range(uint16_t value)
{
    return (value <= 89u);
}

uint16_t pved_cls_ser_tool_reply_m_p3426_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3426_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3426_m_is_in_range(uint16_t value)
{
    return (value <= 89u);
}

uint16_t pved_cls_ser_tool_reply_m_p3424_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3424_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3424_m_is_in_range(uint16_t value)
{
    return ((value >= 1000u) && (value <= 10000u));
}

uint16_t pved_cls_ser_tool_reply_m_p3422_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3422_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3422_m_is_in_range(uint16_t value)
{
    return ((value >= 1000u) && (value <= 10000u));
}

uint8_t pved_cls_ser_tool_reply_m_p3421_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3421_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3421_m_is_in_range(uint8_t value)
{
    return (value <= 10u);
}

uint16_t pved_cls_ser_tool_reply_m_p3419_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3419_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3419_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3383_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3383_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3383_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3381_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3381_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3381_m_is_in_range(uint16_t value)
{
    return (value <= 60000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3379_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3379_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3379_m_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 400u));
}

uint8_t pved_cls_ser_tool_reply_m_p3378_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3378_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3378_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 75u));
}

uint8_t pved_cls_ser_tool_reply_m_p3377_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3377_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3377_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint16_t pved_cls_ser_tool_reply_m_p3375_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3375_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3375_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_m_p3374_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3374_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3374_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3372_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3372_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3372_m_is_in_range(uint16_t value)
{
    return (value <= 360u);
}

uint8_t pved_cls_ser_tool_reply_m_p3371_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3371_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3371_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3369_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3369_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3369_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_m_p3368_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3368_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3368_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3366_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3366_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3366_m_is_in_range(uint16_t value)
{
    return (value <= 4800u);
}

uint8_t pved_cls_ser_tool_reply_m_p3365_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3365_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3365_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3364_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3364_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3364_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3363_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3363_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3363_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3361_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3361_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3361_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_m_p3360_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3360_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3360_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3358_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3358_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3358_m_is_in_range(uint16_t value)
{
    return (value <= 4800u);
}

uint8_t pved_cls_ser_tool_reply_m_p3357_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3357_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3357_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3355_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3355_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3355_m_is_in_range(uint16_t value)
{
    return (value <= 360u);
}

uint8_t pved_cls_ser_tool_reply_m_p3354_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3354_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3354_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3352_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3352_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3352_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_m_p3351_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3351_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3351_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3349_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3349_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3349_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3323_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3323_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3323_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3322_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3322_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3322_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3321_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3321_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3321_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3320_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3320_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3320_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3319_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3319_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3319_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3318_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3318_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3318_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3317_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3317_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3317_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3316_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3316_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3316_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3315_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3315_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3315_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3314_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3314_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3314_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3313_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3313_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3313_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3312_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3312_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3312_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3311_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3311_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3311_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3310_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3310_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3310_m_is_in_range(uint8_t value)
{
    return (value <= 32u);
}

uint8_t pved_cls_ser_tool_reply_m_p3309_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3309_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3309_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 10u));
}

uint8_t pved_cls_ser_tool_reply_m_p3308_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3308_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3308_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3307_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3307_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3307_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3306_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3306_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3306_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3305_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3305_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3305_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3304_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3304_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3304_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3303_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3303_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3303_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3302_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3302_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3302_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3301_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3301_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3301_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 254u));
}

uint8_t pved_cls_ser_tool_reply_m_p3300_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3300_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3300_m_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_m_p3299_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3299_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3299_m_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_m_p3298_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3298_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3298_m_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_m_p3297_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3297_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3297_m_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_m_p3296_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3296_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3296_m_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_m_p3295_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3295_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3295_m_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_m_p3294_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3294_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3294_m_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_m_p3293_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3293_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3293_m_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_m_p3292_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3292_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3292_m_is_in_range(uint8_t value)
{
    return (value <= 253u);
}

uint8_t pved_cls_ser_tool_reply_m_p3291_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3291_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3291_m_is_in_range(uint8_t value)
{
    return (value >= 5u);
}

uint8_t pved_cls_ser_tool_reply_m_p3290_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3290_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3290_m_is_in_range(uint8_t value)
{
    return (value >= 2u);
}

uint8_t pved_cls_ser_tool_reply_m_p3289_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3289_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3289_m_is_in_range(uint8_t value)
{
    return (value >= 10u);
}

uint8_t pved_cls_ser_tool_reply_m_p3288_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3288_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3288_m_is_in_range(uint8_t value)
{
    return (value >= 10u);
}

uint8_t pved_cls_ser_tool_reply_m_p3287_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3287_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3287_m_is_in_range(uint8_t value)
{
    return (value >= 5u);
}

uint16_t pved_cls_ser_tool_reply_m_p3285_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3285_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3285_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3253_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3253_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3253_m_is_in_range(uint8_t value)
{
    return ((value >= 5u) && (value <= 100u));
}

uint8_t pved_cls_ser_tool_reply_m_p3252_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3252_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3252_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3251_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3251_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3251_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3250_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3250_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3250_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

uint8_t pved_cls_ser_tool_reply_m_p3249_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3249_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3249_m_is_in_range(uint8_t value)
{
    return ((value >= 5u) && (value <= 200u));
}

uint8_t pved_cls_ser_tool_reply_m_p3248_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3248_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3248_m_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_m_p3247_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3247_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3247_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3246_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3246_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3246_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3245_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3245_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3245_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3244_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3244_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3244_m_is_in_range(uint8_t value)
{
    return (value <= 1u);
}

uint8_t pved_cls_ser_tool_reply_m_p3243_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3243_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3243_m_is_in_range(uint8_t value)
{
    return (value >= 10u);
}

uint8_t pved_cls_ser_tool_reply_m_p3242_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3242_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3242_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3241_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3241_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3241_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3240_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3240_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3240_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3239_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3239_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3239_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3238_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3238_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3238_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3237_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3237_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3237_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3235_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3235_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3235_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3219_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3219_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3219_m_is_in_range(uint16_t value)
{
    return ((value >= 4650u) && (value <= 5350u));
}

uint16_t pved_cls_ser_tool_reply_m_p3217_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3217_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3217_m_is_in_range(uint16_t value)
{
    return ((value >= 4650u) && (value <= 5350u));
}

uint16_t pved_cls_ser_tool_reply_m_p3215_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3215_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3215_m_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3213_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3213_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3213_m_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3211_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3211_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3211_m_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3209_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3209_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3209_m_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3207_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3207_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3207_m_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3205_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3205_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3205_m_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3203_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3203_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3203_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3189_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3189_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3189_m_is_in_range(uint16_t value)
{
    return (value <= 5000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3187_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3187_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3187_m_is_in_range(uint16_t value)
{
    return (value <= 5000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3185_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3185_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3185_m_is_in_range(uint16_t value)
{
    return (value <= 5000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3183_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3183_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3183_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int16_t pved_cls_ser_tool_reply_m_p3170_m_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3170_m_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3170_m_is_in_range(int16_t value)
{
    return ((value >= 0) && (value <= 150));
}

int16_t pved_cls_ser_tool_reply_m_p3168_m_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3168_m_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3168_m_is_in_range(int16_t value)
{
    return ((value >= 0) && (value <= 300));
}

int16_t pved_cls_ser_tool_reply_m_p3166_m_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3166_m_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3166_m_is_in_range(int16_t value)
{
    return ((value >= -300) && (value <= 0));
}

int16_t pved_cls_ser_tool_reply_m_p3164_m_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3164_m_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3164_m_is_in_range(int16_t value)
{
    return ((value >= 300) && (value <= 1000));
}

int16_t pved_cls_ser_tool_reply_m_p3162_m_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3162_m_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3162_m_is_in_range(int16_t value)
{
    return ((value >= -1000) && (value <= 1000));
}

uint16_t pved_cls_ser_tool_reply_m_p3160_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3160_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3160_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3134_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3134_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3134_m_is_in_range(uint8_t value)
{
    return (value <= 10u);
}

uint8_t pved_cls_ser_tool_reply_m_p3133_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3133_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3133_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3132_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3132_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3132_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

int16_t pved_cls_ser_tool_reply_m_p3130_m_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3130_m_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3130_m_is_in_range(int16_t value)
{
    return ((value >= -200) && (value <= 200));
}

int16_t pved_cls_ser_tool_reply_m_p3128_m_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3128_m_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3128_m_is_in_range(int16_t value)
{
    return ((value >= -200) && (value <= 200));
}

uint16_t pved_cls_ser_tool_reply_m_p3126_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3126_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3126_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_ser_tool_reply_m_p3125_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3125_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3125_m_is_in_range(uint8_t value)
{
    return (value <= 10u);
}

uint8_t pved_cls_ser_tool_reply_m_p3124_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3124_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3124_m_is_in_range(uint8_t value)
{
    return ((value >= 1u) && (value <= 20u));
}

uint8_t pved_cls_ser_tool_reply_m_p3123_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3123_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3123_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3122_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3122_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3122_m_is_in_range(uint8_t value)
{
    return (value <= 150u);
}

uint16_t pved_cls_ser_tool_reply_m_p3120_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3120_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3120_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3097_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3097_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3097_m_is_in_range(uint8_t value)
{
    return (value <= 100u);
}

int16_t pved_cls_ser_tool_reply_m_p3095_m_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3095_m_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3095_m_is_in_range(int16_t value)
{
    return ((value >= 0) && (value <= 150));
}

int16_t pved_cls_ser_tool_reply_m_p3093_m_encode(double value)
{
    return (int16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3093_m_decode(int16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3093_m_is_in_range(int16_t value)
{
    return ((value >= 0) && (value <= 1000));
}

int16_t pved_cls_ser_tool_reply_m_p3091_m_encode(double value)
{
    return (int16_t)(value - 1000.0);
}

double pved_cls_ser_tool_reply_m_p3091_m_decode(int16_t value)
{
    return ((double)value + 1000.0);
}

bool pved_cls_ser_tool_reply_m_p3091_m_is_in_range(int16_t value)
{
    return ((value >= -1000) && (value <= 0));
}

uint8_t pved_cls_ser_tool_reply_m_p3090_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3090_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3090_m_is_in_range(uint8_t value)
{
    return (value <= 200u);
}

uint8_t pved_cls_ser_tool_reply_m_p3089_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3089_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3089_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3088_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3088_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3088_m_is_in_range(uint8_t value)
{
    return ((value >= 5u) && (value <= 120u));
}

uint16_t pved_cls_ser_tool_reply_m_p3086_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3086_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3086_m_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 10000u));
}

uint16_t pved_cls_ser_tool_reply_m_p3084_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3084_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3084_m_is_in_range(uint16_t value)
{
    return (value <= 1200u);
}

uint16_t pved_cls_ser_tool_reply_m_p3082_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3082_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3082_m_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 1000u));
}

uint8_t pved_cls_ser_tool_reply_m_p3081_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3081_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3081_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3080_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3080_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3080_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_p3078_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3078_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3078_m_is_in_range(uint16_t value)
{
    return (value <= 1000u);
}

uint16_t pved_cls_ser_tool_reply_m_p3076_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3076_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3076_m_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 2000u));
}

uint16_t pved_cls_ser_tool_reply_m_p3074_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_p3074_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3074_m_is_in_range(uint16_t value)
{
    return ((value >= 100u) && (value <= 2000u));
}

uint8_t pved_cls_ser_tool_reply_m_p3073_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3073_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3073_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_p3072_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_p3072_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_p3072_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_reply_spl_set_last_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_ser_tool_reply_m_reply_spl_set_last_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_ser_tool_reply_m_reply_spl_set_last_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_ser_tool_reply_m_reply_ad2_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_ad2_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_ad2_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_reply_m_reply_req_cov_pwm_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_req_cov_pwm_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_req_cov_pwm_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_reply_sensor_voltage_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_reply_m_reply_sensor_voltage_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_reply_m_reply_sensor_voltage_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_reply_m_reply_t_last_move_m_encode(double value)
{
    return (uint16_t)(value - -20.0);
}

double pved_cls_ser_tool_reply_m_reply_t_last_move_m_decode(uint16_t value)
{
    return ((double)value + -20.0);
}

bool pved_cls_ser_tool_reply_m_reply_t_last_move_m_is_in_range(uint16_t value)
{
    return ((value >= 20u) && (value <= 65534u));
}

int pved_cls_ser_tool_req_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_ser_tool_req_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->ser_tool_req_xid_s, 0u, 0xffu);

    switch (src_p->ser_tool_req_xid_s) {

    case 128:
        dst_p[1] |= pack_left_shift_u8(src_p->req_service_mode_s, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u16(src_p->req_service_mode_chk_s, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->req_service_mode_chk_s, 8u, 0xffu);
        break;

    case 130:
        dst_p[1] |= pack_left_shift_u8(src_p->req_sensor5_v_s, 4u, 0x30u);
        dst_p[1] |= pack_left_shift_u8(src_p->req_css_s, 6u, 0xc0u);
        dst_p[2] |= pack_left_shift_u16(src_p->req_spool_pos_s, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->req_spool_pos_s, 8u, 0xffu);
        dst_p[4] |= pack_left_shift_u8(src_p->req_cov_pwm_s, 0u, 0xffu);
        break;

    case 132:
        dst_p[1] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_op_s, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_1_s, 0u, 0xffu);
        dst_p[3] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_2_s, 0u, 0xffu);
        dst_p[4] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_3_s, 0u, 0xffu);
        dst_p[5] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_4_s, 0u, 0xffu);
        dst_p[6] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_5_s, 0u, 0xffu);
        dst_p[7] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_6_s, 0u, 0xffu);
        break;

    case 134:
        dst_p[1] |= pack_left_shift_u8(src_p->req_param_data_length_s, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u16(src_p->req_param_address_s, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->req_param_address_s, 8u, 0xffu);
        break;

    case 136:
        dst_p[1] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_7_s, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_8_s, 0u, 0xffu);
        break;

    case 140:
        dst_p[1] |= pack_left_shift_u8(src_p->req_wa_sweep_angle_s, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u16(src_p->req_spl_init_sp_s, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->req_spl_init_sp_s, 8u, 0xffu);
        dst_p[4] |= pack_left_shift_u8(src_p->req_spl_calib_tmin_s, 0u, 0xffu);
        dst_p[5] |= pack_left_shift_u8(src_p->req_spl_calib_tmax_s, 0u, 0xffu);
        break;

    case 142:
        dst_p[1] |= pack_left_shift_u8(src_p->req_ans_capture_s, 6u, 0xc0u);
        break;

    case 144:
        break;

    case 146:
        break;

    case 150:
        break;

    default:
        break;
    }

    return (8);
}

int pved_cls_ser_tool_req_s_unpack(
    struct pved_cls_ser_tool_req_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->ser_tool_req_xid_s |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);

    switch (dst_p->ser_tool_req_xid_s) {

    case 128:
        dst_p->req_service_mode_s |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->req_service_mode_chk_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->req_service_mode_chk_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        break;

    case 130:
        dst_p->req_sensor5_v_s |= unpack_right_shift_u8(src_p[1], 4u, 0x30u);
        dst_p->req_css_s |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
        dst_p->req_spool_pos_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->req_spool_pos_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        dst_p->req_cov_pwm_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
        break;

    case 132:
        dst_p->tx_rate_stat_msg_op_s |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_1_s |= unpack_right_shift_u8(src_p[2], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_2_s |= unpack_right_shift_u8(src_p[3], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_3_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_4_s |= unpack_right_shift_u8(src_p[5], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_5_s |= unpack_right_shift_u8(src_p[6], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_6_s |= unpack_right_shift_u8(src_p[7], 0u, 0xffu);
        break;

    case 134:
        dst_p->req_param_data_length_s |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->req_param_address_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->req_param_address_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        break;

    case 136:
        dst_p->tx_rate_stat_msg_7_s |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_8_s |= unpack_right_shift_u8(src_p[2], 0u, 0xffu);
        break;

    case 140:
        dst_p->req_wa_sweep_angle_s |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->req_spl_init_sp_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->req_spl_init_sp_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        dst_p->req_spl_calib_tmin_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
        dst_p->req_spl_calib_tmax_s |= unpack_right_shift_u8(src_p[5], 0u, 0xffu);
        break;

    case 142:
        dst_p->req_ans_capture_s |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
        break;

    case 144:
        break;

    case 146:
        break;

    case 150:
        break;

    default:
        break;
    }

    return (0);
}

uint8_t pved_cls_ser_tool_req_s_ser_tool_req_xid_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_s_ser_tool_req_xid_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_ser_tool_req_xid_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_tx_rate_stat_msg_7_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_s_tx_rate_stat_msg_7_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_s_tx_rate_stat_msg_7_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_req_wa_sweep_angle_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_s_req_wa_sweep_angle_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_wa_sweep_angle_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_req_param_data_length_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_s_req_param_data_length_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_param_data_length_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_tx_rate_stat_msg_op_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_s_tx_rate_stat_msg_op_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_s_tx_rate_stat_msg_op_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_req_service_mode_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_s_req_service_mode_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_service_mode_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_req_sensor5_v_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_s_req_sensor5_v_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_sensor5_v_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_req_s_req_ans_capture_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_s_req_ans_capture_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_ans_capture_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_req_s_req_css_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_s_req_css_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_css_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_req_s_tx_rate_stat_msg_8_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_s_tx_rate_stat_msg_8_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_s_tx_rate_stat_msg_8_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_req_s_req_param_address_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_req_s_req_param_address_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_param_address_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_tx_rate_stat_msg_1_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_s_tx_rate_stat_msg_1_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_s_tx_rate_stat_msg_1_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_req_s_req_spl_init_sp_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_req_s_req_spl_init_sp_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_spl_init_sp_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_req_s_req_spool_pos_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_ser_tool_req_s_req_spool_pos_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_ser_tool_req_s_req_spool_pos_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_ser_tool_req_s_req_service_mode_chk_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_req_s_req_service_mode_chk_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_service_mode_chk_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_tx_rate_stat_msg_2_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_s_tx_rate_stat_msg_2_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_s_tx_rate_stat_msg_2_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_tx_rate_stat_msg_3_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_s_tx_rate_stat_msg_3_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_s_tx_rate_stat_msg_3_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_req_spl_calib_tmin_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_s_req_spl_calib_tmin_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_spl_calib_tmin_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_req_cov_pwm_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_s_req_cov_pwm_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_cov_pwm_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_tx_rate_stat_msg_4_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_s_tx_rate_stat_msg_4_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_s_tx_rate_stat_msg_4_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_req_spl_calib_tmax_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_s_req_spl_calib_tmax_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_s_req_spl_calib_tmax_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_tx_rate_stat_msg_5_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_s_tx_rate_stat_msg_5_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_s_tx_rate_stat_msg_5_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_s_tx_rate_stat_msg_6_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_s_tx_rate_stat_msg_6_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_s_tx_rate_stat_msg_6_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

int pved_cls_ser_tool_req_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_ser_tool_req_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->ser_tool_req_xid_m, 0u, 0xffu);

    switch (src_p->ser_tool_req_xid_m) {

    case 128:
        dst_p[1] |= pack_left_shift_u8(src_p->req_service_mode_m, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u16(src_p->req_service_mode_chk_m, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->req_service_mode_chk_m, 8u, 0xffu);
        break;

    case 130:
        dst_p[1] |= pack_left_shift_u8(src_p->req_sensor5_v_m, 4u, 0x30u);
        dst_p[1] |= pack_left_shift_u8(src_p->req_css_m, 6u, 0xc0u);
        dst_p[2] |= pack_left_shift_u16(src_p->req_spool_pos_m, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->req_spool_pos_m, 8u, 0xffu);
        dst_p[4] |= pack_left_shift_u8(src_p->req_cov_pwm_m, 0u, 0xffu);
        break;

    case 132:
        dst_p[1] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_op_m, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_1_m, 0u, 0xffu);
        dst_p[3] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_2_m, 0u, 0xffu);
        dst_p[4] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_3_m, 0u, 0xffu);
        dst_p[5] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_4_m, 0u, 0xffu);
        dst_p[6] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_5_m, 0u, 0xffu);
        dst_p[7] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_6_m, 0u, 0xffu);
        break;

    case 134:
        dst_p[1] |= pack_left_shift_u8(src_p->req_param_data_length_m, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u16(src_p->req_param_address_m, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->req_param_address_m, 8u, 0xffu);
        break;

    case 136:
        dst_p[1] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_7_m, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u8(src_p->tx_rate_stat_msg_8_m, 0u, 0xffu);
        break;

    case 140:
        dst_p[1] |= pack_left_shift_u8(src_p->req_wa_sweep_angle_m, 0u, 0xffu);
        dst_p[2] |= pack_left_shift_u16(src_p->req_spl_init_sp_m, 0u, 0xffu);
        dst_p[3] |= pack_right_shift_u16(src_p->req_spl_init_sp_m, 8u, 0xffu);
        dst_p[4] |= pack_left_shift_u8(src_p->req_spl_calib_tmin_m, 0u, 0xffu);
        dst_p[5] |= pack_left_shift_u8(src_p->req_spl_calib_tmax_m, 0u, 0xffu);
        break;

    case 142:
        dst_p[1] |= pack_left_shift_u8(src_p->req_ans_capture_m, 6u, 0xc0u);
        break;

    case 144:
        break;

    case 146:
        break;

    case 150:
        break;

    default:
        break;
    }

    return (8);
}

int pved_cls_ser_tool_req_m_unpack(
    struct pved_cls_ser_tool_req_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->ser_tool_req_xid_m |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);

    switch (dst_p->ser_tool_req_xid_m) {

    case 128:
        dst_p->req_service_mode_m |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->req_service_mode_chk_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->req_service_mode_chk_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        break;

    case 130:
        dst_p->req_sensor5_v_m |= unpack_right_shift_u8(src_p[1], 4u, 0x30u);
        dst_p->req_css_m |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
        dst_p->req_spool_pos_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->req_spool_pos_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        dst_p->req_cov_pwm_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
        break;

    case 132:
        dst_p->tx_rate_stat_msg_op_m |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_1_m |= unpack_right_shift_u8(src_p[2], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_2_m |= unpack_right_shift_u8(src_p[3], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_3_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_4_m |= unpack_right_shift_u8(src_p[5], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_5_m |= unpack_right_shift_u8(src_p[6], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_6_m |= unpack_right_shift_u8(src_p[7], 0u, 0xffu);
        break;

    case 134:
        dst_p->req_param_data_length_m |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->req_param_address_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->req_param_address_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        break;

    case 136:
        dst_p->tx_rate_stat_msg_7_m |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->tx_rate_stat_msg_8_m |= unpack_right_shift_u8(src_p[2], 0u, 0xffu);
        break;

    case 140:
        dst_p->req_wa_sweep_angle_m |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
        dst_p->req_spl_init_sp_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
        dst_p->req_spl_init_sp_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
        dst_p->req_spl_calib_tmin_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
        dst_p->req_spl_calib_tmax_m |= unpack_right_shift_u8(src_p[5], 0u, 0xffu);
        break;

    case 142:
        dst_p->req_ans_capture_m |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
        break;

    case 144:
        break;

    case 146:
        break;

    case 150:
        break;

    default:
        break;
    }

    return (0);
}

uint8_t pved_cls_ser_tool_req_m_ser_tool_req_xid_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_m_ser_tool_req_xid_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_ser_tool_req_xid_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_tx_rate_stat_msg_7_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_m_tx_rate_stat_msg_7_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_m_tx_rate_stat_msg_7_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_req_param_data_length_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_m_req_param_data_length_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_param_data_length_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_tx_rate_stat_msg_op_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_m_tx_rate_stat_msg_op_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_m_tx_rate_stat_msg_op_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_req_wa_sweep_angle_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_m_req_wa_sweep_angle_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_wa_sweep_angle_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_req_service_mode_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_m_req_service_mode_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_service_mode_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_req_sensor5_v_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_m_req_sensor5_v_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_sensor5_v_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_req_m_req_ans_capture_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_m_req_ans_capture_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_ans_capture_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_req_m_req_css_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_m_req_css_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_css_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_ser_tool_req_m_tx_rate_stat_msg_8_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_m_tx_rate_stat_msg_8_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_m_tx_rate_stat_msg_8_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_req_m_req_param_address_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_req_m_req_param_address_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_param_address_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_tx_rate_stat_msg_1_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_m_tx_rate_stat_msg_1_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_m_tx_rate_stat_msg_1_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_req_m_req_spl_init_sp_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_req_m_req_spl_init_sp_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_spl_init_sp_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_ser_tool_req_m_req_spool_pos_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_ser_tool_req_m_req_spool_pos_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_ser_tool_req_m_req_spool_pos_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_ser_tool_req_m_req_service_mode_chk_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_ser_tool_req_m_req_service_mode_chk_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_service_mode_chk_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_tx_rate_stat_msg_2_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_m_tx_rate_stat_msg_2_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_m_tx_rate_stat_msg_2_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_tx_rate_stat_msg_3_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_m_tx_rate_stat_msg_3_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_m_tx_rate_stat_msg_3_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_req_spl_calib_tmin_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_m_req_spl_calib_tmin_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_spl_calib_tmin_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_req_cov_pwm_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_m_req_cov_pwm_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_cov_pwm_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_tx_rate_stat_msg_4_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_m_tx_rate_stat_msg_4_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_m_tx_rate_stat_msg_4_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_req_spl_calib_tmax_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_ser_tool_req_m_req_spl_calib_tmax_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_ser_tool_req_m_req_spl_calib_tmax_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_tx_rate_stat_msg_5_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_m_tx_rate_stat_msg_5_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_m_tx_rate_stat_msg_5_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_ser_tool_req_m_tx_rate_stat_msg_6_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_ser_tool_req_m_tx_rate_stat_msg_6_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_ser_tool_req_m_tx_rate_stat_msg_6_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

int pved_cls_str_fb_msg_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_str_fb_msg_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->str_fb_est_flow_s, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->str_fb_est_flow_s, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->str_fb_est_wa_s, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->str_fb_est_wa_s, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u8(src_p->str_fb_stw_l2_l_s, 0u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->str_fb_seq_s, 0u, 0x0fu);
    dst_p[5] |= pack_left_shift_u8(src_p->imd_stw_status_s, 4u, 0x30u);
    dst_p[6] |= pack_left_shift_u16(src_p->str_fb_crc_s, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->str_fb_crc_s, 8u, 0xffu);

    return (8);
}

int pved_cls_str_fb_msg_s_unpack(
    struct pved_cls_str_fb_msg_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->str_fb_est_flow_s |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->str_fb_est_flow_s |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->str_fb_est_wa_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->str_fb_est_wa_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->str_fb_stw_l2_l_s |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
    dst_p->str_fb_seq_s |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->imd_stw_status_s |= unpack_right_shift_u8(src_p[5], 4u, 0x30u);
    dst_p->str_fb_crc_s |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->str_fb_crc_s |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_str_fb_msg_s_str_fb_est_flow_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_str_fb_msg_s_str_fb_est_flow_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_str_fb_msg_s_str_fb_est_flow_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_str_fb_msg_s_str_fb_est_wa_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_str_fb_msg_s_str_fb_est_wa_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_str_fb_msg_s_str_fb_est_wa_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_str_fb_msg_s_str_fb_stw_l2_l_s_encode(double value)
{
    return (uint8_t)(value / 0.1);
}

double pved_cls_str_fb_msg_s_str_fb_stw_l2_l_s_decode(uint8_t value)
{
    return ((double)value * 0.1);
}

bool pved_cls_str_fb_msg_s_str_fb_stw_l2_l_s_is_in_range(uint8_t value)
{
    return (value <= 80u);
}

uint8_t pved_cls_str_fb_msg_s_str_fb_seq_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_str_fb_msg_s_str_fb_seq_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_str_fb_msg_s_str_fb_seq_s_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint8_t pved_cls_str_fb_msg_s_imd_stw_status_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_str_fb_msg_s_imd_stw_status_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_str_fb_msg_s_imd_stw_status_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_str_fb_msg_s_str_fb_crc_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_str_fb_msg_s_str_fb_crc_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_str_fb_msg_s_str_fb_crc_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_str_fb_msg_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_str_fb_msg_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->str_fb_est_flow_m, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->str_fb_est_flow_m, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->str_fb_est_wa_m, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->str_fb_est_wa_m, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u8(src_p->str_fb_stw_l2_l_m, 0u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->str_fb_seq_m, 0u, 0x0fu);
    dst_p[5] |= pack_left_shift_u8(src_p->imd_stw_status_m, 4u, 0x30u);
    dst_p[6] |= pack_left_shift_u16(src_p->str_fb_crc_m, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->str_fb_crc_m, 8u, 0xffu);

    return (8);
}

int pved_cls_str_fb_msg_m_unpack(
    struct pved_cls_str_fb_msg_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->str_fb_est_flow_m |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->str_fb_est_flow_m |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->str_fb_est_wa_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->str_fb_est_wa_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->str_fb_stw_l2_l_m |= unpack_right_shift_u8(src_p[4], 0u, 0xffu);
    dst_p->str_fb_seq_m |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->imd_stw_status_m |= unpack_right_shift_u8(src_p[5], 4u, 0x30u);
    dst_p->str_fb_crc_m |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->str_fb_crc_m |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_str_fb_msg_m_str_fb_est_flow_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_str_fb_msg_m_str_fb_est_flow_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_str_fb_msg_m_str_fb_est_flow_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_str_fb_msg_m_str_fb_est_wa_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_str_fb_msg_m_str_fb_est_wa_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_str_fb_msg_m_str_fb_est_wa_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_str_fb_msg_m_str_fb_stw_l2_l_m_encode(double value)
{
    return (uint8_t)(value / 0.1);
}

double pved_cls_str_fb_msg_m_str_fb_stw_l2_l_m_decode(uint8_t value)
{
    return ((double)value * 0.1);
}

bool pved_cls_str_fb_msg_m_str_fb_stw_l2_l_m_is_in_range(uint8_t value)
{
    return (value <= 80u);
}

uint8_t pved_cls_str_fb_msg_m_str_fb_seq_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_str_fb_msg_m_str_fb_seq_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_str_fb_msg_m_str_fb_seq_m_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint8_t pved_cls_str_fb_msg_m_imd_stw_status_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_str_fb_msg_m_imd_stw_status_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_str_fb_msg_m_imd_stw_status_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_str_fb_msg_m_str_fb_crc_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_str_fb_msg_m_str_fb_crc_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_str_fb_msg_m_str_fb_crc_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_aux_joy_p_pack(
    uint8_t *dst_p,
    const struct pved_cls_aux_joy_p_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->aux_joy_pos_p, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->aux_joy_pos_p, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->aux_joy_cl_trim_p, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->aux_joy_cl_trim_p, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u8(src_p->aux_joy_cl_enable_p, 0u, 0x03u);
    dst_p[5] |= pack_left_shift_u8(src_p->aux_joy_seq_p, 0u, 0x0fu);
    dst_p[5] |= pack_left_shift_u8(src_p->aux_joy_cl_error_code_p, 4u, 0xf0u);
    dst_p[6] |= pack_left_shift_u16(src_p->aux_joy_crc_p, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->aux_joy_crc_p, 8u, 0xffu);

    return (8);
}

int pved_cls_aux_joy_p_unpack(
    struct pved_cls_aux_joy_p_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->aux_joy_pos_p |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->aux_joy_pos_p |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->aux_joy_cl_trim_p |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->aux_joy_cl_trim_p |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->aux_joy_cl_enable_p |= unpack_right_shift_u8(src_p[4], 0u, 0x03u);
    dst_p->aux_joy_seq_p |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->aux_joy_cl_error_code_p |= unpack_right_shift_u8(src_p[5], 4u, 0xf0u);
    dst_p->aux_joy_crc_p |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->aux_joy_crc_p |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_aux_joy_p_aux_joy_pos_p_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_aux_joy_p_aux_joy_pos_p_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_aux_joy_p_aux_joy_pos_p_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_aux_joy_p_aux_joy_cl_trim_p_encode(double value)
{
    return (uint16_t)(value - -200.0);
}

double pved_cls_aux_joy_p_aux_joy_cl_trim_p_decode(uint16_t value)
{
    return ((double)value + -200.0);
}

bool pved_cls_aux_joy_p_aux_joy_cl_trim_p_is_in_range(uint16_t value)
{
    return (value <= 400u);
}

uint8_t pved_cls_aux_joy_p_aux_joy_cl_enable_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_aux_joy_p_aux_joy_cl_enable_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_aux_joy_p_aux_joy_cl_enable_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_aux_joy_p_aux_joy_seq_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_aux_joy_p_aux_joy_seq_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_aux_joy_p_aux_joy_seq_p_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint8_t pved_cls_aux_joy_p_aux_joy_cl_error_code_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_aux_joy_p_aux_joy_cl_error_code_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_aux_joy_p_aux_joy_cl_error_code_p_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_aux_joy_p_aux_joy_crc_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_aux_joy_p_aux_joy_crc_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_aux_joy_p_aux_joy_crc_p_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_aux_joy_r_pack(
    uint8_t *dst_p,
    const struct pved_cls_aux_joy_r_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->aux_joy_pos_r, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->aux_joy_pos_r, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->aux_joy_cl_trim_r, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->aux_joy_cl_trim_r, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u8(src_p->aux_joy_cl_enable_r, 0u, 0x03u);
    dst_p[5] |= pack_left_shift_u8(src_p->aux_joy_seq_r, 0u, 0x0fu);
    dst_p[5] |= pack_left_shift_u8(src_p->aux_joy_cl_error_code_r, 4u, 0xf0u);
    dst_p[6] |= pack_left_shift_u16(src_p->aux_joy_crc_r, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->aux_joy_crc_r, 8u, 0xffu);

    return (8);
}

int pved_cls_aux_joy_r_unpack(
    struct pved_cls_aux_joy_r_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->aux_joy_pos_r |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->aux_joy_pos_r |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->aux_joy_cl_trim_r |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->aux_joy_cl_trim_r |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->aux_joy_cl_enable_r |= unpack_right_shift_u8(src_p[4], 0u, 0x03u);
    dst_p->aux_joy_seq_r |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->aux_joy_cl_error_code_r |= unpack_right_shift_u8(src_p[5], 4u, 0xf0u);
    dst_p->aux_joy_crc_r |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->aux_joy_crc_r |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_aux_joy_r_aux_joy_pos_r_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_aux_joy_r_aux_joy_pos_r_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_aux_joy_r_aux_joy_pos_r_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_aux_joy_r_aux_joy_cl_trim_r_encode(double value)
{
    return (uint16_t)(value - -200.0);
}

double pved_cls_aux_joy_r_aux_joy_cl_trim_r_decode(uint16_t value)
{
    return ((double)value + -200.0);
}

bool pved_cls_aux_joy_r_aux_joy_cl_trim_r_is_in_range(uint16_t value)
{
    return (value <= 400u);
}

uint8_t pved_cls_aux_joy_r_aux_joy_cl_enable_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_aux_joy_r_aux_joy_cl_enable_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_aux_joy_r_aux_joy_cl_enable_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_aux_joy_r_aux_joy_seq_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_aux_joy_r_aux_joy_seq_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_aux_joy_r_aux_joy_seq_r_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint8_t pved_cls_aux_joy_r_aux_joy_cl_error_code_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_aux_joy_r_aux_joy_cl_error_code_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_aux_joy_r_aux_joy_cl_error_code_r_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_aux_joy_r_aux_joy_crc_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_aux_joy_r_aux_joy_crc_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_aux_joy_r_aux_joy_crc_r_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_aux_stw_r_pack(
    uint8_t *dst_p,
    const struct pved_cls_aux_stw_r_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->aux_stw_pos_r, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->aux_stw_pos_r, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->aux_stw_velocity_r, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->aux_stw_velocity_r, 8u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->aux_stw_seq_r, 0u, 0x0fu);
    dst_p[5] |= pack_left_shift_u8(src_p->aux_stw_error_code_r, 4u, 0xf0u);
    dst_p[6] |= pack_left_shift_u16(src_p->aux_stw_crc_r, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->aux_stw_crc_r, 8u, 0xffu);

    return (8);
}

int pved_cls_aux_stw_r_unpack(
    struct pved_cls_aux_stw_r_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->aux_stw_pos_r |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->aux_stw_pos_r |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->aux_stw_velocity_r |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->aux_stw_velocity_r |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->aux_stw_seq_r |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->aux_stw_error_code_r |= unpack_right_shift_u8(src_p[5], 4u, 0xf0u);
    dst_p->aux_stw_crc_r |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->aux_stw_crc_r |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_aux_stw_r_aux_stw_pos_r_encode(double value)
{
    return (uint16_t)(value / 0.08789063);
}

double pved_cls_aux_stw_r_aux_stw_pos_r_decode(uint16_t value)
{
    return ((double)value * 0.08789063);
}

bool pved_cls_aux_stw_r_aux_stw_pos_r_is_in_range(uint16_t value)
{
    return (value <= 4094u);
}

uint16_t pved_cls_aux_stw_r_aux_stw_velocity_r_encode(double value)
{
    return (uint16_t)((value - -300.0) / 0.014648438);
}

double pved_cls_aux_stw_r_aux_stw_velocity_r_decode(uint16_t value)
{
    return (((double)value * 0.014648438) + -300.0);
}

bool pved_cls_aux_stw_r_aux_stw_velocity_r_is_in_range(uint16_t value)
{
    return (value <= 40959u);
}

uint8_t pved_cls_aux_stw_r_aux_stw_seq_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_aux_stw_r_aux_stw_seq_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_aux_stw_r_aux_stw_seq_r_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint8_t pved_cls_aux_stw_r_aux_stw_error_code_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_aux_stw_r_aux_stw_error_code_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_aux_stw_r_aux_stw_error_code_r_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_aux_stw_r_aux_stw_crc_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_aux_stw_r_aux_stw_crc_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_aux_stw_r_aux_stw_crc_r_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_aux_stw_p_pack(
    uint8_t *dst_p,
    const struct pved_cls_aux_stw_p_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->aux_stw_pos_p, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->aux_stw_pos_p, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->aux_stw_velocity_p, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->aux_stw_velocity_p, 8u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->aux_stw_seq_p, 0u, 0x0fu);
    dst_p[5] |= pack_left_shift_u8(src_p->aux_stw_error_code_p, 4u, 0xf0u);
    dst_p[6] |= pack_left_shift_u16(src_p->aux_stw_crc_p, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->aux_stw_crc_p, 8u, 0xffu);

    return (8);
}

int pved_cls_aux_stw_p_unpack(
    struct pved_cls_aux_stw_p_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->aux_stw_pos_p |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->aux_stw_pos_p |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->aux_stw_velocity_p |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->aux_stw_velocity_p |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->aux_stw_seq_p |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->aux_stw_error_code_p |= unpack_right_shift_u8(src_p[5], 4u, 0xf0u);
    dst_p->aux_stw_crc_p |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->aux_stw_crc_p |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_aux_stw_p_aux_stw_pos_p_encode(double value)
{
    return (uint16_t)(value / 0.08789063);
}

double pved_cls_aux_stw_p_aux_stw_pos_p_decode(uint16_t value)
{
    return ((double)value * 0.08789063);
}

bool pved_cls_aux_stw_p_aux_stw_pos_p_is_in_range(uint16_t value)
{
    return (value <= 4094u);
}

uint16_t pved_cls_aux_stw_p_aux_stw_velocity_p_encode(double value)
{
    return (uint16_t)((value - -300.0) / 0.014648438);
}

double pved_cls_aux_stw_p_aux_stw_velocity_p_decode(uint16_t value)
{
    return (((double)value * 0.014648438) + -300.0);
}

bool pved_cls_aux_stw_p_aux_stw_velocity_p_is_in_range(uint16_t value)
{
    return (value <= 40959u);
}

uint8_t pved_cls_aux_stw_p_aux_stw_seq_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_aux_stw_p_aux_stw_seq_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_aux_stw_p_aux_stw_seq_p_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint8_t pved_cls_aux_stw_p_aux_stw_error_code_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_aux_stw_p_aux_stw_error_code_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_aux_stw_p_aux_stw_error_code_p_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_aux_stw_p_aux_stw_crc_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_aux_stw_p_aux_stw_crc_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_aux_stw_p_aux_stw_crc_p_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_was_p_pack(
    uint8_t *dst_p,
    const struct pved_cls_was_p_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[1] |= pack_left_shift_u16(src_p->was_wa_p, 0u, 0xffu);
    dst_p[2] |= pack_right_shift_u16(src_p->was_wa_p, 8u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->was_seq_p, 0u, 0x0fu);
    dst_p[6] |= pack_left_shift_u16(src_p->was_crc_p, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->was_crc_p, 8u, 0xffu);

    return (8);
}

int pved_cls_was_p_unpack(
    struct pved_cls_was_p_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->was_wa_p |= unpack_right_shift_u16(src_p[1], 0u, 0xffu);
    dst_p->was_wa_p |= unpack_left_shift_u16(src_p[2], 8u, 0xffu);
    dst_p->was_seq_p |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->was_crc_p |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->was_crc_p |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_was_p_was_wa_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_was_p_was_wa_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_was_p_was_wa_p_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_was_p_was_seq_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_was_p_was_seq_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_was_p_was_seq_p_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_was_p_was_crc_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_was_p_was_crc_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_was_p_was_crc_p_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_was_r_pack(
    uint8_t *dst_p,
    const struct pved_cls_was_r_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[1] |= pack_left_shift_u16(src_p->was_wa_r, 0u, 0xffu);
    dst_p[2] |= pack_right_shift_u16(src_p->was_wa_r, 8u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->was_seq_r, 0u, 0x0fu);
    dst_p[6] |= pack_left_shift_u16(src_p->was_crc_r, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->was_crc_r, 8u, 0xffu);

    return (8);
}

int pved_cls_was_r_unpack(
    struct pved_cls_was_r_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->was_wa_r |= unpack_right_shift_u16(src_p[1], 0u, 0xffu);
    dst_p->was_wa_r |= unpack_left_shift_u16(src_p[2], 8u, 0xffu);
    dst_p->was_seq_r |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->was_crc_r |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->was_crc_r |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_was_r_was_wa_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_was_r_was_wa_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_was_r_was_wa_r_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_was_r_was_seq_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_was_r_was_seq_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_was_r_was_seq_r_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_was_r_was_crc_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_was_r_was_crc_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_was_r_was_crc_r_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_stw_r_pack(
    uint8_t *dst_p,
    const struct pved_cls_stw_r_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->stw_pos_r, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->stw_pos_r, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->stw_velocity_r, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->stw_velocity_r, 8u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->stw_seq_r, 0u, 0x0fu);
    dst_p[5] |= pack_left_shift_u8(src_p->stw_error_code_r, 4u, 0xf0u);
    dst_p[6] |= pack_left_shift_u16(src_p->stw_crc_r, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->stw_crc_r, 8u, 0xffu);

    return (8);
}

int pved_cls_stw_r_unpack(
    struct pved_cls_stw_r_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->stw_pos_r |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->stw_pos_r |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->stw_velocity_r |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->stw_velocity_r |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->stw_seq_r |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->stw_error_code_r |= unpack_right_shift_u8(src_p[5], 4u, 0xf0u);
    dst_p->stw_crc_r |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->stw_crc_r |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_stw_r_stw_pos_r_encode(double value)
{
    return (uint16_t)(value / 0.08789063);
}

double pved_cls_stw_r_stw_pos_r_decode(uint16_t value)
{
    return ((double)value * 0.08789063);
}

bool pved_cls_stw_r_stw_pos_r_is_in_range(uint16_t value)
{
    return (value <= 4094u);
}

uint16_t pved_cls_stw_r_stw_velocity_r_encode(double value)
{
    return (uint16_t)((value - -300.0) / 0.014648438);
}

double pved_cls_stw_r_stw_velocity_r_decode(uint16_t value)
{
    return (((double)value * 0.014648438) + -300.0);
}

bool pved_cls_stw_r_stw_velocity_r_is_in_range(uint16_t value)
{
    return (value <= 40959u);
}

uint8_t pved_cls_stw_r_stw_seq_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stw_r_stw_seq_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stw_r_stw_seq_r_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint8_t pved_cls_stw_r_stw_error_code_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stw_r_stw_error_code_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stw_r_stw_error_code_r_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_stw_r_stw_crc_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stw_r_stw_crc_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stw_r_stw_crc_r_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_stw_p_pack(
    uint8_t *dst_p,
    const struct pved_cls_stw_p_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->stw_pos_p, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->stw_pos_p, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->stw_velocity_p, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->stw_velocity_p, 8u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->stw_seq_p, 0u, 0x0fu);
    dst_p[5] |= pack_left_shift_u8(src_p->stw_error_code_p, 4u, 0xf0u);
    dst_p[6] |= pack_left_shift_u16(src_p->stw_crc_p, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->stw_crc_p, 8u, 0xffu);

    return (8);
}

int pved_cls_stw_p_unpack(
    struct pved_cls_stw_p_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->stw_pos_p |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->stw_pos_p |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->stw_velocity_p |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->stw_velocity_p |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->stw_seq_p |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->stw_error_code_p |= unpack_right_shift_u8(src_p[5], 4u, 0xf0u);
    dst_p->stw_crc_p |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->stw_crc_p |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_stw_p_stw_pos_p_encode(double value)
{
    return (uint16_t)(value / 0.08789063);
}

double pved_cls_stw_p_stw_pos_p_decode(uint16_t value)
{
    return ((double)value * 0.08789063);
}

bool pved_cls_stw_p_stw_pos_p_is_in_range(uint16_t value)
{
    return (value <= 4094u);
}

uint16_t pved_cls_stw_p_stw_velocity_p_encode(double value)
{
    return (uint16_t)((value - -300.0) / 0.014648438);
}

double pved_cls_stw_p_stw_velocity_p_decode(uint16_t value)
{
    return (((double)value * 0.014648438) + -300.0);
}

bool pved_cls_stw_p_stw_velocity_p_is_in_range(uint16_t value)
{
    return (value <= 40959u);
}

uint8_t pved_cls_stw_p_stw_seq_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stw_p_stw_seq_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stw_p_stw_seq_p_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint8_t pved_cls_stw_p_stw_error_code_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stw_p_stw_error_code_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stw_p_stw_error_code_p_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_stw_p_stw_crc_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stw_p_stw_crc_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stw_p_stw_crc_p_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_stat_msg_6_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_6_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->avg_cpu_load_s, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->avg_cpu_load_s, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->spi_flow_command_s, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->spi_flow_command_s, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->was2_s, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->was2_s, 8u, 0xffu);
    dst_p[6] |= pack_left_shift_u8(src_p->spool_monitoring_timeout_s, 0u, 0xffu);
    dst_p[7] |= pack_left_shift_u8(src_p->spool_monitoring_time_s, 0u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_6_s_unpack(
    struct pved_cls_stat_msg_6_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->avg_cpu_load_s |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->avg_cpu_load_s |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->spi_flow_command_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->spi_flow_command_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->was2_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->was2_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
    dst_p->spool_monitoring_timeout_s |= unpack_right_shift_u8(src_p[6], 0u, 0xffu);
    dst_p->spool_monitoring_time_s |= unpack_right_shift_u8(src_p[7], 0u, 0xffu);

    return (0);
}

uint16_t pved_cls_stat_msg_6_s_avg_cpu_load_s_encode(double value)
{
    return (uint16_t)(value / 0.01);
}

double pved_cls_stat_msg_6_s_avg_cpu_load_s_decode(uint16_t value)
{
    return ((double)value * 0.01);
}

bool pved_cls_stat_msg_6_s_avg_cpu_load_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_6_s_spi_flow_command_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_6_s_spi_flow_command_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_6_s_spi_flow_command_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_6_s_was2_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_6_s_was2_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_6_s_was2_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_stat_msg_6_s_spool_monitoring_timeout_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_stat_msg_6_s_spool_monitoring_timeout_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_stat_msg_6_s_spool_monitoring_timeout_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_stat_msg_6_s_spool_monitoring_time_s_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_stat_msg_6_s_spool_monitoring_time_s_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_stat_msg_6_s_spool_monitoring_time_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

int pved_cls_stat_msg_6_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_6_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->avg_cpu_load_m, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->avg_cpu_load_m, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->spi_flow_command_m, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->spi_flow_command_m, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->was2_m, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->was2_m, 8u, 0xffu);
    dst_p[6] |= pack_left_shift_u8(src_p->spool_monitoring_timeout_m, 0u, 0xffu);
    dst_p[7] |= pack_left_shift_u8(src_p->spool_monitoring_time_m, 0u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_6_m_unpack(
    struct pved_cls_stat_msg_6_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->avg_cpu_load_m |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->avg_cpu_load_m |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->spi_flow_command_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->spi_flow_command_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->was2_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->was2_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
    dst_p->spool_monitoring_timeout_m |= unpack_right_shift_u8(src_p[6], 0u, 0xffu);
    dst_p->spool_monitoring_time_m |= unpack_right_shift_u8(src_p[7], 0u, 0xffu);

    return (0);
}

uint16_t pved_cls_stat_msg_6_m_avg_cpu_load_m_encode(double value)
{
    return (uint16_t)(value / 0.01);
}

double pved_cls_stat_msg_6_m_avg_cpu_load_m_decode(uint16_t value)
{
    return ((double)value * 0.01);
}

bool pved_cls_stat_msg_6_m_avg_cpu_load_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_6_m_spi_flow_command_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_6_m_spi_flow_command_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_6_m_spi_flow_command_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_6_m_was2_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_6_m_was2_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_6_m_was2_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint8_t pved_cls_stat_msg_6_m_spool_monitoring_timeout_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_stat_msg_6_m_spool_monitoring_timeout_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_stat_msg_6_m_spool_monitoring_timeout_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_stat_msg_6_m_spool_monitoring_time_m_encode(double value)
{
    return (uint8_t)(value / 10.0);
}

double pved_cls_stat_msg_6_m_spool_monitoring_time_m_decode(uint8_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_stat_msg_6_m_spool_monitoring_time_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

int pved_cls_stat_msg_5_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_5_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->fda_err_condition_s, 0u, 0x03u);
    dst_p[0] |= pack_left_shift_u8(src_p->fda_spl_indication_s, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->fda_was_indication_s, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u8(src_p->fda_stw_indication_s, 6u, 0xc0u);
    dst_p[1] |= pack_left_shift_u8(src_p->fda_fault_condition_s, 0u, 0x03u);
    dst_p[1] |= pack_left_shift_u16(src_p->was_s, 2u, 0xfcu);
    dst_p[2] |= pack_right_shift_u16(src_p->was_s, 6u, 0x1fu);
    dst_p[2] |= pack_left_shift_u16(src_p->fda_spool_position_s, 5u, 0xe0u);
    dst_p[3] |= pack_right_shift_u16(src_p->fda_spool_position_s, 3u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->fda_confidence_counter_s, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->fda_confidence_counter_s, 8u, 0x03u);
    dst_p[5] |= pack_left_shift_u16(src_p->fda_stw_velocity_s, 2u, 0xfcu);
    dst_p[6] |= pack_right_shift_u16(src_p->fda_stw_velocity_s, 6u, 0x7fu);
    dst_p[7] |= pack_left_shift_u8(src_p->spl_diag_s, 2u, 0x0cu);
    dst_p[7] |= pack_left_shift_u8(src_p->spl_ctrl_s, 4u, 0x30u);
    dst_p[7] |= pack_left_shift_u8(src_p->fda_muted_s, 6u, 0xc0u);

    return (8);
}

int pved_cls_stat_msg_5_s_unpack(
    struct pved_cls_stat_msg_5_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->fda_err_condition_s |= unpack_right_shift_u8(src_p[0], 0u, 0x03u);
    dst_p->fda_spl_indication_s |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->fda_was_indication_s |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->fda_stw_indication_s |= unpack_right_shift_u8(src_p[0], 6u, 0xc0u);
    dst_p->fda_fault_condition_s |= unpack_right_shift_u8(src_p[1], 0u, 0x03u);
    dst_p->was_s |= unpack_right_shift_u16(src_p[1], 2u, 0xfcu);
    dst_p->was_s |= unpack_left_shift_u16(src_p[2], 6u, 0x1fu);
    dst_p->fda_spool_position_s |= unpack_right_shift_u16(src_p[2], 5u, 0xe0u);
    dst_p->fda_spool_position_s |= unpack_left_shift_u16(src_p[3], 3u, 0xffu);
    dst_p->fda_confidence_counter_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->fda_confidence_counter_s |= unpack_left_shift_u16(src_p[5], 8u, 0x03u);
    dst_p->fda_stw_velocity_s |= unpack_right_shift_u16(src_p[5], 2u, 0xfcu);
    dst_p->fda_stw_velocity_s |= unpack_left_shift_u16(src_p[6], 6u, 0x7fu);
    dst_p->spl_diag_s |= unpack_right_shift_u8(src_p[7], 2u, 0x0cu);
    dst_p->spl_ctrl_s |= unpack_right_shift_u8(src_p[7], 4u, 0x30u);
    dst_p->fda_muted_s |= unpack_right_shift_u8(src_p[7], 6u, 0xc0u);

    return (0);
}

uint8_t pved_cls_stat_msg_5_s_fda_err_condition_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_s_fda_err_condition_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_s_fda_err_condition_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_s_fda_spl_indication_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_s_fda_spl_indication_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_s_fda_spl_indication_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_s_fda_was_indication_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_s_fda_was_indication_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_s_fda_was_indication_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_s_fda_stw_indication_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_s_fda_stw_indication_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_s_fda_stw_indication_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_s_fda_fault_condition_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_s_fda_fault_condition_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_s_fda_fault_condition_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_stat_msg_5_s_was_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_5_s_was_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_5_s_was_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_5_s_fda_spool_position_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_5_s_fda_spool_position_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_5_s_fda_spool_position_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_5_s_fda_confidence_counter_s_encode(double value)
{
    return (uint16_t)(value / 10.0);
}

double pved_cls_stat_msg_5_s_fda_confidence_counter_s_decode(uint16_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_stat_msg_5_s_fda_confidence_counter_s_is_in_range(uint16_t value)
{
    return (value <= 1024u);
}

uint16_t pved_cls_stat_msg_5_s_fda_stw_velocity_s_encode(double value)
{
    return (uint16_t)((value - -300.0) / 0.1);
}

double pved_cls_stat_msg_5_s_fda_stw_velocity_s_decode(uint16_t value)
{
    return (((double)value * 0.1) + -300.0);
}

bool pved_cls_stat_msg_5_s_fda_stw_velocity_s_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint8_t pved_cls_stat_msg_5_s_spl_diag_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_s_spl_diag_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_s_spl_diag_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_s_spl_ctrl_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_s_spl_ctrl_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_s_spl_ctrl_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_s_fda_muted_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_s_fda_muted_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_s_fda_muted_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

int pved_cls_stat_msg_4_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_4_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->flow_cmd_s, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->flow_cmd_s, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->ideal_oil_vol_s, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->ideal_oil_vol_s, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->flow_setpoint_s, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->flow_setpoint_s, 8u, 0xffu);
    dst_p[6] |= pack_left_shift_u16(src_p->efu_stw_difference_s, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->efu_stw_difference_s, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_4_s_unpack(
    struct pved_cls_stat_msg_4_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->flow_cmd_s |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->flow_cmd_s |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->ideal_oil_vol_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->ideal_oil_vol_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->flow_setpoint_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->flow_setpoint_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
    dst_p->efu_stw_difference_s |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->efu_stw_difference_s |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_stat_msg_4_s_flow_cmd_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_4_s_flow_cmd_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_4_s_flow_cmd_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_4_s_ideal_oil_vol_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_4_s_ideal_oil_vol_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_4_s_ideal_oil_vol_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_4_s_flow_setpoint_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_4_s_flow_setpoint_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_4_s_flow_setpoint_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_4_s_efu_stw_difference_s_encode(double value)
{
    return (uint16_t)(value / 0.1);
}

double pved_cls_stat_msg_4_s_efu_stw_difference_s_decode(uint16_t value)
{
    return ((double)value * 0.1);
}

bool pved_cls_stat_msg_4_s_efu_stw_difference_s_is_in_range(uint16_t value)
{
    return (value <= 36000u);
}

int pved_cls_stat_msg_4_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_4_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->flow_cmd_m, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->flow_cmd_m, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->ideal_oil_vol_m, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->ideal_oil_vol_m, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->flow_setpoint_m, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->flow_setpoint_m, 8u, 0xffu);
    dst_p[6] |= pack_left_shift_u16(src_p->efu_stw_difference_m, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->efu_stw_difference_m, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_4_m_unpack(
    struct pved_cls_stat_msg_4_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->flow_cmd_m |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->flow_cmd_m |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->ideal_oil_vol_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->ideal_oil_vol_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->flow_setpoint_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->flow_setpoint_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
    dst_p->efu_stw_difference_m |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->efu_stw_difference_m |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_stat_msg_4_m_flow_cmd_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_4_m_flow_cmd_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_4_m_flow_cmd_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_4_m_ideal_oil_vol_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_4_m_ideal_oil_vol_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_4_m_ideal_oil_vol_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_4_m_flow_setpoint_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_4_m_flow_setpoint_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_4_m_flow_setpoint_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_4_m_efu_stw_difference_m_encode(double value)
{
    return (uint16_t)(value / 0.1);
}

double pved_cls_stat_msg_4_m_efu_stw_difference_m_decode(uint16_t value)
{
    return ((double)value * 0.1);
}

bool pved_cls_stat_msg_4_m_efu_stw_difference_m_is_in_range(uint16_t value)
{
    return (value <= 36000u);
}

int pved_cls_adr_claimed_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_adr_claimed_s_t *src_p,
    size_t size)
{
    (void)src_p;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    return (8);
}

int pved_cls_adr_claimed_s_unpack(
    struct pved_cls_adr_claimed_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    (void)src_p;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    return (0);
}

int pved_cls_adr_claimed_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_adr_claimed_m_t *src_p,
    size_t size)
{
    (void)src_p;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    return (8);
}

int pved_cls_adr_claimed_m_unpack(
    struct pved_cls_adr_claimed_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    (void)src_p;

    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    return (0);
}

int pved_cls_stat_msg_5_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_5_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->fda_err_condition_m, 0u, 0x03u);
    dst_p[0] |= pack_left_shift_u8(src_p->fda_spl_indication_m, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->fda_was_indication_m, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u8(src_p->fda_stw_indication_m, 6u, 0xc0u);
    dst_p[1] |= pack_left_shift_u8(src_p->fda_fault_condition_m, 0u, 0x03u);
    dst_p[1] |= pack_left_shift_u16(src_p->was_m, 2u, 0xfcu);
    dst_p[2] |= pack_right_shift_u16(src_p->was_m, 6u, 0x1fu);
    dst_p[2] |= pack_left_shift_u16(src_p->fda_spool_position_m, 5u, 0xe0u);
    dst_p[3] |= pack_right_shift_u16(src_p->fda_spool_position_m, 3u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->fda_confidence_counter_m, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->fda_confidence_counter_m, 8u, 0x03u);
    dst_p[5] |= pack_left_shift_u16(src_p->fda_stw_velocity_m, 2u, 0xfcu);
    dst_p[6] |= pack_right_shift_u16(src_p->fda_stw_velocity_m, 6u, 0x7fu);
    dst_p[7] |= pack_left_shift_u8(src_p->spl_diag_m, 2u, 0x0cu);
    dst_p[7] |= pack_left_shift_u8(src_p->spl_ctrl_m, 4u, 0x30u);
    dst_p[7] |= pack_left_shift_u8(src_p->fda_muted_m, 6u, 0xc0u);

    return (8);
}

int pved_cls_stat_msg_5_m_unpack(
    struct pved_cls_stat_msg_5_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->fda_err_condition_m |= unpack_right_shift_u8(src_p[0], 0u, 0x03u);
    dst_p->fda_spl_indication_m |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->fda_was_indication_m |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->fda_stw_indication_m |= unpack_right_shift_u8(src_p[0], 6u, 0xc0u);
    dst_p->fda_fault_condition_m |= unpack_right_shift_u8(src_p[1], 0u, 0x03u);
    dst_p->was_m |= unpack_right_shift_u16(src_p[1], 2u, 0xfcu);
    dst_p->was_m |= unpack_left_shift_u16(src_p[2], 6u, 0x1fu);
    dst_p->fda_spool_position_m |= unpack_right_shift_u16(src_p[2], 5u, 0xe0u);
    dst_p->fda_spool_position_m |= unpack_left_shift_u16(src_p[3], 3u, 0xffu);
    dst_p->fda_confidence_counter_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->fda_confidence_counter_m |= unpack_left_shift_u16(src_p[5], 8u, 0x03u);
    dst_p->fda_stw_velocity_m |= unpack_right_shift_u16(src_p[5], 2u, 0xfcu);
    dst_p->fda_stw_velocity_m |= unpack_left_shift_u16(src_p[6], 6u, 0x7fu);
    dst_p->spl_diag_m |= unpack_right_shift_u8(src_p[7], 2u, 0x0cu);
    dst_p->spl_ctrl_m |= unpack_right_shift_u8(src_p[7], 4u, 0x30u);
    dst_p->fda_muted_m |= unpack_right_shift_u8(src_p[7], 6u, 0xc0u);

    return (0);
}

uint8_t pved_cls_stat_msg_5_m_fda_err_condition_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_m_fda_err_condition_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_m_fda_err_condition_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_m_fda_spl_indication_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_m_fda_spl_indication_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_m_fda_spl_indication_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_m_fda_was_indication_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_m_fda_was_indication_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_m_fda_was_indication_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_m_fda_stw_indication_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_m_fda_stw_indication_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_m_fda_stw_indication_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_m_fda_fault_condition_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_m_fda_fault_condition_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_m_fda_fault_condition_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_stat_msg_5_m_was_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_5_m_was_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_5_m_was_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_5_m_fda_spool_position_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_5_m_fda_spool_position_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_5_m_fda_spool_position_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_5_m_fda_confidence_counter_m_encode(double value)
{
    return (uint16_t)(value / 10.0);
}

double pved_cls_stat_msg_5_m_fda_confidence_counter_m_decode(uint16_t value)
{
    return ((double)value * 10.0);
}

bool pved_cls_stat_msg_5_m_fda_confidence_counter_m_is_in_range(uint16_t value)
{
    return (value <= 1024u);
}

uint16_t pved_cls_stat_msg_5_m_fda_stw_velocity_m_encode(double value)
{
    return (uint16_t)((value - -300.0) / 0.1);
}

double pved_cls_stat_msg_5_m_fda_stw_velocity_m_decode(uint16_t value)
{
    return (((double)value * 0.1) + -300.0);
}

bool pved_cls_stat_msg_5_m_fda_stw_velocity_m_is_in_range(uint16_t value)
{
    return (value <= 6000u);
}

uint8_t pved_cls_stat_msg_5_m_spl_diag_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_m_spl_diag_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_m_spl_diag_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_m_spl_ctrl_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_m_spl_ctrl_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_m_spl_ctrl_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_5_m_fda_muted_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_5_m_fda_muted_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_5_m_fda_muted_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

int pved_cls_gps1_gms_pack(
    uint8_t *dst_p,
    const struct pved_cls_gps1_gms_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->gps1_estimated_curvature, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->gps1_estimated_curvature, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u8(src_p->gps1_system_lockout, 0u, 0x03u);
    dst_p[2] |= pack_left_shift_u8(src_p->gps1_system_ready, 2u, 0x0cu);
    dst_p[2] |= pack_left_shift_u8(src_p->gps1_str_input_pos_status, 4u, 0x30u);
    dst_p[2] |= pack_left_shift_u8(src_p->gps1_req_reset, 6u, 0xc0u);
    dst_p[3] |= pack_left_shift_u8(src_p->gps1_limit_status, 5u, 0xe0u);
    dst_p[4] |= pack_left_shift_u8(src_p->gps1_exit_reason, 0u, 0x3fu);

    return (8);
}

int pved_cls_gps1_gms_unpack(
    struct pved_cls_gps1_gms_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->gps1_estimated_curvature |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->gps1_estimated_curvature |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->gps1_system_lockout |= unpack_right_shift_u8(src_p[2], 0u, 0x03u);
    dst_p->gps1_system_ready |= unpack_right_shift_u8(src_p[2], 2u, 0x0cu);
    dst_p->gps1_str_input_pos_status |= unpack_right_shift_u8(src_p[2], 4u, 0x30u);
    dst_p->gps1_req_reset |= unpack_right_shift_u8(src_p[2], 6u, 0xc0u);
    dst_p->gps1_limit_status |= unpack_right_shift_u8(src_p[3], 5u, 0xe0u);
    dst_p->gps1_exit_reason |= unpack_right_shift_u8(src_p[4], 0u, 0x3fu);

    return (0);
}

uint16_t pved_cls_gps1_gms_gps1_estimated_curvature_encode(double value)
{
    return (uint16_t)((value - -8032.0) / 0.25);
}

double pved_cls_gps1_gms_gps1_estimated_curvature_decode(uint16_t value)
{
    return (((double)value * 0.25) + -8032.0);
}

bool pved_cls_gps1_gms_gps1_estimated_curvature_is_in_range(uint16_t value)
{
    return (value <= 64256u);
}

uint8_t pved_cls_gps1_gms_gps1_system_lockout_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps1_gms_gps1_system_lockout_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps1_gms_gps1_system_lockout_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_gps1_gms_gps1_system_ready_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps1_gms_gps1_system_ready_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps1_gms_gps1_system_ready_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_gps1_gms_gps1_str_input_pos_status_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps1_gms_gps1_str_input_pos_status_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps1_gms_gps1_str_input_pos_status_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_gps1_gms_gps1_req_reset_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps1_gms_gps1_req_reset_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps1_gms_gps1_req_reset_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_gps1_gms_gps1_limit_status_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps1_gms_gps1_limit_status_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps1_gms_gps1_limit_status_is_in_range(uint8_t value)
{
    return (value <= 7u);
}

uint8_t pved_cls_gps1_gms_gps1_exit_reason_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps1_gms_gps1_exit_reason_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps1_gms_gps1_exit_reason_is_in_range(uint8_t value)
{
    return (value <= 7u);
}

int pved_cls_gps1_gmc_pack(
    uint8_t *dst_p,
    const struct pved_cls_gps1_gmc_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->gps1_curvature_cmd, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->gps1_curvature_cmd, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u8(src_p->gps1_str_cmd_status, 0u, 0x03u);

    return (8);
}

int pved_cls_gps1_gmc_unpack(
    struct pved_cls_gps1_gmc_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->gps1_curvature_cmd |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->gps1_curvature_cmd |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->gps1_str_cmd_status |= unpack_right_shift_u8(src_p[2], 0u, 0x03u);

    return (0);
}

uint16_t pved_cls_gps1_gmc_gps1_curvature_cmd_encode(double value)
{
    return (uint16_t)((value - -8032.0) / 0.25);
}

double pved_cls_gps1_gmc_gps1_curvature_cmd_decode(uint16_t value)
{
    return (((double)value * 0.25) + -8032.0);
}

bool pved_cls_gps1_gmc_gps1_curvature_cmd_is_in_range(uint16_t value)
{
    return (value <= 64256u);
}

uint8_t pved_cls_gps1_gmc_gps1_str_cmd_status_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_gps1_gmc_gps1_str_cmd_status_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_gps1_gmc_gps1_str_cmd_status_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

int pved_cls_mmi_r_pack(
    uint8_t *dst_p,
    const struct pved_cls_mmi_r_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->mmi_xid_res_r, 0u, 0xffu);
    dst_p[1] |= pack_left_shift_u8(src_p->mmi_str_mode_req_r, 0u, 0xffu);
    dst_p[2] |= pack_left_shift_u8(src_p->mmi_lockout_aux_r, 4u, 0x30u);
    dst_p[2] |= pack_left_shift_u8(src_p->mmi_lockout_gps_r, 6u, 0xc0u);
    dst_p[3] |= pack_left_shift_u8(src_p->mmi_aux_mode_req_r, 0u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->mmi_seq_r, 0u, 0x0fu);
    dst_p[6] |= pack_left_shift_u16(src_p->mmi_crc_r, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->mmi_crc_r, 8u, 0xffu);

    return (8);
}

int pved_cls_mmi_r_unpack(
    struct pved_cls_mmi_r_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->mmi_xid_res_r |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);
    dst_p->mmi_str_mode_req_r |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
    dst_p->mmi_lockout_aux_r |= unpack_right_shift_u8(src_p[2], 4u, 0x30u);
    dst_p->mmi_lockout_gps_r |= unpack_right_shift_u8(src_p[2], 6u, 0xc0u);
    dst_p->mmi_aux_mode_req_r |= unpack_right_shift_u8(src_p[3], 0u, 0xffu);
    dst_p->mmi_seq_r |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->mmi_crc_r |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->mmi_crc_r |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint8_t pved_cls_mmi_r_mmi_xid_res_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_r_mmi_xid_res_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_r_mmi_xid_res_r_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_mmi_r_mmi_str_mode_req_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_r_mmi_str_mode_req_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_r_mmi_str_mode_req_r_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_mmi_r_mmi_lockout_aux_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_r_mmi_lockout_aux_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_r_mmi_lockout_aux_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_mmi_r_mmi_lockout_gps_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_r_mmi_lockout_gps_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_r_mmi_lockout_gps_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_mmi_r_mmi_aux_mode_req_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_r_mmi_aux_mode_req_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_r_mmi_aux_mode_req_r_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_mmi_r_mmi_seq_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_r_mmi_seq_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_r_mmi_seq_r_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_mmi_r_mmi_crc_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_mmi_r_mmi_crc_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_r_mmi_crc_r_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_mmi_p_pack(
    uint8_t *dst_p,
    const struct pved_cls_mmi_p_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->mmi_xid_res_p, 0u, 0xffu);
    dst_p[1] |= pack_left_shift_u8(src_p->mmi_str_mode_req_p, 0u, 0xffu);
    dst_p[2] |= pack_left_shift_u8(src_p->mmi_lockout_aux_p, 4u, 0x30u);
    dst_p[2] |= pack_left_shift_u8(src_p->mmi_lockout_gps_p, 6u, 0xc0u);
    dst_p[3] |= pack_left_shift_u8(src_p->mmi_aux_mode_req_p, 0u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->mmi_seq_p, 0u, 0x0fu);
    dst_p[6] |= pack_left_shift_u16(src_p->mmi_crc_p, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->mmi_crc_p, 8u, 0xffu);

    return (8);
}

int pved_cls_mmi_p_unpack(
    struct pved_cls_mmi_p_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->mmi_xid_res_p |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);
    dst_p->mmi_str_mode_req_p |= unpack_right_shift_u8(src_p[1], 0u, 0xffu);
    dst_p->mmi_lockout_aux_p |= unpack_right_shift_u8(src_p[2], 4u, 0x30u);
    dst_p->mmi_lockout_gps_p |= unpack_right_shift_u8(src_p[2], 6u, 0xc0u);
    dst_p->mmi_aux_mode_req_p |= unpack_right_shift_u8(src_p[3], 0u, 0xffu);
    dst_p->mmi_seq_p |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->mmi_crc_p |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->mmi_crc_p |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint8_t pved_cls_mmi_p_mmi_xid_res_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_p_mmi_xid_res_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_p_mmi_xid_res_p_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_mmi_p_mmi_str_mode_req_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_p_mmi_str_mode_req_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_p_mmi_str_mode_req_p_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_mmi_p_mmi_lockout_aux_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_p_mmi_lockout_aux_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_p_mmi_lockout_aux_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_mmi_p_mmi_lockout_gps_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_p_mmi_lockout_gps_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_p_mmi_lockout_gps_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_mmi_p_mmi_aux_mode_req_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_p_mmi_aux_mode_req_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_p_mmi_aux_mode_req_p_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_mmi_p_mmi_seq_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_mmi_p_mmi_seq_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_p_mmi_seq_p_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_mmi_p_mmi_crc_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_mmi_p_mmi_crc_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_mmi_p_mmi_crc_p_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_vsp_r_pack(
    uint8_t *dst_p,
    const struct pved_cls_vsp_r_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[1] |= pack_left_shift_u8(src_p->vsp_dir_r, 6u, 0xc0u);
    dst_p[2] |= pack_left_shift_u16(src_p->vsp_speed_r, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->vsp_speed_r, 8u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->vsp_seq_r, 0u, 0x0fu);
    dst_p[6] |= pack_left_shift_u16(src_p->vsp_crc_r, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->vsp_crc_r, 8u, 0xffu);

    return (8);
}

int pved_cls_vsp_r_unpack(
    struct pved_cls_vsp_r_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->vsp_dir_r |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
    dst_p->vsp_speed_r |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->vsp_speed_r |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->vsp_seq_r |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->vsp_crc_r |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->vsp_crc_r |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint8_t pved_cls_vsp_r_vsp_dir_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_vsp_r_vsp_dir_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_vsp_r_vsp_dir_r_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_vsp_r_vsp_speed_r_encode(double value)
{
    return (uint16_t)(value / 0.00390625);
}

double pved_cls_vsp_r_vsp_speed_r_decode(uint16_t value)
{
    return ((double)value * 0.00390625);
}

bool pved_cls_vsp_r_vsp_speed_r_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_vsp_r_vsp_seq_r_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_vsp_r_vsp_seq_r_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_vsp_r_vsp_seq_r_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_vsp_r_vsp_crc_r_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_vsp_r_vsp_crc_r_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_vsp_r_vsp_crc_r_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_vsp_p_pack(
    uint8_t *dst_p,
    const struct pved_cls_vsp_p_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[1] |= pack_left_shift_u8(src_p->vsp_dir_p, 6u, 0xc0u);
    dst_p[2] |= pack_left_shift_u16(src_p->vsp_speed_p, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->vsp_speed_p, 8u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->vsp_seq_p, 0u, 0x0fu);
    dst_p[6] |= pack_left_shift_u16(src_p->vsp_crc_p, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->vsp_crc_p, 8u, 0xffu);

    return (8);
}

int pved_cls_vsp_p_unpack(
    struct pved_cls_vsp_p_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->vsp_dir_p |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
    dst_p->vsp_speed_p |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->vsp_speed_p |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->vsp_seq_p |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->vsp_crc_p |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->vsp_crc_p |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint8_t pved_cls_vsp_p_vsp_dir_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_vsp_p_vsp_dir_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_vsp_p_vsp_dir_p_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_vsp_p_vsp_speed_p_encode(double value)
{
    return (uint16_t)(value / 0.00390625);
}

double pved_cls_vsp_p_vsp_speed_p_decode(uint16_t value)
{
    return ((double)value * 0.00390625);
}

bool pved_cls_vsp_p_vsp_speed_p_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_vsp_p_vsp_seq_p_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_vsp_p_vsp_seq_p_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_vsp_p_vsp_seq_p_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_vsp_p_vsp_crc_p_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_vsp_p_vsp_crc_p_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_vsp_p_vsp_crc_p_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_stat_msg_3_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_3_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->pcb_temp_s, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->pcb_temp_s, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->batt_volt_s, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->batt_volt_s, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->sensor5_v_volt_s, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->sensor5_v_volt_s, 8u, 0xffu);
    dst_p[6] |= pack_left_shift_u8(src_p->lvdt_neut_comp_s, 0u, 0xffu);
    dst_p[7] |= pack_left_shift_u8(src_p->lvdt_comp_count_s, 0u, 0x0fu);
    dst_p[7] |= pack_left_shift_u8(src_p->spl_ctrl_status_s, 4u, 0x30u);

    return (8);
}

int pved_cls_stat_msg_3_s_unpack(
    struct pved_cls_stat_msg_3_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->pcb_temp_s |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->pcb_temp_s |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->batt_volt_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->batt_volt_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->sensor5_v_volt_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->sensor5_v_volt_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
    dst_p->lvdt_neut_comp_s |= unpack_right_shift_u8(src_p[6], 0u, 0xffu);
    dst_p->lvdt_comp_count_s |= unpack_right_shift_u8(src_p[7], 0u, 0x0fu);
    dst_p->spl_ctrl_status_s |= unpack_right_shift_u8(src_p[7], 4u, 0x30u);

    return (0);
}

uint16_t pved_cls_stat_msg_3_s_pcb_temp_s_encode(double value)
{
    return (uint16_t)(value - -40.0);
}

double pved_cls_stat_msg_3_s_pcb_temp_s_decode(uint16_t value)
{
    return ((double)value + -40.0);
}

bool pved_cls_stat_msg_3_s_pcb_temp_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_3_s_batt_volt_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_3_s_batt_volt_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_3_s_batt_volt_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_3_s_sensor5_v_volt_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_3_s_sensor5_v_volt_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_3_s_sensor5_v_volt_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_stat_msg_3_s_lvdt_neut_comp_s_encode(double value)
{
    return (uint8_t)(value - -100.0);
}

double pved_cls_stat_msg_3_s_lvdt_neut_comp_s_decode(uint8_t value)
{
    return ((double)value + -100.0);
}

bool pved_cls_stat_msg_3_s_lvdt_neut_comp_s_is_in_range(uint8_t value)
{
    return ((value >= 50u) && (value <= 150u));
}

uint8_t pved_cls_stat_msg_3_s_lvdt_comp_count_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_3_s_lvdt_comp_count_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_3_s_lvdt_comp_count_s_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint8_t pved_cls_stat_msg_3_s_spl_ctrl_status_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_3_s_spl_ctrl_status_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_3_s_spl_ctrl_status_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

int pved_cls_stat_msg_3_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_3_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->pcb_temp_m, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->pcb_temp_m, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->batt_volt_m, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->batt_volt_m, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->sensor5_v_volt_m, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->sensor5_v_volt_m, 8u, 0xffu);
    dst_p[6] |= pack_left_shift_u8(src_p->lvdt_neut_comp_m, 0u, 0xffu);
    dst_p[7] |= pack_left_shift_u8(src_p->lvdt_comp_count_m, 0u, 0x0fu);
    dst_p[7] |= pack_left_shift_u8(src_p->spl_ctrl_status_m, 4u, 0x30u);

    return (8);
}

int pved_cls_stat_msg_3_m_unpack(
    struct pved_cls_stat_msg_3_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->pcb_temp_m |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->pcb_temp_m |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->batt_volt_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->batt_volt_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->sensor5_v_volt_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->sensor5_v_volt_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
    dst_p->lvdt_neut_comp_m |= unpack_right_shift_u8(src_p[6], 0u, 0xffu);
    dst_p->lvdt_comp_count_m |= unpack_right_shift_u8(src_p[7], 0u, 0x0fu);
    dst_p->spl_ctrl_status_m |= unpack_right_shift_u8(src_p[7], 4u, 0x30u);

    return (0);
}

uint16_t pved_cls_stat_msg_3_m_pcb_temp_m_encode(double value)
{
    return (uint16_t)(value - -40.0);
}

double pved_cls_stat_msg_3_m_pcb_temp_m_decode(uint16_t value)
{
    return ((double)value + -40.0);
}

bool pved_cls_stat_msg_3_m_pcb_temp_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_3_m_batt_volt_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_3_m_batt_volt_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_3_m_batt_volt_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_3_m_sensor5_v_volt_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_3_m_sensor5_v_volt_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_3_m_sensor5_v_volt_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_stat_msg_3_m_lvdt_neut_comp_m_encode(double value)
{
    return (uint8_t)(value - -100.0);
}

double pved_cls_stat_msg_3_m_lvdt_neut_comp_m_decode(uint8_t value)
{
    return ((double)value + -100.0);
}

bool pved_cls_stat_msg_3_m_lvdt_neut_comp_m_is_in_range(uint8_t value)
{
    return ((value >= 50u) && (value <= 150u));
}

uint8_t pved_cls_stat_msg_3_m_lvdt_comp_count_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_3_m_lvdt_comp_count_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_3_m_lvdt_comp_count_m_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint8_t pved_cls_stat_msg_3_m_spl_ctrl_status_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_3_m_spl_ctrl_status_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_3_m_spl_ctrl_status_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

int pved_cls_stat_msg_2_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_2_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->src_cl_wa_setpoint_s, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->dout_state_s, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u8(src_p->state_css_s, 6u, 0xc0u);
    dst_p[2] |= pack_left_shift_u16(src_p->ad3_s, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->ad3_s, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->dout_current_s, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->dout_current_s, 8u, 0xffu);
    dst_p[6] |= pack_left_shift_u16(src_p->cl_wa_setpoint_s, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->cl_wa_setpoint_s, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_2_s_unpack(
    struct pved_cls_stat_msg_2_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->src_cl_wa_setpoint_s |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->dout_state_s |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->state_css_s |= unpack_right_shift_u8(src_p[0], 6u, 0xc0u);
    dst_p->ad3_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->ad3_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->dout_current_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->dout_current_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
    dst_p->cl_wa_setpoint_s |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->cl_wa_setpoint_s |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint8_t pved_cls_stat_msg_2_s_src_cl_wa_setpoint_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_2_s_src_cl_wa_setpoint_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_2_s_src_cl_wa_setpoint_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_2_s_dout_state_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_2_s_dout_state_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_2_s_dout_state_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_2_s_state_css_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_2_s_state_css_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_2_s_state_css_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_stat_msg_2_s_ad3_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_2_s_ad3_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_2_s_ad3_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_2_s_dout_current_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_2_s_dout_current_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_2_s_dout_current_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_2_s_cl_wa_setpoint_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_2_s_cl_wa_setpoint_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_2_s_cl_wa_setpoint_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

int pved_cls_stat_msg_2_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_2_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->src_cl_wa_setpoint_m, 2u, 0x0cu);
    dst_p[0] |= pack_left_shift_u8(src_p->dout_state_m, 4u, 0x30u);
    dst_p[0] |= pack_left_shift_u8(src_p->state_css_m, 6u, 0xc0u);
    dst_p[2] |= pack_left_shift_u16(src_p->ad3_m, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->ad3_m, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->dout_current_m, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->dout_current_m, 8u, 0xffu);
    dst_p[6] |= pack_left_shift_u16(src_p->cl_wa_setpoint_m, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->cl_wa_setpoint_m, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_2_m_unpack(
    struct pved_cls_stat_msg_2_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->src_cl_wa_setpoint_m |= unpack_right_shift_u8(src_p[0], 2u, 0x0cu);
    dst_p->dout_state_m |= unpack_right_shift_u8(src_p[0], 4u, 0x30u);
    dst_p->state_css_m |= unpack_right_shift_u8(src_p[0], 6u, 0xc0u);
    dst_p->ad3_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->ad3_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->dout_current_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->dout_current_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
    dst_p->cl_wa_setpoint_m |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->cl_wa_setpoint_m |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint8_t pved_cls_stat_msg_2_m_src_cl_wa_setpoint_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_2_m_src_cl_wa_setpoint_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_2_m_src_cl_wa_setpoint_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_2_m_dout_state_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_2_m_dout_state_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_2_m_dout_state_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_2_m_state_css_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_2_m_state_css_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_2_m_state_css_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint16_t pved_cls_stat_msg_2_m_ad3_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_2_m_ad3_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_2_m_ad3_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_2_m_dout_current_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_2_m_dout_current_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_2_m_dout_current_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_2_m_cl_wa_setpoint_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_2_m_cl_wa_setpoint_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_2_m_cl_wa_setpoint_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

int pved_cls_stat_msg_1_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_1_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->spool_setpoint_s, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->spool_setpoint_s, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->spool_position_s, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->spool_position_s, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->ad1_s, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->ad1_s, 8u, 0xffu);
    dst_p[6] |= pack_left_shift_u16(src_p->ad2_s, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->ad2_s, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_1_s_unpack(
    struct pved_cls_stat_msg_1_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->spool_setpoint_s |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->spool_setpoint_s |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->spool_position_s |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->spool_position_s |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->ad1_s |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->ad1_s |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
    dst_p->ad2_s |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->ad2_s |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_stat_msg_1_s_spool_setpoint_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_1_s_spool_setpoint_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_1_s_spool_setpoint_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_1_s_spool_position_s_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_1_s_spool_position_s_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_1_s_spool_position_s_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_1_s_ad1_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_1_s_ad1_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_1_s_ad1_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_1_s_ad2_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_1_s_ad2_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_1_s_ad2_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_stat_msg_1_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_1_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u16(src_p->spool_setpoint_m, 0u, 0xffu);
    dst_p[1] |= pack_right_shift_u16(src_p->spool_setpoint_m, 8u, 0xffu);
    dst_p[2] |= pack_left_shift_u16(src_p->spool_position_m, 0u, 0xffu);
    dst_p[3] |= pack_right_shift_u16(src_p->spool_position_m, 8u, 0xffu);
    dst_p[4] |= pack_left_shift_u16(src_p->ad1_m, 0u, 0xffu);
    dst_p[5] |= pack_right_shift_u16(src_p->ad1_m, 8u, 0xffu);
    dst_p[6] |= pack_left_shift_u16(src_p->ad2_m, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->ad2_m, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_1_m_unpack(
    struct pved_cls_stat_msg_1_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->spool_setpoint_m |= unpack_right_shift_u16(src_p[0], 0u, 0xffu);
    dst_p->spool_setpoint_m |= unpack_left_shift_u16(src_p[1], 8u, 0xffu);
    dst_p->spool_position_m |= unpack_right_shift_u16(src_p[2], 0u, 0xffu);
    dst_p->spool_position_m |= unpack_left_shift_u16(src_p[3], 8u, 0xffu);
    dst_p->ad1_m |= unpack_right_shift_u16(src_p[4], 0u, 0xffu);
    dst_p->ad1_m |= unpack_left_shift_u16(src_p[5], 8u, 0xffu);
    dst_p->ad2_m |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->ad2_m |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint16_t pved_cls_stat_msg_1_m_spool_setpoint_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_1_m_spool_setpoint_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_1_m_spool_setpoint_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_1_m_spool_position_m_encode(double value)
{
    return (uint16_t)(value - -1000.0);
}

double pved_cls_stat_msg_1_m_spool_position_m_decode(uint16_t value)
{
    return ((double)value + -1000.0);
}

bool pved_cls_stat_msg_1_m_spool_position_m_is_in_range(uint16_t value)
{
    return (value <= 2000u);
}

uint16_t pved_cls_stat_msg_1_m_ad1_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_1_m_ad1_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_1_m_ad1_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

uint16_t pved_cls_stat_msg_1_m_ad2_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_1_m_ad2_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_1_m_ad2_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_stat_msg_op_s_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_op_s_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->operation_state_s, 0u, 0xffu);
    dst_p[1] |= pack_left_shift_u8(src_p->lockout_aux_s, 0u, 0x03u);
    dst_p[1] |= pack_left_shift_u8(src_p->lockout_eh_steering_s, 2u, 0x0cu);
    dst_p[1] |= pack_left_shift_u8(src_p->lockout_program_change_s, 4u, 0x30u);
    dst_p[1] |= pack_left_shift_u8(src_p->lockout_device_change_s, 6u, 0xc0u);
    dst_p[2] |= pack_left_shift_u8(src_p->lockout_gps_s, 6u, 0xc0u);
    dst_p[3] |= pack_left_shift_u8(src_p->service_mode_state_s, 0u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->operation_state_seq_s, 0u, 0x0fu);
    dst_p[6] |= pack_left_shift_u16(src_p->operation_state_crc_s, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->operation_state_crc_s, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_op_s_unpack(
    struct pved_cls_stat_msg_op_s_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->operation_state_s |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);
    dst_p->lockout_aux_s |= unpack_right_shift_u8(src_p[1], 0u, 0x03u);
    dst_p->lockout_eh_steering_s |= unpack_right_shift_u8(src_p[1], 2u, 0x0cu);
    dst_p->lockout_program_change_s |= unpack_right_shift_u8(src_p[1], 4u, 0x30u);
    dst_p->lockout_device_change_s |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
    dst_p->lockout_gps_s |= unpack_right_shift_u8(src_p[2], 6u, 0xc0u);
    dst_p->service_mode_state_s |= unpack_right_shift_u8(src_p[3], 0u, 0xffu);
    dst_p->operation_state_seq_s |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->operation_state_crc_s |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->operation_state_crc_s |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint8_t pved_cls_stat_msg_op_s_operation_state_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_s_operation_state_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_s_operation_state_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_stat_msg_op_s_lockout_aux_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_s_lockout_aux_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_s_lockout_aux_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_op_s_lockout_eh_steering_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_s_lockout_eh_steering_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_s_lockout_eh_steering_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_op_s_lockout_program_change_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_s_lockout_program_change_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_s_lockout_program_change_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_op_s_lockout_device_change_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_s_lockout_device_change_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_s_lockout_device_change_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_op_s_lockout_gps_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_s_lockout_gps_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_s_lockout_gps_s_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_op_s_service_mode_state_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_s_service_mode_state_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_s_service_mode_state_s_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_stat_msg_op_s_operation_state_seq_s_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_s_operation_state_seq_s_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_s_operation_state_seq_s_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_stat_msg_op_s_operation_state_crc_s_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_op_s_operation_state_crc_s_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_s_operation_state_crc_s_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}

int pved_cls_stat_msg_op_m_pack(
    uint8_t *dst_p,
    const struct pved_cls_stat_msg_op_m_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(&dst_p[0], 0, 8);

    dst_p[0] |= pack_left_shift_u8(src_p->operation_state_m, 0u, 0xffu);
    dst_p[1] |= pack_left_shift_u8(src_p->lockout_aux_m, 0u, 0x03u);
    dst_p[1] |= pack_left_shift_u8(src_p->lockout_eh_steering_m, 2u, 0x0cu);
    dst_p[1] |= pack_left_shift_u8(src_p->lockout_program_change_m, 4u, 0x30u);
    dst_p[1] |= pack_left_shift_u8(src_p->lockout_device_change_m, 6u, 0xc0u);
    dst_p[2] |= pack_left_shift_u8(src_p->lockout_gps_m, 6u, 0xc0u);
    dst_p[3] |= pack_left_shift_u8(src_p->service_mode_state_m, 0u, 0xffu);
    dst_p[5] |= pack_left_shift_u8(src_p->operation_state_seq_m, 0u, 0x0fu);
    dst_p[6] |= pack_left_shift_u16(src_p->operation_state_crc_m, 0u, 0xffu);
    dst_p[7] |= pack_right_shift_u16(src_p->operation_state_crc_m, 8u, 0xffu);

    return (8);
}

int pved_cls_stat_msg_op_m_unpack(
    struct pved_cls_stat_msg_op_m_t *dst_p,
    const uint8_t *src_p,
    size_t size)
{
    if (size < 8u) {
        return (-EINVAL);
    }

    memset(dst_p, 0, sizeof(*dst_p));

    dst_p->operation_state_m |= unpack_right_shift_u8(src_p[0], 0u, 0xffu);
    dst_p->lockout_aux_m |= unpack_right_shift_u8(src_p[1], 0u, 0x03u);
    dst_p->lockout_eh_steering_m |= unpack_right_shift_u8(src_p[1], 2u, 0x0cu);
    dst_p->lockout_program_change_m |= unpack_right_shift_u8(src_p[1], 4u, 0x30u);
    dst_p->lockout_device_change_m |= unpack_right_shift_u8(src_p[1], 6u, 0xc0u);
    dst_p->lockout_gps_m |= unpack_right_shift_u8(src_p[2], 6u, 0xc0u);
    dst_p->service_mode_state_m |= unpack_right_shift_u8(src_p[3], 0u, 0xffu);
    dst_p->operation_state_seq_m |= unpack_right_shift_u8(src_p[5], 0u, 0x0fu);
    dst_p->operation_state_crc_m |= unpack_right_shift_u16(src_p[6], 0u, 0xffu);
    dst_p->operation_state_crc_m |= unpack_left_shift_u16(src_p[7], 8u, 0xffu);

    return (0);
}

uint8_t pved_cls_stat_msg_op_m_operation_state_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_m_operation_state_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_m_operation_state_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_stat_msg_op_m_lockout_aux_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_m_lockout_aux_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_m_lockout_aux_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_op_m_lockout_eh_steering_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_m_lockout_eh_steering_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_m_lockout_eh_steering_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_op_m_lockout_program_change_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_m_lockout_program_change_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_m_lockout_program_change_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_op_m_lockout_device_change_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_m_lockout_device_change_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_m_lockout_device_change_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_op_m_lockout_gps_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_m_lockout_gps_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_m_lockout_gps_m_is_in_range(uint8_t value)
{
    return (value <= 3u);
}

uint8_t pved_cls_stat_msg_op_m_service_mode_state_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_m_service_mode_state_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_m_service_mode_state_m_is_in_range(uint8_t value)
{
    (void)value;

    return (true);
}

uint8_t pved_cls_stat_msg_op_m_operation_state_seq_m_encode(double value)
{
    return (uint8_t)(value);
}

double pved_cls_stat_msg_op_m_operation_state_seq_m_decode(uint8_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_m_operation_state_seq_m_is_in_range(uint8_t value)
{
    return (value <= 15u);
}

uint16_t pved_cls_stat_msg_op_m_operation_state_crc_m_encode(double value)
{
    return (uint16_t)(value);
}

double pved_cls_stat_msg_op_m_operation_state_crc_m_decode(uint16_t value)
{
    return ((double)value);
}

bool pved_cls_stat_msg_op_m_operation_state_crc_m_is_in_range(uint16_t value)
{
    (void)value;

    return (true);
}
